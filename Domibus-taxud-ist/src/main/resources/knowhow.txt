C3
stopall managed servers from console
stopAdmin on machine 1
sqldevelopper as sysdba to db.

DROP USER DOMIBUS_TAXUD cascade;
create USER DOMIBUS_TAXUD identified by "Domi_005Bus!";
grant all privileges to DOMIBUS_TAXUD;
grant execute on dbms_xa to DOMIBUS_TAXUD;
grant select on pending_trans$ to DOMIBUS_TAXUD;
grant select on dba_2pc_pending to DOMIBUS_TAXUD;

SELECT sid, serial#, username, logon_time, (last_call_et / 60 / 60 / 24 ) "Days Inactive" FROM v$session WHERE username LIKE 'DOMIBUS_TAXUD';

ALTER SYSTEM KILL SESSION '862,4395';

SELECT 'ALTER SYSTEM KILL SESSION '||''''||sid||','||serial#||''''||';' FROM v$session WHERE username LIKE 'DOMIBUS_TAXUD';
connect domibus_taxud
execute script oracle10g-3.3.1.ddl on C1

To start c3:

nohup startAdmin.sh > nohupAdmin.out 2>&1 &
nohup startNodeManager.sh > nohupNodeManager.out 2>&1 &

upload https pmode
Send one message per c2 (6)
check that 12 messages are there.
Launch the test:

sudo /mnt/resource/apache-jmeter-3.2/bin/jmeter -n -t /mnt/resource/_apache-jmeter-3.2/Domibus_test_5000x30KB_tax.jmx
eDelLoad2017

rampup

screen sudo /mnt/resource/apache-jmeter-3.2/bin/jmeter -n -t /mnt/resource/apache-jmeter-3.2/Domibus_test_20_mins_rampup_30_mins_30KB_17tps.jmx

sudo /mnt/resource/_apache-jmeter-3.2/bin/jmeter -n -t /mnt/resource/_apache-jmeter-3.2/Domibus_test_5000x30KB_tax_pulled.jmx

tail -f /home/edelivery/logs/domibus.log

C2:

stop servers:

screen -r + CTRL/C

clear database:
mysql -h localhost -u root --password=eDelivery2017 domibus < /home/edelivery/dbscripts/delete_all_msgs.txt
screen /home/edelivery/domibus/domibus/bin/standalone.sh --server-config=standalone-full.xml
CTRL A+D

debug network.
/bin/sh /home/edelivery/domibus/domibus/bin/standalone.sh --server-config=standalone-full.xml -Djavax.net.debug=all

to clean wf queues :

goto Server: Standalone Server    Monitor: Subsystems    Subsystem: JMS Destinations in the console
user:wildfly
pwd:wildfly1


-Djavax.net.debug=all 

-- C2 sends a message to C3. C3 sends a message with a RefToMessageId set to first messageId. Both are USER_MESSAGES
-- Scenario:
--  T1. C3 receives a message (message1) from C2
--  T2. C3 responds with a signal ACK
--  T3. C3 sends a reply (message2) to C2 with refToMessageId=message1
--  T4. C3 gets the ACK from C2
--  DELAY1 = T3-T1
--  DELAY2 = T4-T1

set serveroutput on size 200000000;
clear screen
set serveroutput on
DECLARE
    RECEIVED_MESSAGE_DATE TIMESTAMP(6);
    REPLY_SEND_DATE TIMESTAMP(6);
    REPLY_ACK_DATE TIMESTAMP(6);
    ACK_RECEIVE_DATE TIMESTAMP(6);

    REPLY_MESSAGE_ID  VARCHAR2(255 BYTE);
    ACK_MESSAGE_ID VARCHAR2(255 BYTE);
    csv VARCHAR2(3000 BYTE);
    diff VARCHAR2(50 BYTE);
BEGIN
 -- DBMS_OUTPUT.ENABLE(); 
 DELETE  FROM MESSAGE_RESULT;
  csv := 'RECEIVED_MESSAGE_ID,RECEIVED_MESSAGE_DATE,REPLY_MESSAGE_ID,REPLY_SEND_DATE,DELAY1(REPLY_SEND_DATE-RECEIVED_MESSAGE_DATE),REPLY_MESSAGE_ID,REPLY_ACK_DATE,DELAY1(REPLY_ACK_DATE-RECEIVED_MESSAGE_DATE)';
  -- csv := csv||chr(13)||chr(10);
  dbms_output.put_line(csv);
    -- loop through all successfully sent messages
  FOR message_rec IN (select * FROM TB_MESSAGE_LOG where MESSAGE_STATUS='DOWNLOADED' AND MESSAGE_TYPE='USER_MESSAGE' AND MSH_ROLE='RECEIVING')
  LOOP
        --dbms_output.put_line('');
        --dbms_output.put_line('Received message id: ' || message_rec.MESSAGE_ID);
        csv := message_rec.MESSAGE_ID;
        -- retrieve sent date
        select RECEIVED into RECEIVED_MESSAGE_DATE FROM TB_MESSAGE_LOG where MESSAGE_ID=message_rec.MESSAGE_ID;
        --dbms_output.put_line('Received at: ' || RECEIVED_MESSAGE_DATE);
        csv := csv || ',' || RECEIVED_MESSAGE_DATE;
        BEGIN
            -- if there is a reply with refToMessageId, retrieve the date it was received
            select RECEIVED, MESSAGE_ID into REPLY_SEND_DATE, REPLY_MESSAGE_ID FROM TB_MESSAGE_LOG where MESSAGE_ID IN (select MESSAGE_ID FROM TB_MESSAGE_INFO where REF_TO_MESSAGE_ID=message_rec.MESSAGE_ID) AND MESSAGE_TYPE='USER_MESSAGE';
            --dbms_output.put_line('Reply message id: ' || REPLY_MESSAGE_ID);
            --dbms_output.put_line('Reply sent at: ' || REPLY_SEND_DATE);
            --dbms_output.put_line(REPLY_SEND_DATE - RECEIVED_MESSAGE_DATE);

            csv := csv || ',' || REPLY_MESSAGE_ID || ',' || REPLY_SEND_DATE;
            select (extract(day FROM REPLY_SEND_DATE - RECEIVED_MESSAGE_DATE)*24*60*60)+
                    (extract(hour FROM REPLY_SEND_DATE - RECEIVED_MESSAGE_DATE)*60*60)+
                    (extract(minute FROM REPLY_SEND_DATE - RECEIVED_MESSAGE_DATE)*60)+
                    extract(second FROM REPLY_SEND_DATE - RECEIVED_MESSAGE_DATE)
            into diff FROM dual;
            --dbms_output.put_line(diff);
            csv := csv ||  ',' || diff;

            select RECEIVED, MESSAGE_ID into ACK_RECEIVE_DATE, ACK_MESSAGE_ID FROM TB_MESSAGE_LOG where MESSAGE_ID IN (select MESSAGE_ID FROM TB_MESSAGE_INFO where REF_TO_MESSAGE_ID=REPLY_MESSAGE_ID) AND MESSAGE_TYPE='SIGNAL_MESSAGE';
            --dbms_output.put_line('Reply ack message id: ' || ACK_MESSAGE_ID);
            --dbms_output.put_line('Reply ack received at: ' || ACK_RECEIVE_DATE);
            --dbms_output.put_line(ACK_RECEIVE_DATE - RECEIVED_MESSAGE_DATE);
            csv := csv || ',' || ACK_MESSAGE_ID || ',' || ACK_RECEIVE_DATE;
            select (extract(day FROM ACK_RECEIVE_DATE - RECEIVED_MESSAGE_DATE)*24*60*60)+
                    (extract(hour FROM ACK_RECEIVE_DATE - RECEIVED_MESSAGE_DATE)*60*60)+
                    (extract(minute FROM ACK_RECEIVE_DATE - RECEIVED_MESSAGE_DATE)*60)+
                    extract(second FROM ACK_RECEIVE_DATE - RECEIVED_MESSAGE_DATE)
            into diff FROM dual;
            --dbms_output.put_line(diff);
            csv := csv ||  ',' || diff;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN -- there is no reply from C3
            csv := csv ||  ',' || 'NONE' || ',' || 'NULL' || ',' || 'NULL' ||  ',' || 'NULL' || ',' || 'NULL' || ',' || 'NULL';
            --dbms_output.put_line('No reply found.');
            WHEN OTHERS THEN
            csv := csv ||  ',' || 'OTHER' || ',' || 'NULL' || ',' || 'NULL' ||  ',' || 'NULL' || ',' || 'NULL' || ',' || 'NULL';
            --dbms_output.put_line('Others errors');
        END;
        --dbms_output.put_line('');
        insert into MESSAGE_RESULT(MESSAGE_STAT) values(csv);
        --dbms_output.put_line(csv);
        -- csv := csv||chr(13)||chr(10);
  END LOOP;
END;
/

CREATE TABLE "DOMIBUS_TAXUD"."MESSAGE_RESULT" 
   (	"MESSAGE_STAT" VARCHAR2(300 BYTE) NOT NULL);
 
CREATE TABLE "DOMIBUS_TAXUD"."MESSAGE_RESULT_SPLIT" 
   (	"INCOMING_MESS_ID" VARCHAR2(110 BYTE) NOT NULL ENABLE, 
	"INCOMING_MESS_RECEIVED_DATE" TIMESTAMP (6) NOT NULL ENABLE, 
	"OUTGOING_MESS_ID" VARCHAR2(110 BYTE) NOT NULL ENABLE, 
	"OUTGOING_MESS_SAVED_MESS" TIMESTAMP (6) NOT NULL ENABLE, 
	"OUTGOING_AK_ID" VARCHAR2(110 BYTE) NOT NULL ENABLE, 
	"OUTGOING_AK_RECEIVED_DATE" TIMESTAMP (6) NOT NULL ENABLE, 
	"INCOMING_OUTGOING_DIF" FLOAT(126) NOT NULL ENABLE, 
	"OUTGOING_ACK_DIF" FLOAT(126) NOT NULL ENABLE, 
	"INCOMING_AK_DIF" FLOAT(126) NOT NULL ENABLE, 
	"TEST" VARCHAR2(20 BYTE)
   )
 
   select    /*+ all_rows */
          count(*)                  as Wait_Event_Count
         ,sum(ah.time_waited)       as Total_Time_Waited
         ,ah.session_id             as SID
         ,ev.name                   as Event_Name
         ,ah.sql_id                    as SQL_ID
         ,ah.session_type           as Session_Type
         ,vsql.sql_text                      as sql_query
from     
          v$active_session_history  ah
         ,v$event_name              ev
         ,v$sqltext vsql
where     ah.sample_time between sysdate - 30/(24*60) and sysdate
and       ah.event#      = ev.event#(+)
and       ah.sql_id=vsql.sql_id(+)
group by 
          ev.name
         ,ah.session_id
         ,ah.sql_id
         ,ah.session_type
         ,vsql.sql_text
        order by sum(ah.time_waited) desc;
		
		ff713308-717c-409a-ac98-e0427019f8a6@domibus.eu,15-FEB-18 17.18.05.558000,b77e563c-759f-42e3-8692-dee20b3783b8@domibus.eu,15-FEB-18 17.18.06.976000,1.418,c2f6645e-7403-4692-961e-750bf564d26c@domibus.eu,15-FEB-18 17.18.09.539000,3.981


		-- push rampup
		sudo /mnt/resource/apache-jmeter-3.2/bin/jmeter -n -t /mnt/resource/apache-jmeter-3.2/Domibus_test_20_mins_rampup_30_mins_30KB_17tps.jmx
		-- pull rampup
		sudo /mnt/resource/apache-jmeter-3.2/bin/jmeter -n -t /mnt/resource/apache-jmeter-3.2/Domibus_test_20_mins_rampup_30_mins_30KB_10tps_pull.jmx
		
		select min(INCOMING_AK_DIF),max(INCOMING_AK_DIF),avg(INCOMING_AK_DIF)from MESSAGE_RESULT_SPLIT WHERE INCOMING_MESS_RECEIVED_DATE< TO_DATE( '02/15/2018 17:30','MM/DD/YYYY HH24:MI');

select SUBSTR(TO_CHAR(INCOMING_MESS_RECEIVED_DATE,'HH24')||':'||TO_CHAR(INCOMING_MESS_RECEIVED_DATE,'mi'),0,4)||'0' AS DVF,min(INCOMING_AK_DIF),max(INCOMING_AK_DIF),avg(INCOMING_AK_DIF) from MESSAGE_RESULT_SPLIT GROUP BY SUBSTR(TO_CHAR(INCOMING_MESS_RECEIVED_DATE,'HH24')||':'||TO_CHAR(INCOMING_MESS_RECEIVED_DATE,'mi'),0,4)||'0';

Clean WildFly web service notification queue
/home/edelivery/domibus/domibus/bin/jboss-cli.sh --connect
/subsystem=messaging/hornetq-server=default/jms-queue=DomibusNotifyBackendWebServiceQueue:remove-messages
/subsystem=messaging/hornetq-server=default/jms-queue=DomibusSendMessageQueue:remove-messages
/subsystem=messaging/hornetq-server=default/jms-queue=DomibusPullMessageQueue:remove-messages
/subsystem=messaging/hornetq-server=default/jms-queue=DomibusDLQ:remove-messages
quit



