--  *********************************************************************
--  Update Database Script
--  *********************************************************************
--  Change Log: src/main/resources/db/changelog-4.0.xml
--  Ran at: 9/28/18 2:58 PM
--  Against: null@offline:mysql?changeLogFile=/Users/idragusa/work/cef_git/domibus/Domibus-MSH-db/target/liquibase/changelog-4.0.mysql
--  Liquibase version: 3.5.3
--  *********************************************************************

--  Changeset src/main/resources/db/changelog-4.0.xml::1525081090763-1::Pion (generated)
CREATE TABLE TB_ACTION (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_ACTION PRIMARY KEY (ID_PK));

CREATE TABLE TB_ACTION_AUDIT (ID_PK INT AUTO_INCREMENT NOT NULL, AUDIT_TYPE VARCHAR(31) NOT NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, FROM_QUEUE VARCHAR(255) NULL, TO_QUEUE VARCHAR(255) NULL, CONSTRAINT PK_TB_ACTION_AUDIT PRIMARY KEY (ID_PK));

CREATE TABLE TB_AGREEMENT (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_AGREEMENT PRIMARY KEY (ID_PK));

CREATE TABLE TB_AUTHENTICATION_ENTRY (ID_PK INT AUTO_INCREMENT NOT NULL, CERTIFICATE_ID VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, PASSWD VARCHAR(255) NULL, AUTH_ROLES VARCHAR(255) NOT NULL, ORIGINAL_USER VARCHAR(255) NULL, BACKEND VARCHAR(255) NULL, CONSTRAINT PK_TB_AUTHENTICATION_ENTRY PRIMARY KEY (ID_PK));

CREATE TABLE TB_BACK_RCRITERIA_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, FK_BACKEND_FILTER INT NULL, PRIORITY INT NULL);

CREATE TABLE TB_BACKEND_FILTER (ID_PK INT AUTO_INCREMENT NOT NULL, BACKEND_NAME VARCHAR(255) NULL, PRIORITY INT NULL, CONSTRAINT PK_TB_BACKEND_FILTER PRIMARY KEY (ID_PK));

CREATE TABLE TB_BACKEND_FILTER_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, BACKEND_NAME VARCHAR(255) NULL, BACKENDNAME_MOD BIT(1) NULL, PRIORITY INT NULL, INDEX_MOD BIT(1) NULL, ROUTINGCRITERIAS_MOD BIT(1) NULL);

CREATE TABLE TB_BUSINESS_PROCESS (ID_PK INT AUTO_INCREMENT NOT NULL, CONSTRAINT PK_TB_BUSINESS_PROCESS PRIMARY KEY (ID_PK));

CREATE TABLE TB_CERTIFICATE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, CERTIFICATE_ALIAS VARCHAR(255) NOT NULL, NOT_VALID_BEFORE_DATE timestamp NULL, NOT_VALID_AFTER_DATE timestamp NULL, REVOKE_NOTIFICATION_DATE timestamp NULL, ALERT_IMM_NOTIFICATION_DATE timestamp NULL, ALERT_EXP_NOTIFICATION_DATE timestamp NULL, CERTIFICATE_STATUS VARCHAR(255) NOT NULL, CERTIFICATE_TYPE VARCHAR(255) NOT NULL, CONSTRAINT PK_TB_CERTIFICATE PRIMARY KEY (ID_PK));

CREATE TABLE TB_CONFIGURATION (ID_PK INT AUTO_INCREMENT NOT NULL, FK_BUSINESSPROCESSES INT NULL, FK_PARTY INT NULL, CONSTRAINT PK_TB_CONFIGURATION PRIMARY KEY (ID_PK));

CREATE TABLE TB_CONFIGURATION_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL);

CREATE TABLE TB_CONFIGURATION_RAW (ID_PK INT AUTO_INCREMENT NOT NULL, CONFIGURATION_DATE datetime NULL, XML BLOB NULL, DESCRIPTION VARCHAR(255) DEFAULT '' NULL, CONSTRAINT PK_TB_CONFIGURATION_RAW PRIMARY KEY (ID_PK));

CREATE TABLE TB_CONFIGURATION_RAW_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, CONFIGURATION_DATE timestamp NULL, CONFIGURATIONDATE_MOD BIT(1) NULL, DESCRIPTION VARCHAR(255) NULL, DESCRIPTION_MOD VARCHAR(255) NULL, XML BLOB NULL, XML_MOD BIT(1) NULL);

CREATE TABLE TB_ERROR (ID_PK INT AUTO_INCREMENT NOT NULL, CATEGORY VARCHAR(255) NULL, DESCRIPTION_LANG VARCHAR(255) NULL, DESCRIPTION_VALUE VARCHAR(255) NULL, ERROR_CODE VARCHAR(255) NULL, ERROR_DETAIL LONGTEXT NULL, ORIGIN VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, SEVERITY VARCHAR(255) NULL, SHORT_DESCRIPTION VARCHAR(255) NULL, SIGNALMESSAGE_ID INT NULL, CONSTRAINT PK_TB_ERROR PRIMARY KEY (ID_PK));

CREATE TABLE TB_ERROR_HANDLING (ID_PK INT AUTO_INCREMENT NOT NULL, BUSINESS_ERROR_NOTIFY_CONSUMER BIT(1) NULL, BUSINESS_ERROR_NOTIFY_PRODUCER BIT(1) NULL, DELIVERY_FAIL_NOTIFY_PRODUCER BIT(1) NULL, ERROR_AS_RESPONSE BIT(1) NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_ERROR_HANDLING PRIMARY KEY (ID_PK));

CREATE TABLE TB_ERROR_LOG (ID_PK INT AUTO_INCREMENT NOT NULL, ERROR_CODE VARCHAR(255) NULL, ERROR_DETAIL VARCHAR(255) NULL, ERROR_SIGNAL_MESSAGE_ID VARCHAR(255) NULL, MESSAGE_IN_ERROR_ID VARCHAR(255) NULL, MSH_ROLE VARCHAR(255) NULL, NOTIFIED datetime NULL, TIME_STAMP datetime NULL, CONSTRAINT PK_TB_ERROR_LOG PRIMARY KEY (ID_PK));

CREATE TABLE TB_JOIN_PAYLOAD_PROFILE (FK_PAYLOAD INT NOT NULL, FK_PROFILE INT NOT NULL);

CREATE TABLE TB_JOIN_PROCESS_INIT_PARTY (PROCESS_FK INT NOT NULL, PARTY_FK INT NOT NULL);

CREATE TABLE TB_JOIN_PROCESS_LEG (PROCESS_FK INT NOT NULL, LEG_FK INT NOT NULL);

CREATE TABLE TB_JOIN_PROCESS_RESP_PARTY (PROCESS_FK INT NOT NULL, PARTY_FK INT NOT NULL);

CREATE TABLE TB_JOIN_PROPERTY_SET (PROPERTY_FK INT NOT NULL, SET_FK INT NOT NULL);

CREATE TABLE TB_LEG (ID_PK INT AUTO_INCREMENT NOT NULL, COMPRESS_PAYLOADS BIT(1) NULL, NAME VARCHAR(255) NULL, FK_ACTION INT NULL, FK_MPC INT NULL, FK_ERROR_HANDLING INT NULL, FK_PAYLOAD_PROFILE INT NULL, FK_PROPERTY_SET INT NULL, FK_RECEPTION_AWARENESS INT NULL, FK_RELIABILITY INT NULL, FK_SECURITY INT NULL, FK_SERVICE INT NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_LEG PRIMARY KEY (ID_PK));

CREATE TABLE TB_LEG_TB_MPC (LegConfiguration_ID_PK INT NOT NULL, partyMpcMap_ID_PK INT NOT NULL, partyMpcMap_KEY INT NOT NULL);

CREATE TABLE TB_MEP (ID_PK INT AUTO_INCREMENT NOT NULL, LEG_COUNT INT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_MEP PRIMARY KEY (ID_PK));

CREATE TABLE TB_MEP_BINDING (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_MEP_BINDING PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_ACKNW (ID_PK INT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NULL, FROM_VALUE VARCHAR(255) NULL, TO_VALUE VARCHAR(255) NULL, CREATE_DATE datetime NULL, CREATE_USER VARCHAR(255) NULL, ACKNOWLEDGE_DATE datetime NULL, CONSTRAINT PK_TB_MESSAGE_ACKNW PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_ACKNW_PROP (ID_PK INT AUTO_INCREMENT NOT NULL, PROPERTY_NAME VARCHAR(255) NULL, PROPERTY_VALUE VARCHAR(255) NULL, FK_MSG_ACKNOWLEDGE INT NULL, CONSTRAINT PK_TB_MESSAGE_ACKNW_PROP PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_INFO (ID_PK INT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, TIME_STAMP datetime NULL, CONSTRAINT PK_TB_MESSAGE_INFO PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_LOG (ID_PK INT AUTO_INCREMENT NOT NULL, DELETED datetime NULL, MESSAGE_ID VARCHAR(255) NULL, MESSAGE_STATUS VARCHAR(255) NULL, MESSAGE_TYPE VARCHAR(255) NULL, MPC VARCHAR(255) NULL, MSH_ROLE VARCHAR(255) NULL, NEXT_ATTEMPT datetime NULL, NOTIFICATION_STATUS VARCHAR(255) NULL, RECEIVED datetime NULL, RESTORED datetime NULL, DOWNLOADED datetime NULL, FAILED datetime NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, BACKEND VARCHAR(255) NULL, ENDPOINT VARCHAR(255) NULL, CREATED_BY VARCHAR(255) NULL, MESSAGE_SUBTYPE VARCHAR(255) NULL, CONSTRAINT PK_TB_MESSAGE_LOG PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_PROPERTY (ID_PK INT AUTO_INCREMENT NOT NULL, DATATYPE VARCHAR(255) NULL, KEY_ VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_MESSAGE_PROPERTY PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGE_PROPERTY_SET (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_MESSAGE_PROPERTY_SET PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGING (ID_PK INT AUTO_INCREMENT NOT NULL, ID VARCHAR(255) NULL, SIGNAL_MESSAGE_ID INT NULL, USER_MESSAGE_ID INT NULL, CONSTRAINT PK_TB_MESSAGING PRIMARY KEY (ID_PK));

CREATE TABLE TB_MESSAGING_LOCK (ID_PK INT AUTO_INCREMENT NOT NULL, MESSAGE_TYPE VARCHAR(10) NULL, MESSAGE_RECEIVED datetime NULL, MESSAGE_STATE VARCHAR(10) NULL, MESSAGE_ID VARCHAR(255) NULL, INITIATOR VARCHAR(255) NULL, MPC VARCHAR(255) NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, NEXT_ATTEMPT datetime NULL, MESSAGE_STALED datetime NULL, CONSTRAINT PK_TB_MESSAGING_LOCK PRIMARY KEY (ID_PK));

CREATE TABLE TB_MPC (ID_PK INT AUTO_INCREMENT NOT NULL, DEFAULT_MPC BIT(1) NULL, IS_ENABLED BIT(1) NULL, name VARCHAR(255) NULL, QUALIFIED_NAME VARCHAR(255) NULL, RETENTION_DOWNLOADED INT NULL, RETENTION_UNDOWNLOADED INT NULL, FK_CONFIGURATION INT NULL, CONSTRAINT PK_TB_MPC PRIMARY KEY (ID_PK));

CREATE TABLE TB_PART_INFO (ID_PK INT AUTO_INCREMENT NOT NULL, BINARY_DATA LONGBLOB NULL, DESCRIPTION_LANG VARCHAR(255) NULL, DESCRIPTION_VALUE VARCHAR(255) NULL, HREF VARCHAR(255) NULL, IN_BODY BIT(1) NULL, SCHEMA_LOCATION VARCHAR(255) NULL, SCHEMA_NAMESPACE VARCHAR(255) NULL, SCHEMA_VERSION VARCHAR(255) NULL, PAYLOADINFO_ID INT NULL, FILENAME VARCHAR(255) NULL, MIME VARCHAR(255) NOT NULL, PART_ORDER INT DEFAULT 0 NOT NULL, CONSTRAINT PK_TB_PART_INFO PRIMARY KEY (ID_PK));

CREATE TABLE TB_PARTY (ID_PK INT AUTO_INCREMENT NOT NULL, ENDPOINT VARCHAR(255) NULL, NAME VARCHAR(255) NULL, PASSWORD VARCHAR(255) NULL, USERNAME VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_PARTY PRIMARY KEY (ID_PK));

CREATE TABLE TB_PARTY_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, ENDPOINT VARCHAR(255) NULL, ENDPOINT_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USERNAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL);

CREATE TABLE TB_PARTY_ID (ID_PK INT AUTO_INCREMENT NOT NULL, TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, TO_ID INT NULL, FROM_ID INT NULL, CONSTRAINT PK_TB_PARTY_ID PRIMARY KEY (ID_PK));

CREATE TABLE TB_PARTY_ID_TYPE (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_PARTY_ID_TYPE PRIMARY KEY (ID_PK));

CREATE TABLE TB_PARTY_ID_TYPE_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, VALUE VARCHAR(255) NULL, VALUE_MOD BIT(1) NULL);

CREATE TABLE TB_PARTY_IDENTIFIER (ID_PK INT AUTO_INCREMENT NOT NULL, PARTY_ID VARCHAR(255) NULL, FK_PARTY_ID_TYPE INT NULL, FK_PARTY INT NULL, CONSTRAINT PK_TB_PARTY_IDENTIFIER PRIMARY KEY (ID_PK));

CREATE TABLE TB_PARTY_IDENTIFIER_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, FK_PARTY INT NULL);

CREATE TABLE TB_PAYLOAD (ID_PK INT AUTO_INCREMENT NOT NULL, CID VARCHAR(255) NULL, IN_BODY BIT(1) NULL, MAX_SIZE INT NULL, MIME_TYPE VARCHAR(255) NULL, NAME VARCHAR(255) NULL, REQUIRED_ BIT(1) NULL, SCHEMA_FILE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_PAYLOAD PRIMARY KEY (ID_PK));

CREATE TABLE TB_PAYLOAD_PROFILE (ID_PK INT AUTO_INCREMENT NOT NULL, MAX_SIZE INT NULL, NAME VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_PAYLOAD_PROFILE PRIMARY KEY (ID_PK));

CREATE TABLE TB_PROCESS (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, FK_AGREEMENT INT NULL, FK_INITIATOR_ROLE INT NULL, FK_MEP INT NULL, FK_MEP_BINDING INT NULL, FK_RESPONDER_ROLE INT NULL, FK_BUSINESSPROCESS INT NULL, USE_DYNAMIC_INITIATOR BIT(1) NOT NULL, USE_DYNAMIC_RESPONDER BIT(1) NOT NULL, CONSTRAINT PK_TB_PROCESS PRIMARY KEY (ID_PK));

CREATE TABLE TB_PROPERTY (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NOT NULL, VALUE VARCHAR(255) NULL, MESSAGEPROPERTIES_ID INT NULL, PARTPROPERTIES_ID INT NULL, TYPE VARCHAR(255) NULL, CONSTRAINT PK_TB_PROPERTY PRIMARY KEY (ID_PK));

CREATE TABLE TB_RAWENVELOPE_LOG (ID_PK INT AUTO_INCREMENT NOT NULL, USERMESSAGE_ID_FK INT NULL, SIGNALMESSAGE_ID_FK INT NULL, RAW_XML LONGTEXT NULL, MESSAGE_ID VARCHAR(255) NULL, CONSTRAINT PK_TB_RAWENVELOPE_LOG PRIMARY KEY (ID_PK));

CREATE TABLE TB_RECEIPT (ID_PK INT AUTO_INCREMENT NOT NULL, CONSTRAINT PK_TB_RECEIPT PRIMARY KEY (ID_PK));

CREATE TABLE TB_RECEIPT_DATA (RECEIPT_ID INT NOT NULL, RAW_XML LONGTEXT NULL);

CREATE TABLE TB_RECEPTION_AWARENESS (ID_PK INT AUTO_INCREMENT NOT NULL, DUPLICATE_DETECTION BIT(1) NULL, NAME VARCHAR(255) NULL, RETRY_COUNT INT NULL, RETRY_TIMEOUT INT NULL, STRATEGY VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_RECEPTION_AWARENESS PRIMARY KEY (ID_PK));

CREATE TABLE TB_RELIABILITY (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, NON_REPUDIATION BIT(1) NULL, REPLY_PATTERN VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_RELIABILITY PRIMARY KEY (ID_PK));

CREATE TABLE TB_REV_CHANGES (ID_PK INT AUTO_INCREMENT NOT NULL, REV INT NULL, AUDIT_ORDER INT NULL, ENTIY_NAME VARCHAR(255) NULL, GROUP_NAME VARCHAR(255) NULL, ENTITY_ID VARCHAR(255) NULL, MODIFICATION_TYPE VARCHAR(255) NULL, CONSTRAINT PK_TB_REV_CHANGES PRIMARY KEY (ID_PK));

CREATE TABLE TB_REV_INFO (ID INT AUTO_INCREMENT NOT NULL, TIMESTAMP BIGINT NULL, REVISION_DATE timestamp NULL, USER_NAME VARCHAR(255) NULL, CONSTRAINT PK_TB_REV_INFO PRIMARY KEY (ID));

CREATE TABLE TB_ROLE (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_ROLE PRIMARY KEY (ID_PK));

CREATE TABLE TB_ROUTING_CRITERIA (ID_PK INT AUTO_INCREMENT NOT NULL, EXPRESSION VARCHAR(255) NULL, NAME VARCHAR(255) NULL, FK_BACKEND_FILTER INT NULL, PRIORITY INT NULL, CONSTRAINT PK_TB_ROUTING_CRITERIA PRIMARY KEY (ID_PK));

CREATE TABLE TB_ROUTING_CRITERIA_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, EXPRESSION VARCHAR(255) NULL, EXPRESSION_MOD BIT(1) NULL, NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL);

CREATE TABLE TB_SECURITY (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, POLICY VARCHAR(255) NULL, SIGNATURE_METHOD VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_SECURITY PRIMARY KEY (ID_PK));

CREATE TABLE TB_SEND_ATTEMPT (ID_PK INT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NOT NULL, START_DATE datetime NOT NULL, END_DATE datetime NOT NULL, STATUS VARCHAR(255) NOT NULL, ERROR VARCHAR(255) NULL, CONSTRAINT PK_TB_SEND_ATTEMPT PRIMARY KEY (ID_PK));

CREATE TABLE TB_SERVICE (ID_PK INT AUTO_INCREMENT NOT NULL, NAME VARCHAR(255) NULL, SERVICE_TYPE VARCHAR(255) NULL, VALUE VARCHAR(255) NULL, FK_BUSINESSPROCESS INT NULL, CONSTRAINT PK_TB_SERVICE PRIMARY KEY (ID_PK));

CREATE TABLE TB_SIGNAL_MESSAGE (ID_PK INT AUTO_INCREMENT NOT NULL, PULL_REQUEST_MPC VARCHAR(255) NULL, messageInfo_ID_PK INT NULL, receipt_ID_PK INT NULL, CONSTRAINT PK_TB_SIGNAL_MESSAGE PRIMARY KEY (ID_PK));

CREATE TABLE TB_USER (ID_PK BIGINT AUTO_INCREMENT NOT NULL, USER_EMAIL VARCHAR(255) NULL, USER_ENABLED BIT(1) NOT NULL, USER_PASSWORD VARCHAR(255) NOT NULL, USER_NAME VARCHAR(255) NOT NULL, OPTLOCK INT NULL, ATTEMPT_COUNT INT DEFAULT 0 NULL, SUSPENSION_DATE timestamp NULL, USER_DELETED BIT(1) DEFAULT 0 NOT NULL, CONSTRAINT PK_TB_USER PRIMARY KEY (ID_PK));

CREATE TABLE TB_USER_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, USER_ENABLED BIT(1) NULL, ACTIVE_MOD BIT(1) NULL, USER_DELETED BIT(1) NULL, DELETED_MOD BIT(1) NULL, USER_EMAIL VARCHAR(255) NULL, EMAIL_MOD BIT(1) NULL, USER_PASSWORD VARCHAR(255) NULL, PASSWORD_MOD BIT(1) NULL, USER_NAME VARCHAR(255) NULL, USERNAME_MOD BIT(1) NULL, OPTLOCK INT NULL, VERSION_MOD BIT(1) NULL, ROLES_MOD BIT(1) NULL);

CREATE TABLE TB_USER_MESSAGE (ID_PK INT AUTO_INCREMENT NOT NULL, COLLABORATION_INFO_ACTION VARCHAR(255) NULL, AGREEMENT_REF_PMODE VARCHAR(255) NULL, AGREEMENT_REF_TYPE VARCHAR(255) NULL, AGREEMENT_REF_VALUE VARCHAR(255) NULL, COLL_INFO_CONVERS_ID VARCHAR(255) NOT NULL, SERVICE_TYPE VARCHAR(255) NULL, SERVICE_VALUE VARCHAR(255) NULL, MPC VARCHAR(255) NULL, FROM_ROLE VARCHAR(255) NULL, TO_ROLE VARCHAR(255) NULL, messageInfo_ID_PK INT NULL, CONSTRAINT PK_TB_USER_MESSAGE PRIMARY KEY (ID_PK));

CREATE TABLE TB_USER_ROLE (ID_PK BIGINT AUTO_INCREMENT NOT NULL, ROLE_NAME VARCHAR(255) NOT NULL, CONSTRAINT PK_TB_USER_ROLE PRIMARY KEY (ID_PK));

CREATE TABLE TB_USER_ROLE_AUD (ID_PK INT NOT NULL, REV INT NOT NULL, REVTYPE TINYINT NULL, ROLE_NAME VARCHAR(255) NULL, NAME_MOD BIT(1) NULL, USERS_MOD BIT(1) NULL);

CREATE TABLE TB_USER_ROLES (USER_ID BIGINT NOT NULL, ROLE_ID BIGINT NOT NULL);

CREATE TABLE TB_USER_ROLES_AUD (REV INT NULL, REVTYPE TINYINT NULL, USER_ID INT NULL, ROLE_ID INT NULL);

ALTER TABLE TB_BACK_RCRITERIA_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_BACKEND_FILTER_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_CONFIGURATION_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_CONFIGURATION_RAW_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_LEG_TB_MPC ADD PRIMARY KEY (LegConfiguration_ID_PK, partyMpcMap_KEY);

ALTER TABLE TB_PARTY_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_PARTY_ID_TYPE_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_PARTY_IDENTIFIER_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_ROUTING_CRITERIA_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_ROLE_AUD ADD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_ROLES ADD PRIMARY KEY (USER_ID, ROLE_ID);

ALTER TABLE TB_CERTIFICATE ADD CONSTRAINT CERTIFICATE_ALIAS UNIQUE (CERTIFICATE_ALIAS, CERTIFICATE_TYPE);

ALTER TABLE TB_MESSAGING_LOCK ADD CONSTRAINT IDX_MESSAGE_LOCK_UNIQUE_ID UNIQUE (MESSAGE_ID);

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT UK_7h5nw411791gf4lg1yh6si1wd UNIQUE (partyMpcMap_ID_PK);

ALTER TABLE TB_MESSAGE_INFO ADD CONSTRAINT UK_ecrraoe83o1uqq0dn9424x7ln UNIQUE (MESSAGE_ID);

ALTER TABLE TB_USER_ROLE ADD CONSTRAINT UQ_ROLE_NAME UNIQUE (ROLE_NAME);

ALTER TABLE TB_USER ADD CONSTRAINT USER_NAME UNIQUE (USER_NAME);

CREATE INDEX FK_13k2eptp1ejp5othy1njrg3p8 ON TB_LEG(FK_RELIABILITY);

CREATE INDEX FK_277j83lgsq3nmwyhsw637ynd8 ON TB_MEP_BINDING(FK_BUSINESSPROCESS);

CREATE INDEX FK_2h31p0a2y6weg2grh70c9cyva ON TB_PROPERTY(MESSAGEPROPERTIES_ID);

CREATE INDEX FK_2sw6knalor7rpr04ye0o2r9ap ON TB_ROLE(FK_BUSINESSPROCESS);

CREATE INDEX FK_3emt6xaglh7676lpckiy6r1vb ON TB_PROCESS(FK_RESPONDER_ROLE);

CREATE INDEX FK_3sgaxwfr5koe3oldbbd62siwq ON TB_RECEPTION_AWARENESS(FK_BUSINESSPROCESS);

CREATE INDEX FK_433rgm5a446t59q6jkb885l3x ON TB_MESSAGING(USER_MESSAGE_ID);

CREATE INDEX FK_53gp9smtemqcuio8o9t10narm ON TB_MESSAGING(SIGNAL_MESSAGE_ID);

CREATE INDEX FK_62dt1y6o7od1t0iqn7dow8uq5 ON TB_CONFIGURATION(FK_BUSINESSPROCESSES);

CREATE INDEX FK_6hldnnqkmh6lui555t4n9fjiv ON TB_ACTION(FK_BUSINESSPROCESS);

CREATE INDEX FK_70m9kqpqab3rgk90wsuv9vn64 ON TB_AGREEMENT(FK_BUSINESSPROCESS);

CREATE INDEX FK_7p1g7sqvli1sj6k7vphjo9irc ON TB_PROCESS(FK_BUSINESSPROCESS);

CREATE INDEX FK_8nccae214mvs1kh5sgcj3y5oy ON TB_RECEIPT_DATA(RECEIPT_ID);

CREATE INDEX FK_8q319stwm1noijpb3jfl8jri8 ON TB_MPC(FK_CONFIGURATION);

CREATE INDEX FK_9hpmoewlitivcl8rw1joccuau ON TB_LEG(FK_SECURITY);

CREATE INDEX FK_BACKEND_FILTER_AUD_REV ON TB_BACKEND_FILTER_AUD(REV);

CREATE INDEX FK_BACK_RCRITERIA_AUD ON TB_BACK_RCRITERIA_AUD(REV);

CREATE INDEX FK_CONFIGURATION_AUD_REV ON TB_CONFIGURATION_AUD(REV);

CREATE INDEX FK_CONFIGURATION_RAW_AUD ON TB_CONFIGURATION_RAW_AUD(REV);

CREATE INDEX FK_MSG_ACK_PROP_MSG_ACK ON TB_MESSAGE_ACKNW_PROP(FK_MSG_ACKNOWLEDGE);

CREATE INDEX FK_PARTY_AUD_REV ON TB_PARTY_AUD(REV);

CREATE INDEX FK_PARTY_IDENTIFIER_AUD_REV ON TB_PARTY_IDENTIFIER_AUD(REV);

CREATE INDEX FK_PARTY_ID_TYPE_AUD_REV ON TB_PARTY_ID_TYPE_AUD(REV);

CREATE INDEX FK_REV_CHANGES_REV ON TB_REV_CHANGES(REV);

CREATE INDEX FK_ROUTING_CRITERIA_AUD_REV ON TB_ROUTING_CRITERIA_AUD(REV);

CREATE INDEX FK_USER_AUD_REV ON TB_USER_AUD(REV);

CREATE INDEX FK_USER_ROLE_AUD ON TB_USER_ROLE_AUD(REV);

CREATE INDEX FK_advgudix024irqpuge4dl9iqf ON TB_PARTY_ID_TYPE(FK_BUSINESSPROCESS);

CREATE INDEX FK_am7bwsm92se3nvclbeiep5vwg ON TB_LEG(FK_PAYLOAD_PROFILE);

CREATE INDEX FK_asjdl57budmuwmj3611969jpp ON TB_JOIN_PROCESS_INIT_PARTY(PARTY_FK);

CREATE INDEX FK_be4xc1069qyw2klhvm3xmg26s ON TB_USER_MESSAGE(messageInfo_ID_PK);

CREATE INDEX FK_c08ljjwi4p9dx1rjtcdbe1sfu ON TB_SIGNAL_MESSAGE(messageInfo_ID_PK);

CREATE INDEX FK_cloyy9k391vhsup85iwr8ixiv ON TB_PARTY(FK_BUSINESSPROCESS);

CREATE INDEX FK_cwylvg6ernwba61mo3yagmkg8 ON TB_PROPERTY(PARTPROPERTIES_ID);

CREATE INDEX FK_d9el0l8u1gm5oeu67nqrkherq ON TB_PAYLOAD(FK_BUSINESSPROCESS);

CREATE INDEX FK_desr6xtdp1lp41d5venlhf4bc ON TB_PARTY_IDENTIFIER(FK_PARTY);

CREATE INDEX FK_dgtgtg41yrfebyysmkyi1gcaa ON TB_LEG(FK_ACTION);

CREATE INDEX FK_e7ehghifrns83w6v3tps7vpii ON TB_PARTY_IDENTIFIER(FK_PARTY_ID_TYPE);

CREATE INDEX FK_eiy3f9ahx0kdx4wxoi6prytn9 ON TB_MESSAGE_PROPERTY_SET(FK_BUSINESSPROCESS);

CREATE INDEX FK_ekk8pn89y50g22kd3gpja7j39 ON TB_JOIN_PROPERTY_SET(PROPERTY_FK);

CREATE INDEX FK_epmxkh8u7jnw5pbyj47sirmlh ON TB_MEP(FK_BUSINESSPROCESS);

CREATE INDEX FK_fkftd5orw2etiu4ghmn3mhx9i ON TB_PARTY_ID(FROM_ID);

CREATE INDEX FK_fpxbdc63gifacrd4qb6afrqyw ON TB_JOIN_PROCESS_LEG(PROCESS_FK);

CREATE INDEX FK_fwrq81cctu2nh0qeprmpvker9 ON TB_SECURITY(FK_BUSINESSPROCESS);

CREATE INDEX FK_g20eow5f2cke3avsrg6qpkuxv ON TB_JOIN_PAYLOAD_PROFILE(FK_PROFILE);

CREATE INDEX FK_gh98q07kcjl7wdaon9ggifqux ON TB_JOIN_PROCESS_LEG(LEG_FK);

CREATE INDEX FK_hlb2y2prpm52ssynn22h3swsr ON TB_JOIN_PROCESS_RESP_PARTY(PROCESS_FK);

CREATE INDEX FK_i7gei6bdr2cdn61hdoplxbu7p ON TB_ROUTING_CRITERIA(FK_BACKEND_FILTER);

CREATE INDEX FK_j0y3fcediqx5but8jbscy59kw ON TB_LEG(FK_ERROR_HANDLING);

CREATE INDEX FK_j7lab5n5suklcldqhxn8jl2jo ON TB_PROCESS(FK_MEP);

CREATE INDEX FK_kjanlcdeap7nirdigr7rt7p4v ON TB_PROCESS(FK_AGREEMENT);

CREATE INDEX FK_kkhxs36rw15aygpn00nvvgyxg ON TB_SERVICE(FK_BUSINESSPROCESS);

CREATE INDEX FK_kv2c5k41apdlvc6i18ar57abe ON TB_LEG(FK_SERVICE);

CREATE INDEX FK_kyn19swm143m96in317sr97h2 ON TB_JOIN_PROCESS_RESP_PARTY(PARTY_FK);

CREATE INDEX FK_l1mmhs1tbt8pw7vx5teuytjvj ON TB_ERROR_HANDLING(FK_BUSINESSPROCESS);

CREATE INDEX FK_le4rxnki51eak6xetc7fq8sri ON TB_LEG(FK_PROPERTY_SET);

CREATE INDEX FK_lnnplhiawxx7wlt43ye3pej00 ON TB_RELIABILITY(FK_BUSINESSPROCESS);

CREATE INDEX FK_lynom7rxkc0t1xfl0nowxpeuj ON TB_PAYLOAD_PROFILE(FK_BUSINESSPROCESS);

CREATE INDEX FK_m6uu2y6g9buet3o3k1n4qxwec ON TB_SIGNAL_MESSAGE(receipt_ID_PK);

CREATE INDEX FK_mk54xe43f3hokh7fjl3w66efk ON TB_JOIN_PROPERTY_SET(SET_FK);

CREATE INDEX FK_orddltv2g3lq79eu48c2mc2fy ON TB_LEG_TB_MPC(partyMpcMap_KEY);

CREATE INDEX FK_ot8jfkotd6qu7jrdaptrohbn8 ON TB_JOIN_PROCESS_INIT_PARTY(PROCESS_FK);

CREATE INDEX FK_ppvxyurcvfy71fvejw9bosghw ON TB_LEG(FK_MPC);

CREATE INDEX FK_prrcmi4grm4txhfsfnfhgq1k1 ON TB_ERROR(SIGNALMESSAGE_ID);

CREATE INDEX FK_q0l3ej6ruqcfutru2securq9l ON TB_JOIN_PAYLOAD_PROFILE(FK_PAYLOAD);

CREATE INDEX FK_q1jfsxfoj3nl7hii3co7bu0fr ON TB_PROCESS(FK_INITIATOR_ROLE);

CREATE INDEX FK_q3gapfc1e7hfbgmo0nebj4k1n ON TB_CONFIGURATION(FK_PARTY);

CREATE INDEX FK_r2swpqof7636vveqt0dxl89dp ON TB_LEG(FK_BUSINESSPROCESS);

CREATE INDEX FK_rj8h1b65vnjjgyfcjnvswkguh ON TB_MESSAGE_PROPERTY(FK_BUSINESSPROCESS);

CREATE INDEX FK_rlbjstvo4gpdcp6ysv9mofqxj ON TB_LEG(FK_RECEPTION_AWARENESS);

CREATE INDEX FK_signalmsg_id_fk_rawenv_id ON TB_RAWENVELOPE_LOG(SIGNALMESSAGE_ID_FK);

CREATE INDEX FK_tp11d8fg7cv1fwf5xkvwqpp34 ON TB_PROCESS(FK_MEP_BINDING);

CREATE INDEX FK_tq6lbn3mp0vsfc6qqu7wxy54g ON TB_PART_INFO(PAYLOADINFO_ID);

CREATE INDEX FK_usermsg_id_fk_rawenv_id ON TB_RAWENVELOPE_LOG(USERMESSAGE_ID_FK);

CREATE INDEX FK_ylub8lptgvsch02mj71euuil ON TB_PARTY_ID(TO_ID);

CREATE INDEX IDX_MESSAGE_INFO_R_T_M_ID ON TB_MESSAGE_INFO(REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MESSAGE_LOCK_SEARCH ON TB_MESSAGING_LOCK(MESSAGE_TYPE, MESSAGE_STATE, INITIATOR, MPC, NEXT_ATTEMPT);

CREATE INDEX IDX_MESSAGE_LOG_M_STATUS ON TB_MESSAGE_LOG(MESSAGE_STATUS);

CREATE INDEX IDX_MESSAGE_LOG_RECEIVED ON TB_MESSAGE_LOG(RECEIVED);

CREATE INDEX IDX_PARTY_ID_VALUE ON TB_PARTY_ID(VALUE);

CREATE INDEX IDX_PROPERTY_NAME ON TB_PROPERTY(NAME);

CREATE INDEX IDX_RAWENVELOPE_MESSAGE_ID ON TB_RAWENVELOPE_LOG(MESSAGE_ID);

CREATE INDEX IDX_ROLE_ID ON TB_USER_ROLES(ROLE_ID);

CREATE INDEX IDX_TB_ML_MSG_ID ON TB_MESSAGE_LOG(MESSAGE_ID);

CREATE INDEX IDX_USER_ID ON TB_USER_ROLES(USER_ID);

CREATE INDEX UK_bpeflt902ybu9nshba2fjpv9d ON TB_MESSAGE_LOG(MSH_ROLE);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_13k2eptp1ejp5othy1njrg3p8 FOREIGN KEY (FK_RELIABILITY) REFERENCES TB_RELIABILITY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MEP_BINDING ADD CONSTRAINT FK_277j83lgsq3nmwyhsw637ynd8 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROPERTY ADD CONSTRAINT FK_2h31p0a2y6weg2grh70c9cyva FOREIGN KEY (MESSAGEPROPERTIES_ID) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ROLE ADD CONSTRAINT FK_2sw6knalor7rpr04ye0o2r9ap FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_3emt6xaglh7676lpckiy6r1vb FOREIGN KEY (FK_RESPONDER_ROLE) REFERENCES TB_ROLE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_RECEPTION_AWARENESS ADD CONSTRAINT FK_3sgaxwfr5koe3oldbbd62siwq FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MESSAGING ADD CONSTRAINT FK_433rgm5a446t59q6jkb885l3x FOREIGN KEY (USER_MESSAGE_ID) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MESSAGING ADD CONSTRAINT FK_53gp9smtemqcuio8o9t10narm FOREIGN KEY (SIGNAL_MESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_CONFIGURATION ADD CONSTRAINT FK_62dt1y6o7od1t0iqn7dow8uq5 FOREIGN KEY (FK_BUSINESSPROCESSES) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ACTION ADD CONSTRAINT FK_6hldnnqkmh6lui555t4n9fjiv FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_AGREEMENT ADD CONSTRAINT FK_70m9kqpqab3rgk90wsuv9vn64 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_7h5nw411791gf4lg1yh6si1wd FOREIGN KEY (partyMpcMap_ID_PK) REFERENCES TB_MPC (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_7p1g7sqvli1sj6k7vphjo9irc FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_RECEIPT_DATA ADD CONSTRAINT FK_8nccae214mvs1kh5sgcj3y5oy FOREIGN KEY (RECEIPT_ID) REFERENCES TB_RECEIPT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MPC ADD CONSTRAINT FK_8q319stwm1noijpb3jfl8jri8 FOREIGN KEY (FK_CONFIGURATION) REFERENCES TB_CONFIGURATION (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_9hpmoewlitivcl8rw1joccuau FOREIGN KEY (FK_SECURITY) REFERENCES TB_SECURITY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_BACKEND_FILTER_AUD ADD CONSTRAINT FK_BACKEND_FILTER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_BACK_RCRITERIA_AUD ADD CONSTRAINT FK_BACK_RCRITERIA_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_CONFIGURATION_AUD ADD CONSTRAINT FK_CONFIGURATION_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_CONFIGURATION_RAW_AUD ADD CONSTRAINT FK_CONFIGURATION_RAW_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MESSAGE_ACKNW_PROP ADD CONSTRAINT FK_MSG_ACK_PROP_MSG_ACK FOREIGN KEY (FK_MSG_ACKNOWLEDGE) REFERENCES TB_MESSAGE_ACKNW (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_AUD ADD CONSTRAINT FK_PARTY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_IDENTIFIER_AUD ADD CONSTRAINT FK_PARTY_IDENTIFIER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_ID_TYPE_AUD ADD CONSTRAINT FK_PARTY_ID_TYPE_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_REV_CHANGES ADD CONSTRAINT FK_REV_CHANGES_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ROUTING_CRITERIA_AUD ADD CONSTRAINT FK_ROUTING_CRITERIA_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_USER_AUD ADD CONSTRAINT FK_USER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_ROLE FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_USER FOREIGN KEY (ROLE_ID) REFERENCES TB_USER_ROLE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_USER_ROLE_AUD ADD CONSTRAINT FK_USER_ROLE_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_ID_TYPE ADD CONSTRAINT FK_advgudix024irqpuge4dl9iqf FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_am7bwsm92se3nvclbeiep5vwg FOREIGN KEY (FK_PAYLOAD_PROFILE) REFERENCES TB_PAYLOAD_PROFILE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_asjdl57budmuwmj3611969jpp FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_be4xc1069qyw2klhvm3xmg26s FOREIGN KEY (messageInfo_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_c08ljjwi4p9dx1rjtcdbe1sfu FOREIGN KEY (messageInfo_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY ADD CONSTRAINT FK_cloyy9k391vhsup85iwr8ixiv FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROPERTY ADD CONSTRAINT FK_cwylvg6ernwba61mo3yagmkg8 FOREIGN KEY (PARTPROPERTIES_ID) REFERENCES TB_PART_INFO (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PAYLOAD ADD CONSTRAINT FK_d9el0l8u1gm5oeu67nqrkherq FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_IDENTIFIER ADD CONSTRAINT FK_desr6xtdp1lp41d5venlhf4bc FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_dgtgtg41yrfebyysmkyi1gcaa FOREIGN KEY (FK_ACTION) REFERENCES TB_ACTION (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_IDENTIFIER ADD CONSTRAINT FK_e7ehghifrns83w6v3tps7vpii FOREIGN KEY (FK_PARTY_ID_TYPE) REFERENCES TB_PARTY_ID_TYPE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MESSAGE_PROPERTY_SET ADD CONSTRAINT FK_eiy3f9ahx0kdx4wxoi6prytn9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROPERTY_SET ADD CONSTRAINT FK_ekk8pn89y50g22kd3gpja7j39 FOREIGN KEY (PROPERTY_FK) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MEP ADD CONSTRAINT FK_epmxkh8u7jnw5pbyj47sirmlh FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_ID ADD CONSTRAINT FK_fkftd5orw2etiu4ghmn3mhx9i FOREIGN KEY (FROM_ID) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_LEG ADD CONSTRAINT FK_fpxbdc63gifacrd4qb6afrqyw FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_SECURITY ADD CONSTRAINT FK_fwrq81cctu2nh0qeprmpvker9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_g20eow5f2cke3avsrg6qpkuxv FOREIGN KEY (FK_PROFILE) REFERENCES TB_PAYLOAD (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_LEG ADD CONSTRAINT FK_gh98q07kcjl7wdaon9ggifqux FOREIGN KEY (LEG_FK) REFERENCES TB_LEG (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_hlb2y2prpm52ssynn22h3swsr FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ROUTING_CRITERIA ADD CONSTRAINT FK_i7gei6bdr2cdn61hdoplxbu7p FOREIGN KEY (FK_BACKEND_FILTER) REFERENCES TB_BACKEND_FILTER (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_j0y3fcediqx5but8jbscy59kw FOREIGN KEY (FK_ERROR_HANDLING) REFERENCES TB_ERROR_HANDLING (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_j7lab5n5suklcldqhxn8jl2jo FOREIGN KEY (FK_MEP) REFERENCES TB_MEP (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_kjanlcdeap7nirdigr7rt7p4v FOREIGN KEY (FK_AGREEMENT) REFERENCES TB_AGREEMENT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_SERVICE ADD CONSTRAINT FK_kkhxs36rw15aygpn00nvvgyxg FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_kv2c5k41apdlvc6i18ar57abe FOREIGN KEY (FK_SERVICE) REFERENCES TB_SERVICE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_kyn19swm143m96in317sr97h2 FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ERROR_HANDLING ADD CONSTRAINT FK_l1mmhs1tbt8pw7vx5teuytjvj FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_le4rxnki51eak6xetc7fq8sri FOREIGN KEY (FK_PROPERTY_SET) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_RELIABILITY ADD CONSTRAINT FK_lnnplhiawxx7wlt43ye3pej00 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PAYLOAD_PROFILE ADD CONSTRAINT FK_lynom7rxkc0t1xfl0nowxpeuj FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_m6uu2y6g9buet3o3k1n4qxwec FOREIGN KEY (receipt_ID_PK) REFERENCES TB_RECEIPT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROPERTY_SET ADD CONSTRAINT FK_mk54xe43f3hokh7fjl3w66efk FOREIGN KEY (SET_FK) REFERENCES TB_MESSAGE_PROPERTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_nylcxsy1f9cn3tdskh97h8pt1 FOREIGN KEY (LegConfiguration_ID_PK) REFERENCES TB_LEG (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_orddltv2g3lq79eu48c2mc2fy FOREIGN KEY (partyMpcMap_KEY) REFERENCES TB_PARTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_ot8jfkotd6qu7jrdaptrohbn8 FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_ppvxyurcvfy71fvejw9bosghw FOREIGN KEY (FK_MPC) REFERENCES TB_MPC (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_ERROR ADD CONSTRAINT FK_prrcmi4grm4txhfsfnfhgq1k1 FOREIGN KEY (SIGNALMESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_q0l3ej6ruqcfutru2securq9l FOREIGN KEY (FK_PAYLOAD) REFERENCES TB_PAYLOAD_PROFILE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_q1jfsxfoj3nl7hii3co7bu0fr FOREIGN KEY (FK_INITIATOR_ROLE) REFERENCES TB_ROLE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_CONFIGURATION ADD CONSTRAINT FK_q3gapfc1e7hfbgmo0nebj4k1n FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_r2swpqof7636vveqt0dxl89dp FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_MESSAGE_PROPERTY ADD CONSTRAINT FK_rj8h1b65vnjjgyfcjnvswkguh FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_LEG ADD CONSTRAINT FK_rlbjstvo4gpdcp6ysv9mofqxj FOREIGN KEY (FK_RECEPTION_AWARENESS) REFERENCES TB_RECEPTION_AWARENESS (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_RAWENVELOPE_LOG ADD CONSTRAINT FK_signalmsg_id_fk_rawenv_id FOREIGN KEY (SIGNALMESSAGE_ID_FK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_tp11d8fg7cv1fwf5xkvwqpp34 FOREIGN KEY (FK_MEP_BINDING) REFERENCES TB_MEP_BINDING (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PART_INFO ADD CONSTRAINT FK_tq6lbn3mp0vsfc6qqu7wxy54g FOREIGN KEY (PAYLOADINFO_ID) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_RAWENVELOPE_LOG ADD CONSTRAINT FK_usermsg_id_fk_rawenv_id FOREIGN KEY (USERMESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE TB_PARTY_ID ADD CONSTRAINT FK_ylub8lptgvsch02mj71euuil FOREIGN KEY (TO_ID) REFERENCES TB_USER_MESSAGE (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

CREATE OR REPLACE VIEW V_AUDIT_DETAIL AS SELECT
            DISTINCT rc.GROUP_NAME as AUDIT_TYPE ,
            rc.MODIFICATION_TYPE as ACTION_TYPE,
            ri.USER_NAME as USER_NAME ,
            ri.REVISION_DATE as AUDIT_DATE,
            CAST(rc.ENTITY_ID AS CHAR(255)) AS ID,
            CAST(ri.ID AS CHAR(11)) AS REV_ID
            FROM TB_REV_INFO ri, TB_REV_CHANGES rc
            WHERE ri.ID=rc.REV
            UNION
            SELECT aa.AUDIT_TYPE,aa.MODIFICATION_TYPE,aa.USER_NAME,aa.REVISION_DATE,aa.ENTITY_ID,'1' FROM
            TB_ACTION_AUDIT aa;

CREATE OR REPLACE VIEW V_AUDIT AS SELECT *
            FROM V_AUDIT_DETAIL VAD
            ORDER BY VAD.AUDIT_DATE DESC;

--  Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-2144_1::thomas dussart
INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME) VALUES ('1', 'ROLE_ADMIN');

INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME) VALUES ('2', 'ROLE_USER');

--  Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3234::CatalinEnache
CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID ON TB_PROPERTY(NAME, MESSAGEPROPERTIES_ID);

CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID_VAL ON TB_PROPERTY(NAME, MESSAGEPROPERTIES_ID, VALUE);

CREATE INDEX IDX_MSG_LOG_RCV_MSG_ID ON TB_MESSAGE_LOG(RECEIVED, MESSAGE_ID);

--  Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3303::dussath
CREATE TABLE TB_ALERT (ID_PK INT AUTO_INCREMENT NOT NULL, ALERT_TYPE VARCHAR(50) NOT NULL, ATTEMPTS_NUMBER INT NULL, MAX_ATTEMPTS_NUMBER INT NOT NULL, PROCESSED BIT(1) NULL, PROCESSED_TIME timestamp NULL, CREATION_TIME timestamp NULL, REPORTING_TIME timestamp NULL, REPORTING_TIME_FAILURE timestamp NULL, NEXT_ATTEMPT timestamp NULL, ALERT_STATUS VARCHAR(50) NOT NULL, ALERT_LEVEL VARCHAR(20) NOT NULL, CONSTRAINT PK_TB_ALERT PRIMARY KEY (ID_PK));

CREATE TABLE TB_EVENT (ID_PK INT AUTO_INCREMENT NOT NULL, EVENT_TYPE VARCHAR(50) NOT NULL, REPORTING_TIME timestamp NULL, CONSTRAINT PK_TB_EVENT PRIMARY KEY (ID_PK));

CREATE TABLE TB_EVENT_PROPERTY (ID_PK INT AUTO_INCREMENT NOT NULL, PROPERTY_TYPE VARCHAR(50) NOT NULL, FK_EVENT INT NOT NULL, DTYPE VARCHAR(31) NULL, STRING_VALUE VARCHAR(255) NULL, DATE_VALUE timestamp NULL, CONSTRAINT PK_TB_EVENT_PROPERTY PRIMARY KEY (ID_PK));

CREATE INDEX IDX_FK_EVENT_PROPERTY ON TB_EVENT_PROPERTY(FK_EVENT);

ALTER TABLE TB_EVENT_PROPERTY ADD CONSTRAINT FK_EVENT_PROPERTY_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

CREATE TABLE TB_EVENT_ALERT (FK_EVENT INT NULL, FK_ALERT INT NULL);

ALTER TABLE TB_EVENT_ALERT ADD PRIMARY KEY (FK_EVENT, FK_ALERT);

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_EVENT_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

CREATE INDEX IDX_FK_EVENT ON TB_EVENT_ALERT(FK_EVENT);

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_ALERT_ID FOREIGN KEY (FK_ALERT) REFERENCES TB_ALERT (ID_PK) ON UPDATE NO ACTION ON DELETE NO ACTION;

CREATE INDEX IDX_FK_ALERT ON TB_EVENT_ALERT(FK_ALERT);

--  Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3361::CatalinEnache
CREATE TABLE TB_MESSAGE_UI (ID_PK INT AUTO_INCREMENT NOT NULL, MESSAGE_ID VARCHAR(255) NULL, MESSAGE_STATUS VARCHAR(255) NULL, NOTIFICATION_STATUS VARCHAR(255) NOT NULL, MSH_ROLE VARCHAR(255) NOT NULL, MESSAGE_TYPE VARCHAR(255) NOT NULL, DELETED datetime NULL, RECEIVED datetime NULL, SEND_ATTEMPTS INT NULL, SEND_ATTEMPTS_MAX INT NULL, NEXT_ATTEMPT datetime NULL, CONVERSATION_ID VARCHAR(255) NULL, FROM_ID VARCHAR(255) NOT NULL, TO_ID VARCHAR(255) NOT NULL, FROM_SCHEME VARCHAR(255) NULL, TO_SCHEME VARCHAR(255) NULL, REF_TO_MESSAGE_ID VARCHAR(255) NULL, FAILED datetime NULL, RESTORED datetime NULL, MESSAGE_SUBTYPE VARCHAR(255) NULL, LAST_MODIFIED timestamp DEFAULT NOW() NULL, LAST_MODIFIED2 timestamp DEFAULT NOW() NULL, CONSTRAINT PK_TB_MESSAGE_UI PRIMARY KEY (ID_PK));

ALTER TABLE TB_MESSAGE_UI ADD CONSTRAINT UNI_MSG_UI_MSG_ID UNIQUE (MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_STS_TYPE_STYPE_RCV ON TB_MESSAGE_UI(MESSAGE_STATUS, MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TYPE_STYPE_RCV ON TB_MESSAGE_UI(MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TYPE_RCV ON TB_MESSAGE_UI(MESSAGE_TYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_MSH_ROLE ON TB_MESSAGE_UI(MSH_ROLE);

CREATE INDEX IDX_MSG_UI_FROM_SCHEME ON TB_MESSAGE_UI(FROM_SCHEME);

CREATE INDEX IDX_MSG_UI_TO_SCHEME ON TB_MESSAGE_UI(TO_SCHEME);

CREATE INDEX IDX_MSG_UI_FROM_ID ON TB_MESSAGE_UI(FROM_ID);

CREATE INDEX IDX_MSG_UI_TO_ID ON TB_MESSAGE_UI(TO_ID);

CREATE INDEX IDX_MSG_UI_REF_MSG_ID ON TB_MESSAGE_UI(REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_CONV_ID ON TB_MESSAGE_UI(CONVERSATION_ID);

--  Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3361-2::CatalinEnache
CREATE OR REPLACE VIEW V_MESSAGE_UI_DIFF AS SELECT
        message_log.MESSAGE_ID,
        message_log.MESSAGE_STATUS,
        message_log.NOTIFICATION_STATUS,
        message_log.MSH_ROLE,
        message_log.MESSAGE_TYPE,
        message_log.DELETED,
        message_log.RECEIVED,
        message_log.SEND_ATTEMPTS,
        message_log.SEND_ATTEMPTS_MAX,
        message_log.NEXT_ATTEMPT,
        user_message.COLL_INFO_CONVERS_ID AS CONVERSATION_ID,
        partyid5_.VALUE AS FROM_ID,
        partyid6_.VALUE AS TO_ID,
        property3_.VALUE AS FROM_SCHEME,
        property4_.VALUE AS TO_SCHEME,
        message_info.REF_TO_MESSAGE_ID,
        message_log.FAILED,
        message_log.RESTORED,
        message_log.MESSAGE_SUBTYPE
        FROM
        TB_MESSAGE_LOG message_log
        LEFT OUTER JOIN TB_MESSAGE_INFO message_info ON message_log.MESSAGE_ID = message_info.MESSAGE_ID
        CROSS JOIN TB_USER_MESSAGE user_message
        LEFT OUTER JOIN TB_PROPERTY property3_ ON user_message.ID_PK = property3_.MESSAGEPROPERTIES_ID
        LEFT OUTER JOIN TB_PROPERTY property4_ ON user_message.ID_PK = property4_.MESSAGEPROPERTIES_ID
        LEFT OUTER JOIN TB_PARTY_ID partyid5_ ON user_message.ID_PK = partyid5_.FROM_ID
        LEFT OUTER JOIN TB_PARTY_ID partyid6_ ON user_message.ID_PK = partyid6_.TO_ID

        LEFT JOIN TB_MESSAGE_UI flat_table ON message_log.message_id <=> flat_table.message_id
        AND message_log.message_Status <=> flat_table.message_status
        AND message_log.NOTIFICATION_STATUS <=> flat_table.NOTIFICATION_STATUS
        AND message_log.MSH_ROLE <=> flat_table.MSH_ROLE
        AND message_log.MESSAGE_TYPE <=> flat_table.MESSAGE_TYPE
        AND message_log.DELETED <=> flat_table.DELETED
        AND message_log.RECEIVED <=> flat_table.RECEIVED
        AND message_log.SEND_ATTEMPTS <=> flat_table.SEND_ATTEMPTS
        AND message_log.SEND_ATTEMPTS_MAX <=> flat_table.SEND_ATTEMPTS_MAX
        AND message_log.NEXT_ATTEMPT <=> flat_table.NEXT_ATTEMPT
        AND user_message.COLL_INFO_CONVERS_ID <=> flat_table.CONVERSATION_ID
        AND partyid5_.VALUE <=> flat_table.FROM_ID
        AND partyid6_.VALUE <=> flat_table.TO_ID
        AND property3_.VALUE <=> flat_table.FROM_SCHEME
        AND property4_.VALUE <=> flat_table.TO_SCHEME
        AND message_info.REF_TO_MESSAGE_ID <=> flat_table.REF_TO_MESSAGE_ID
        AND message_log.FAILED <=> flat_table.FAILED
        AND message_log.RESTORED <=> flat_table.RESTORED
        AND message_log.MESSAGE_SUBTYPE <=> flat_table.MESSAGE_SUBTYPE
        WHERE
        user_message.messageInfo_ID_PK = message_info.ID_PK
        AND property3_.NAME = 'originalSender'
        AND property4_.NAME = 'finalRecipient'
        AND message_log.received BETWEEN DATE_SUB(NOW(), INTERVAL 48 HOUR) AND DATE_ADD(NOW(), INTERVAL 1 HOUR)
        AND flat_table.message_id IS NULL

        UNION

        SELECT
        message_log.MESSAGE_ID,
        message_log.MESSAGE_STATUS,
        message_log.NOTIFICATION_STATUS,
        message_log.MSH_ROLE,
        message_log.MESSAGE_TYPE,
        message_log.DELETED,
        message_log.RECEIVED,
        message_log.SEND_ATTEMPTS,
        message_log.SEND_ATTEMPTS_MAX,
        message_log.NEXT_ATTEMPT,
        '' AS CONVERSATION_ID,
        partyid7_.VALUE AS FROM_ID,
        partyid8_.VALUE AS TO_ID,
        property5_.VALUE AS FROM_SCHEME,
        property6_.VALUE AS TO_SCHEME,
        messageinf4_.REF_TO_MESSAGE_ID,
        message_log.FAILED,
        message_log.RESTORED,
        message_log.MESSAGE_SUBTYPE
        FROM
        TB_MESSAGE_LOG message_log
        CROSS JOIN TB_MESSAGING messaging
        INNER JOIN TB_SIGNAL_MESSAGE signalmess2_ ON messaging.SIGNAL_MESSAGE_ID = signalmess2_.ID_PK
        LEFT OUTER JOIN TB_MESSAGE_INFO messageinf4_ ON signalmess2_.messageInfo_ID_PK = messageinf4_.ID_PK
        INNER JOIN TB_USER_MESSAGE usermessag3_ ON messaging.USER_MESSAGE_ID = usermessag3_.ID_PK
        LEFT OUTER JOIN TB_PROPERTY property5_ ON usermessag3_.ID_PK = property5_.MESSAGEPROPERTIES_ID
        LEFT OUTER JOIN TB_PROPERTY property6_ ON usermessag3_.ID_PK = property6_.MESSAGEPROPERTIES_ID
        LEFT OUTER JOIN TB_PARTY_ID partyid7_ ON usermessag3_.ID_PK = partyid7_.FROM_ID
        LEFT OUTER JOIN TB_PARTY_ID partyid8_ ON usermessag3_.ID_PK = partyid8_.TO_ID
        CROSS JOIN TB_MESSAGE_INFO messageinf11_

        LEFT JOIN TB_MESSAGE_UI flat_table ON message_log.message_id <=> flat_table.message_id
        AND message_log.message_Status <=> flat_table.message_status
        AND message_log.NOTIFICATION_STATUS <=> flat_table.NOTIFICATION_STATUS
        AND message_log.MSH_ROLE <=> flat_table.MSH_ROLE
        AND message_log.MESSAGE_TYPE <=> flat_table.MESSAGE_TYPE
        AND message_log.DELETED <=> flat_table.DELETED
        AND message_log.RECEIVED <=> flat_table.RECEIVED
        AND message_log.SEND_ATTEMPTS <=> flat_table.SEND_ATTEMPTS
        AND message_log.SEND_ATTEMPTS_MAX <=> flat_table.SEND_ATTEMPTS_MAX
        AND message_log.NEXT_ATTEMPT <=> flat_table.NEXT_ATTEMPT
        AND '' <=> flat_table.CONVERSATION_ID
        AND partyid7_.VALUE <=> flat_table.FROM_ID
        AND partyid8_.VALUE <=> flat_table.TO_ID
        AND property5_.VALUE <=> flat_table.FROM_SCHEME
        AND property6_.VALUE <=> flat_table.TO_SCHEME
        AND messageinf4_.REF_TO_MESSAGE_ID <=> flat_table.REF_TO_MESSAGE_ID
        AND message_log.FAILED <=> flat_table.FAILED
        AND message_log.RESTORED <=> flat_table.RESTORED
        AND message_log.MESSAGE_SUBTYPE <=> flat_table.MESSAGE_SUBTYPE
        WHERE
        usermessag3_.messageInfo_ID_PK = messageinf11_.ID_PK
        AND messageinf4_.MESSAGE_ID = message_log.MESSAGE_ID
        AND messageinf4_.REF_TO_MESSAGE_ID = messageinf11_.MESSAGE_ID
        AND property5_.NAME = 'originalSender'
        AND property6_.NAME = 'finalRecipient'
        AND message_log.received BETWEEN DATE_SUB(NOW(), INTERVAL 48 HOUR) AND DATE_ADD(NOW(), INTERVAL 1 HOUR)
        AND flat_table.message_id IS NULL
        ;

--  Changeset src/main/resources/db/changelog-4.0-quartz.xml::EDELIVERY-3425::migueti
CREATE TABLE QRTZ_BLOB_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, BLOB_DATA BLOB NULL);

CREATE TABLE QRTZ_CALENDARS (SCHED_NAME VARCHAR(120) NOT NULL, CALENDAR_NAME VARCHAR(200) NOT NULL, CALENDAR_BLOB BLOB NOT NULL);

CREATE TABLE QRTZ_CRON_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, CRON_EXPRESSION VARCHAR(120) NOT NULL, TIME_ZONE_ID VARCHAR(80) NULL);

CREATE TABLE QRTZ_FIRED_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, ENTRY_ID VARCHAR(95) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, FIRED_TIME BIGINT NOT NULL, SCHED_TIME BIGINT NOT NULL, PRIORITY INT NOT NULL, STATE VARCHAR(16) NOT NULL, JOB_NAME VARCHAR(200) NULL, JOB_GROUP VARCHAR(200) NULL, IS_NONCONCURRENT BIT(1) NULL, REQUESTS_RECOVERY BIT(1) NULL);

CREATE TABLE QRTZ_JOB_DETAILS (SCHED_NAME VARCHAR(120) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, DESCRIPTION VARCHAR(250) NULL, JOB_CLASS_NAME VARCHAR(250) NOT NULL, IS_DURABLE BIT(1) NOT NULL, IS_NONCONCURRENT BIT(1) NOT NULL, IS_UPDATE_DATA BIT(1) NOT NULL, REQUESTS_RECOVERY BIT(1) NOT NULL, JOB_DATA BLOB NULL);

CREATE TABLE QRTZ_LOCKS (SCHED_NAME VARCHAR(120) NOT NULL, LOCK_NAME VARCHAR(40) NOT NULL);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL);

CREATE TABLE QRTZ_SCHEDULER_STATE (SCHED_NAME VARCHAR(120) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, LAST_CHECKIN_TIME BIGINT NOT NULL, CHECKIN_INTERVAL BIGINT NOT NULL);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, REPEAT_COUNT BIGINT NOT NULL, REPEAT_INTERVAL BIGINT NOT NULL, TIMES_TRIGGERED BIGINT NOT NULL);

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, STR_PROP_1 VARCHAR(512) NULL, STR_PROP_2 VARCHAR(512) NULL, STR_PROP_3 VARCHAR(512) NULL, INT_PROP_1 INT NULL, INT_PROP_2 INT NULL, LONG_PROP_1 BIGINT NULL, LONG_PROP_2 BIGINT NULL, DEC_PROP_1 DECIMAL(13, 4) NULL, DEC_PROP_2 DECIMAL(13, 4) NULL, BOOL_PROP_1 BIT(1) NULL, BOOL_PROP_2 BIT(1) NULL);

CREATE TABLE QRTZ_TRIGGERS (SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, DESCRIPTION VARCHAR(250) NULL, NEXT_FIRE_TIME BIGINT NULL, PREV_FIRE_TIME BIGINT NULL, PRIORITY INT NULL, TRIGGER_STATE VARCHAR(16) NOT NULL, TRIGGER_TYPE VARCHAR(8) NOT NULL, START_TIME BIGINT NOT NULL, END_TIME BIGINT NULL, CALENDAR_NAME VARCHAR(200) NULL, MISFIRE_INSTR SMALLINT NULL, JOB_DATA BLOB NULL);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CALENDARS ADD PRIMARY KEY (SCHED_NAME, CALENDAR_NAME);

ALTER TABLE QRTZ_CRON_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_FIRED_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, ENTRY_ID);

ALTER TABLE QRTZ_JOB_DETAILS ADD PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP);

ALTER TABLE QRTZ_LOCKS ADD PRIMARY KEY (SCHED_NAME, LOCK_NAME);

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SCHEDULER_STATE ADD PRIMARY KEY (SCHED_NAME, INSTANCE_NAME, LAST_CHECKIN_TIME, CHECKIN_INTERVAL);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS ADD PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME);

CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME, CALENDAR_NAME);

CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT FK_BLOB_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT FK_CRON_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT FK_SIMPLE_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CONSTRAINT FK_SIMPROP_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT FK_TRIGGERS FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP) ON UPDATE NO ACTION ON DELETE NO ACTION;
