#
# Available properties for the FS Plugin
#

#
# Workers Scheduling
# These properties define the FS Plugin workers scheduling.
#

# The time interval (in milliseconds) used to poll the sending filesystem for new files.
# E.g.: 10000
fsplugin.messages.send.worker.repeatInterval=10000

# The cron expression used to trigger the worker to purge the sent files that were archived.
# E.g.: 0 0/1 * * * ?
fsplugin.messages.sent.purge.worker.cronExpression=0 0/1 * * * ?

# The cron expression used to trigger the worker to purge the failed files that were archived.
# E.g.: 0 0/1 * * * ?
fsplugin.messages.failed.purge.worker.cronExpression=0 0/1 * * * ?

# The cron expression used to trigger the worker to purge the received files.
# E.g.: 0 0/1 * * * ?
fsplugin.messages.received.purge.worker.cronExpression=0 0/1 * * * ?


#
# General properties
# The general properties can be overridden per domain.
#

# Regarding the "fsplugin.messages.location" property, the FS Plugin supports multiple file system types via Apache VFS.
# There are 4 file systems currently supported:
#
# * Local: A local file system is simply a directory on the local physical system. The URI format is:
#   [file://]absolute-path Where absolute-path is a valid absolute file name for the local platform. UNC names are
#   supported under Windows.This type of file system does not support authentication.
#   E.g.: file:///home/someuser/somedir
#         file:///C:/Documents and Settings
#
# * SMB/CIFS: A SMB/CIFS file system is a remote directory shared via Samba or Windows Share, with the following URI
#   format: smb://hostname[:port]/sharename[/relative-path]. Notice that a share name is mandatory.
#   E.g.: smb://somehost/shareA
#         smb://somehost/shareB/nesteddir
#
# * SFTP: An SFTP file system is a remote directory shared via SFTP. Uses an URI of the following format:
#   sftp://hostname[:port][/relative-path]. The path is relative to whatever path the server has configured as base
#   directory, usually the user's home directory.
#   E.g.: smb://somehost/shareA
#         smb://somehost/shareB/nesteddir
#
# * FTP: An FTP file system is a remote directory shared via FTP. Accepts URIs of the following format:
#   ftp://hostname[:port][/relative-path]. The path is relative to whatever path the server has configured as base
#   directory, usually the user's home directory.
#   E.g.: ftp://somelinuxhost/home/someuser/pub/downloads/

# The location of the folder that the plugin will use to manage the messages to be sent and received in case no domain
# expression matches. This location must be accessible to the Domibus instance.
# E.g.: /home/domibus/fs_plugin_data/MAIN
fsplugin.messages.location=/home/domibus/fs_plugin_data/MAIN

# The file action executed when the file is successfully sent: 'delete' to permanently remove the file or 'archive' to
# move it into the SENT folder.
# E.g.: delete
fsplugin.messages.sent.action=delete

# The expiration limit (expressed in seconds) used to purge the older files in the SENT folder.
# E.g.: 600
fsplugin.messages.sent.purge.expired=600

# The file action executed when the file is fails to send: 'delete' to permanently remove the file or 'archive' to move
# it into the FAILED folder.
# E.g.: delete
fsplugin.messages.failed.action=delete
        
# The expiration limit (expressed in seconds) used to purge the older files in the FAILED folder
# E.g.: 600
fsplugin.messages.failed.purge.expired=600

# The expiration limit (expressed in seconds) used to purge the older files in the IN folder.
# E.g.: 600
fsplugin.messages.received.purge.expired=600


#
# Domain specific properties
#
# The FS Plugin configuration allows to define specific properties per domain
# (e.g., the messages location in the file system, the file actions, etc.).
#
# The domain properties have the following convention:
#    fsplugin.domains.<domain_identifier>.<property_name>=<value>
#
# Domain resolution
# Since there can be more than one domain configuration, the domain resolution is done according to the values of the
# domain specific properties:
#  * fsplugin.domains.<domain_id>.order: Defines the order in which the domains will be evaluated.
#  * fsplugin.domains.<domain_id>.messages.expression: Regular expression used to match the domain for the reception of
#    messages. This regular expression will be evaluated against the Service and Action values from the incoming message
#    separated by #. As a convention for the pMode, it is recommended to prefix the Service with the identifier of the
#    business domain. An expression per domain will determine to which domain the message belongs.
#

#
# DOMAIN 1 (example)
#

# Defines the order in which the domains will be evaluated. This property is not mandatory â€“ domains without order
# definition will be resolved for last.
# E.g.: 1
#fsplugin.domains.DOMAIN1.order=1

# Regular expression used to match the domain for the reception of messages. This regular expression will be evaluated
# against the Service and Action values from the incoming message separated by #.
# E.g.: DOMAIN1SampleService#.*
#fsplugin.domains.DOMAIN1.messages.expression=

# The location of the folder that the plugin will use to manage the messages to be sent and received in case no domain
# expression matches. This location must be accessible to the Domibus instance. The domain locations must be independent
# from each other and should not overlap.
# E.g.: /home/domibus/fs_plugin_data/DOMAIN1
#fsplugin.domains.DOMAIN1.messages.location=

# The user used to access the domain location specified by the property fsplugin.domains.<domain_id>.messages.location.
# This value must be provided if the location access is secured at the file system level so that users from other
# domains cannot access its contents.
#fsplugin.domains.DOMAIN1.messages.user=

# The password used to access the domain location. This value must be provided if the location access is secured at the
# file system level.
#fsplugin.domains.DOMAIN1.messages.password=
