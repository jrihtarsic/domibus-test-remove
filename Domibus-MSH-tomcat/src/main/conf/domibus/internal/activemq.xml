<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 e-CODEX Project
  ~
  ~ Licensed under the EUPL, Version 1.1 or â€“ as soon they
  ~ will be approved by the European Commission - subsequent
  ~ versions of the EUPL (the "Licence");
  ~ You may not use this work except in compliance with the
  ~ Licence.
  ~ You may obtain a copy of the Licence at:
  ~ http://ec.europa.eu/idabc/eupl5
  ~ Unless required by applicable law or agreed to in
  ~ writing, software distributed under the Licence is
  ~ distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied.
  ~ See the Licence for the specific language governing
  ~ permissions and limitations under the Licence.
  -->

<spring:beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:spring="http://www.springframework.org/schema/beans"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns="http://activemq.apache.org/schema/core"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder system-properties-mode="ENVIRONMENT" />

    <broker useJmx="true" brokerName="localhost"  persistent="true" schedulerSupport="true" dataDirectory="${domibus.work.location:${domibus.config.location}}/work/activemq_data" tmpDataDirectory="${domibus.work.location:${domibus.config.location}}/temp">
        <managementContext>
            <managementContext createConnector="true" connectorPort="1199" rmiServerPort="1200"/>
        </managementContext>
        <transportConnectors>
            <transportConnector uri="tcp://localhost:61616" disableAsyncDispatch="true"/>
        </transportConnectors>
        <persistenceAdapter>
            <kahaDB directory="${domibus.work.location:${domibus.config.location}}/work/kahadb" />
        </persistenceAdapter>
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit="64 mb" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="512 mb" />
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="128 mb" />
                </tempUsage>
            </systemUsage>
        </systemUsage>
        <destinations>
            <queue id="sendMessageQueue"
                   physicalName="domibus.internal.dispatch.queue"/>
            <!--queue id="notifyBackendQueue"
                   physicalName="domibus.internal.notification.queue"/-->
            <!-- If no backend with matching policy found notifcations are sent to this queue -->
            <queue id="unknownReceiverQueue"
                   physicalName="domibus.internal.notification.unknown"/>

            <!-- Backend plugin notification queues -->
            <queue id="webserviceBackendNotificationQueue"
                   physicalName="domibus.notification.webservice"/>
            <queue id="jmsBackendNotificationQueue"
                   physicalName="domibus.notification.jms"/>

            <queue id="notifyAdapterKerkoviQueue"
                   physicalName="domibus.notification.kerkovi"/>

            <!-- Internal queues of JMS backend plugin -->
            <queue id="jmsPluginToBackendQueue"
                       physicalName="domibus.backend.jms.replyQueue"/>
            <queue id="businessMessageOutQueue"
                       physicalName="domibus.backend.jms.outQueue"/>
            <queue id="businessMessageInQueue"
                   physicalName="domibus.backend.jms.inQueue"/>
            <queue id="errorNotifyConsumerQueue" physicalName="domibus.backend.jms.errorNotifyConsumer" />
            <queue id="errorNotifyProducerQueue" physicalName="domibus.backend.jms.errorNotifyProducer" />
            <queue id="domibusDLQ" physicalName="domibus.DLQ" />
            <topic id="clusterCommandTopic" physicalName="domibus.internal.command"/>

        </destinations>
        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue=">">
                        <deadLetterStrategy>
                            <!--<individualDeadLetterStrategy queuePrefix="DLQ."/>-->
                            <sharedDeadLetterStrategy processExpired="false">
                                <deadLetterQueue>
                                    <queue physicalName="domibus.DLQ"/>
                                </deadLetterQueue>
                            </sharedDeadLetterStrategy>
                        </deadLetterStrategy>
                        <dispatchPolicy>
                            <roundRobinDispatchPolicy/>
                        </dispatchPolicy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>

        <plugins>
            <simpleAuthenticationPlugin anonymousAccessAllowed="false">
                <users>
                    <authenticationUser username="domibus" password="changeit"
                                        groups="users"/>
                    <authenticationUser username="admin" password="123456" groups="admins,users" />
                </users>
            </simpleAuthenticationPlugin>
            <authorizationPlugin>
                <map>
                    <authorizationMap>
                        <authorizationEntries>
                            <authorizationEntry queue="domibus.>" read="users" write="users" admin="admins" />
                            <authorizationEntry topic="domibus.>" read="users" write="users" admin="admins"/>
                            <authorizationEntry topic="ActiveMQ.Advisory.>" read="users" write="users" admin="users"/>
                        </authorizationEntries>
                    </authorizationMap>
                </map>
            </authorizationPlugin>
            <redeliveryPlugin fallbackToDeadLetter="true"
                              sendToDlqIfMaxRetriesExceeded="true">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <redeliveryPolicyEntries>
                            <redeliveryPolicy queue="sendMessageQueue"
                                              maximumRedeliveries="0"/>
                            <redeliveryPolicy queue="*"
                                              maximumRedeliveries="10" redeliveryDelay="300000"/>
                        </redeliveryPolicyEntries>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
           <!--<loggingBrokerPlugin logAll="true" logConnectionEvents="false" logSessionEvents="false" perDestinationLogger="true"/>-->
            <!--spring:bean id="throughputLimiterPlugin" class="eu.domibus.messaging.amq.plugins.ThroughputLimiterPlugin">
                <spring:constructor-arg name="filter" ref="testFilter" />
                <spring:constructor-arg name="resendDelay" value="10000" />
            </spring:bean-->
        </plugins>
    </broker>

    <!--spring:bean id="testFilter" class="eu.domibus.messaging.amq.plugins.ThroughputFilter">
        <spring:property name="maxParallel" value="3" />
        <spring:property name="name" value="testFilter" />
        <spring:property name="queue" value="domibus.internal.dispatch.queue" />
        <spring:property name="propertyKey" value="#{T(eu.domibus.messaging.MessageConstants).ENDPOINT}" />
    </spring:bean-->




</spring:beans>