

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://activemq.apache.org/schema/core
    http://activemq.apache.org/schema/core/activemq-core.xsd">


    <import resource="file:///${domibus.config.location}/domibus-transactions.xml"/>

    <!-- JMS Configuration -->
    <!-- Connection Pool -->
    <bean id="domibusJMS-XAConnectionFactory"
          class="com.atomikos.jms.AtomikosConnectionFactoryBean"
          init-method="init" destroy-method="close" depends-on="broker">
        <property name="uniqueResourceName" value="domibusJMS-XA"/>
        <property name="xaConnectionFactory" ref="xaJmsConnectionFactory"/>
        <property name="maxPoolSize" value="20"/>
    </bean>

    <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
    <amq:xaConnectionFactory id="xaJmsConnectionFactory"
                             brokerURL="vm://localhost?broker.persistent=false"
                             userName="domibus" password="changeit">
        <!-- do not remove this! otherwise the redeliveryPolicy configured in activemq.xml will be ignored -->
        <amq:redeliveryPolicy>
            <amq:redeliveryPolicy/>
        </amq:redeliveryPolicy>
    </amq:xaConnectionFactory>

    <!--  lets create an ActiveMQ Broker -->
    <bean id="broker"
          class="org.apache.activemq.xbean.BrokerFactoryBean">
        <property name="config"
                  value="file:///${domibus.config.location}/internal/activemq.xml"/>
    </bean>

    <amq:queue id="sendMessageQueue"
               physicalName="domibus.internal.dispatch.queue"/>
    <amq:queue id="pullMessageQueue"
               physicalName="domibus.internal.pull.queue"/>
    <amq:queue id="notifyBackendQueue"
               physicalName="domibus.internal.notification.queue"/>
    <!-- I no backend with matching policy found notifcations are sent to this queue -->
    <amq:queue id="unknownReceiverQueue"
               physicalName="domibus.internal.notification.unknown"/>
    <amq:topic id="clusterCommandTopic"
               physicalName="domibus.internal.command"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          name="domibusJDBC-XADataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="entityManagerFactory" primary="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="domibusJTA"/>
        <property name="packagesToScan" value="eu.domibus"/>
        <property name="jtaDataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform"
                          value="org.hibernate.dialect.H2Dialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.hbm2ddl.import_files">dataset/database/quartz.sql</prop>
            </props>
        </property>
    </bean>


    <bean id="internalJmsListenerContainerFactory"
          class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
        <property name="connectionFactory"
                  ref="domibusJMS-XAConnectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="concurrency" value="${domibus.internal.queue.concurency}"/>
        <property name="sessionTransacted" value="true"/>
        <property name="sessionAcknowledgeMode" value="0"/>
    </bean>

    <bean id="pullJmsListenerContainerFactory"
          class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
        <property name="connectionFactory" ref="domibusJMS-XAConnectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="concurrency" value="1-1"/>
        <property name="sessionTransacted" value="true"/>
        <property name="sessionAcknowledgeMode" value="0"/>
    </bean>

    <beans profile="h2Debug">
        <bean id="org.h2.tools.Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop" lazy-init="false" depends-on="h2WebServer">
            <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,8043" />
        </bean>
        <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start" destroy-method="stop">
            <constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>
        </bean>
    </beans>

</beans>