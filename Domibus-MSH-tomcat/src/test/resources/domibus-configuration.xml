<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">


    <import resource="file:///${domibus.config.location}/domibus-security.xml"/>

    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

    <bean id="gatewayConfigurationValidator" class="eu.domibus.common.validators.GatewayConfigurationValidator"/>

    <!-- Internal configuration provider. Do not change unless you have special requirements (i.e. dynamic
    discovery injection of PModes)-->
    <bean id="pModeProvider"
          class="eu.domibus.ebms3.common.dao.CachingPModeProvider"/>

    <!--<bean id="pModeDao"
          class="eu.domibus.common.dao.PModeDao"/>-->

    <!-- Mime-Types listed in this map will not be compressed (in outgoing messages) even if compression is turned on for the given message. -->
    <util:list id="compressionBlacklist" value-type="java.lang.String">
        <value>application/vnd.etsi.asic-s+zip</value>
        <value>image/jpeg</value>
    </util:list>

    <!-- message sender that is being executed by the senderworker -->
    <!--    <bean id="messageSender" class="eu.domibus.ebms3.sender.MessageSender"/>-->

    <!-- quartz job for the retry  -->
    <bean id="retryWorkerJob"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="eu.domibus.ebms3.sender.SendRetryWorker"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="retryWorkerTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="retryWorkerJob"/>
        <property name="cronExpression" value="${domibus.msh.retry.cron}"/>
    </bean>

    <bean id="pullRequestJob"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="eu.domibus.ebms3.puller.MessagePullerJob"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="pullRequestTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="pullRequestJob"/>
        <property name="cronExpression" value="${domibus.msh.pull.cron}"/>
    </bean>

    <bean id="activateSuspendedUsersJob"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="eu.domibus.security.ActivateSuspendedUsersJob"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="activateSuspendedUserTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="activateSuspendedUsersJob"/>
        <property name="cronExpression" value="${domibus.account.unlock.cron}"/>
    </bean>

    <bean id="saveCertificateAndLogRevocationJob"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="eu.domibus.core.certificate.SaveCertificateAndLogRevocationJob"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="saveCertificateAndLogRevocationTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="saveCertificateAndLogRevocationJob"/>
        <property name="cronExpression" value="${domibus.certificate.check.cron}"/>
    </bean>

    <!-- customizable list of triggers to be executed by quartz -->
    <bean id="userdefinedTriggerList"
          class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <ref bean="retryWorkerTrigger"/>
                <ref bean="pullRequestTrigger"/>
                <ref bean="activateSuspendedUserTrigger"/>
                <ref bean="saveCertificateAndLogRevocationTrigger"/>
            </list>
        </property>
    </bean>


</beans>