<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="MySQL_Collation_Update_1554" author="ArunRaj" dbms="mysql">
        <sql dbms="mysql">
            SET FOREIGN_KEY_CHECKS=0;
            ALTER TABLE QRTZ_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_BLOB_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_CRON_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_JOB_DETAILS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_SIMPLE_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_SIMPROP_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_CALENDARS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_FIRED_TRIGGERS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_LOCKS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE QRTZ_SCHEDULER_STATE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ACTION CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_AGREEMENT CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_AUTHENTICATION_ENTRY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_BACKEND_FILTER CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_BUSINESS_PROCESS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_CONFIGURATION CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ERROR CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ERROR_HANDLING CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ERROR_LOG CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_JOIN_PAYLOAD_PROFILE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_JOIN_PROCESS_LEG CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_JOIN_PROPERTY_SET CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_LEG CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_LEG_TB_MPC CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MEP CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MEP_BINDING CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MESSAGE_INFO CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MESSAGE_LOG CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MESSAGE_PROPERTY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MESSAGE_PROPERTY_SET CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MESSAGING CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_MPC CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PART_INFO CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PARTY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PARTY_ID CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PARTY_ID_TYPE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PARTY_IDENTIFIER CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PAYLOAD CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PAYLOAD_PROFILE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PROCESS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_PROPERTY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_RECEIPT CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_RECEIPT_DATA CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_RECEPTION_AWARENESS CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_RELIABILITY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ROLE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_ROUTING_CRITERIA CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_SECURITY CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_SERVICE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_SIGNAL_MESSAGE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            ALTER TABLE TB_USER_MESSAGE CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_BIN;
            SET FOREIGN_KEY_CHECKS=1;
        </sql>
    </changeSet>

    <changeSet author="ArunRaj" id="Add_Downloaded_1542">
        <addColumn tableName="TB_MESSAGE_LOG">
            <column name="DOWNLOADED" type="datetime" afterColumn="RECEIVED"/>
        </addColumn>
    </changeSet>

    <changeSet author="TiagoMiguel" id="EDelivery_1940">
        <createTable tableName="TB_MESSAGE_ACKNW">
            <column autoIncrement="true" name="ID_PK" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="MESSAGE_ID" type="VARCHAR(255)"/>
            <column name="FROM_VALUE" type="VARCHAR(255)"/>
            <column name="TO_VALUE" type="VARCHAR(255)"/>
            <column name="CREATE_DATE" type="DATETIME"/>
            <column name="CREATE_USER" type="VARCHAR(255)"/>
            <column name="ACKNOWLEDGE_DATE" type="DATETIME"/>
        </createTable>
        <createTable tableName="TB_MESSAGE_ACKNW_PROP">
            <column autoIncrement="true" name="ID_PK" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="PROPERTY_NAME" type="VARCHAR(255)"/>
            <column name="PROPERTY_VALUE" type="VARCHAR(255)"/>
            <column name="FK_MSG_ACKNOWLEDGE" type="INT"/>
        </createTable>
        <addForeignKeyConstraint baseColumnNames="FK_MSG_ACKNOWLEDGE" baseTableName="TB_MESSAGE_ACKNW_PROP"
                                 constraintName="FK_MSG_ACK_PROP_MSG_ACK" deferrable="false"
                                 initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
                                 referencedColumnNames="ID_PK" referencedTableName="TB_MESSAGE_ACKNW"/>
    </changeSet>
    <changeSet author="CosminBaciu" id="EDELIVERY_1941">
        <addColumn tableName="TB_MESSAGE_LOG">
            <column name="FAILED" type="datetime" afterColumn="DOWNLOADED"/>
            <column name="RESTORED" type="datetime" afterColumn="RECEIVED"/>
        </addColumn>
        <createTable tableName="TB_SEND_ATTEMPT">
            <column autoIncrement="true" name="ID_PK" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="MESSAGE_ID" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="START_DATE" type="DATETIME">
                <constraints nullable="false"/>
            </column>
            <column name="END_DATE" type="DATETIME">
                <constraints nullable="false"/>
            </column>
            <column name="STATUS" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="ERROR" type="VARCHAR(255)"/>
        </createTable>
    </changeSet>

    <changeSet author="Mircea" id="Add raw configuration table">
        <createTable tableName="TB_CONFIGURATION_RAW">
            <column autoIncrement="true" name="ID_PK" type="INT">
                <constraints primaryKey="true"/>
            </column>
            <column name="CONFIGURATION_DATE" type="DATETIME"/>
            <column name="XML" type="BLOB"/>
        </createTable>
    </changeSet>

    <changeSet id="Message Filter changes" author="Tiago Miguel">
        <sql dbms="mysql">
            DROP TABLE IF EXISTS tb_backend_filter_backup;
            DROP TABLE IF EXISTS tb_routing_criteria_backup;
            DROP TABLE IF EXISTS tb_backend_filter_migr2;
            DROP TABLE IF EXISTS tb_routing_criteria_migr;
            DROP TABLE IF EXISTS tb_backend_filter_migr;

            CREATE TEMPORARY TABLE IF NOT EXISTS tb_backend_filter_backup as (
            select
            *
            from
            tb_backend_filter
            );

            CREATE TEMPORARY TABLE IF NOT EXISTS tb_routing_criteria_backup as (
            select
            *
            from
            tb_routing_criteria
            );

            CREATE TEMPORARY TABLE IF NOT EXISTS tb_backend_filter_migr AS (
            select
            @rownum:=@rownum + 1 as ID_PK,
            BACKEND_NAME,
            @rownum-1 as PRIORITY,
            OLD_ID,
            OLD_PRIO,
            CRITERIA_OPERATOR
            from
            (
            select
            tb_backend_filter.ID_PK as OLD_ID, BACKEND_NAME, tb_backend_filter.CRITERIA_OPERATOR,tb_backend_filter.PRIORITY, tb_routing_criteria.PRIORITY as OLD_PRIO
            from
            tb_backend_filter
            left outer join tb_routing_criteria on tb_backend_filter.id_pk = tb_routing_criteria.FK_BACKEND_FILTER
            where
            tb_backend_filter.CRITERIA_OPERATOR='OR'

            union all

            select
            distinct tb_backend_filter.ID_PK as OLD_ID, BACKEND_NAME,tb_backend_filter.CRITERIA_OPERATOR,tb_backend_filter.PRIORITY, 0 as OLD_PRIO
            from
            tb_backend_filter
            left outer join tb_routing_criteria on tb_backend_filter.id_pk = tb_routing_criteria.FK_BACKEND_FILTER
            where
            tb_backend_filter.CRITERIA_OPERATOR='AND'
            order by
            PRIORITY asc, OLD_PRIO asc
            ) p inner join (SELECT @rownum := 0) r
            );

            create temporary table tb_backend_filter_migr2 like tb_backend_filter_migr;
            insert into tb_backend_filter_migr2 select * from tb_backend_filter_migr;

            CREATE TEMPORARY TABLE IF NOT EXISTS tb_routing_criteria_migr AS (
            select
            ID_PK,
            EXPRESSION,
            NAME,
            FK_BACKEND_FILTER,
            PRIORITY
            from
            (
            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr.ID_PK as FK_BACKEND_FILTER,
            0 as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr migr
            where rc.PRIORITY = migr.old_prio and rc.FK_BACKEND_FILTER = migr.old_id and migr.criteria_operator = 'OR'
            union all
            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr2.ID_PK as FK_BACKEND_FILTER,
            rc.PRIORITY as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr2 migr2
            where rc.FK_BACKEND_FILTER = migr2.old_id and migr2.criteria_operator = 'AND'
            order by id_pk) p);

            SET FOREIGN_KEY_CHECKS = 0;

            truncate table tb_routing_criteria;
            truncate table tb_backend_filter;

            alter table tb_backend_filter drop column CRITERIA_OPERATOR;

            insert into tb_backend_filter
            select ID_PK, BACKEND_NAME, PRIORITY from tb_backend_filter_migr;

            insert into tb_routing_criteria
            select * from tb_routing_criteria_migr;

            SET FOREIGN_KEY_CHECKS = 1;
        </sql>
        <sql dbms="oracle">
            CREATE GLOBAL TEMPORARY TABLE tb_backend_filter_backup on commit preserve rows as (
            select
            *
            from
            tb_backend_filter
            );

            CREATE GLOBAL TEMPORARY TABLE tb_routing_criteria_backup on commit preserve rows as (
            select
            *
            from
            tb_routing_criteria
            );

            CREATE GLOBAL TEMPORARY TABLE tb_backend_filter_migr
            ON COMMIT PRESERVE ROWS
            AS (
            select
            rownum as ID_PK,
            BACKEND_NAME,
            rownum-1 as PRIORITY,
            OLD_ID,
            OLD_PRIO,
            CRITERIA_OPERATOR
            from
            (
            select
            tb_backend_filter.ID_PK as OLD_ID, BACKEND_NAME, tb_backend_filter.CRITERIA_OPERATOR,tb_backend_filter.PRIORITY, tb_routing_criteria.PRIORITY as OLD_PRIO
            from
            tb_backend_filter
            left outer join tb_routing_criteria on tb_backend_filter.id_pk = tb_routing_criteria.FK_BACKEND_FILTER
            where
            tb_backend_filter.CRITERIA_OPERATOR='OR'

            union all

            select
            distinct tb_backend_filter.ID_PK as OLD_ID, BACKEND_NAME,tb_backend_filter.CRITERIA_OPERATOR,tb_backend_filter.PRIORITY, 0 as OLD_PRIO
            from
            tb_backend_filter
            left outer join tb_routing_criteria on tb_backend_filter.id_pk = tb_routing_criteria.FK_BACKEND_FILTER
            where
            tb_backend_filter.CRITERIA_OPERATOR='AND'
            order by
            PRIORITY asc, OLD_PRIO asc
            )
            );

            CREATE GLOBAL TEMPORARY TABLE tb_backend_filter_migr2 ON COMMIT PRESERVE ROWS AS select * from tb_backend_filter_migr;

            CREATE GLOBAL TEMPORARY TABLE tb_routing_criteria_migr ON COMMIT PRESERVE ROWS AS (
            select
            ID_PK,
            EXPRESSION,
            NAME,
            FK_BACKEND_FILTER,
            PRIORITY
            from
            (
            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr.ID_PK as FK_BACKEND_FILTER,
            0 as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr migr
            where rc.PRIORITY = migr.old_prio and rc.FK_BACKEND_FILTER = migr.old_id and migr.criteria_operator = 'OR'
            union all
            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr2.ID_PK as FK_BACKEND_FILTER,
            rc.PRIORITY as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr2 migr2
            where rc.FK_BACKEND_FILTER = migr2.old_id and migr2.criteria_operator = 'AND'
            order by id_pk) p);

            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr.ID_PK as FK_BACKEND_FILTER,
            0 as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr migr
            where rc.PRIORITY = migr.old_prio and rc.FK_BACKEND_FILTER = migr.old_id and migr.criteria_operator = 'OR'
            union all
            select
            rc.ID_PK as ID_PK,
            rc.EXPRESSION as EXPRESSION,
            rc.NAME as NAME,
            migr2.ID_PK as FK_BACKEND_FILTER,
            rc.PRIORITY as PRIORITY
            from tb_routing_criteria rc, tb_backend_filter_migr2 migr2
            where rc.FK_BACKEND_FILTER = migr2.old_id and migr2.criteria_operator = 'AND'
            order by id_pk;

            alter table tb_routing_criteria disable constraint FK_I7GEI6BDR2CDN61HDOPLXBU7P;
            truncate table tb_routing_criteria;
            truncate table tb_backend_filter;
            alter table tb_routing_criteria enable constraint FK_I7GEI6BDR2CDN61HDOPLXBU7P;

            alter table tb_backend_filter drop column CRITERIA_OPERATOR;

            insert into tb_backend_filter
            select ID_PK, BACKEND_NAME, PRIORITY from tb_backend_filter_migr;

            insert into tb_routing_criteria
            select * from tb_routing_criteria_migr;
        </sql>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-58">
        <comment>new user table to handle spring security in database</comment>
        <createTable tableName="TB_USER">
            <column autoIncrement="true" name="ID_PK" type="BIGINT">
                <constraints primaryKey="true"/>
            </column>
            <column name="USER_EMAIL" type="VARCHAR(255)"/>
            <column name="USER_ENABLED" type="BIT">
                <constraints nullable="false"/>
            </column>
            <column name="USER_PASSWORD" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="USER_NAME" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="OPTLOCK" type="INT"/>
        </createTable>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-60">
        <comment>new role table to handle spring security in database</comment>
        <createTable tableName="TB_USER_ROLE">
            <column autoIncrement="true" name="ID_PK" type="BIGINT">
                <constraints primaryKey="true"/>
            </column>
            <column name="ROLE_NAME" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-61">
        <comment>Intermediary table between user an role</comment>
        <createTable tableName="TB_USER_ROLES">
            <column name="USER_ID" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="ROLE_ID" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-74">
        <addPrimaryKey columnNames="USER_ID, ROLE_ID" constraintName="PK_PRIMARY" tableName="TB_USER_ROLES"/>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-75">
        <addUniqueConstraint columnNames="ROLE_NAME" constraintName="UQ_ROLE_NAME" tableName="TB_USER_ROLE"/>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-78">
        <addUniqueConstraint columnNames="USER_NAME" constraintName="USER_NAME" tableName="TB_USER"/>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-79">
        <createIndex indexName="IDX_ROLE_ID" tableName="TB_USER_ROLES">
            <column name="ROLE_ID"/>
        </createIndex>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-80">
        <createIndex indexName="IDX_USER_ID" tableName="TB_USER_ROLES">
            <column name="USER_ID"/>
        </createIndex>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-165">
        <addForeignKeyConstraint baseColumnNames="ROLE_ID" baseTableName="TB_USER_ROLES" constraintName="FK_USER_ROLES_USER" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="ID_PK" referencedTableName="TB_USER_ROLE"/>
    </changeSet>
    <changeSet author="dussath" id="1497515734454-166">
        <addForeignKeyConstraint baseColumnNames="USER_ID" baseTableName="TB_USER_ROLES" constraintName="FK_USER_ROLES_ROLE" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="ID_PK" referencedTableName="TB_USER"/>
    </changeSet>


</databaseChangeLog>
