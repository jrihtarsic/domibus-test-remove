<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet author="baciuco" id="EDELIVERY-2489">
        <sql dbms="mysql">
            SET @OLD_SQL_SAFE_UPDATES = @@SQL_SAFE_UPDATES;
            SET SQL_SAFE_UPDATES = 0;
            UPDATE QRTZ_CRON_TRIGGERS SET CRON_EXPRESSION = '0 0/1 * * * ?' WHERE CRON_EXPRESSION = '0/60 * * * * ?';
            SET SQL_SAFE_UPDATES = @OLD_SQL_SAFE_UPDATES;
        </sql>
        <sql dbms="oracle">
            UPDATE QRTZ_CRON_TRIGGERS SET CRON_EXPRESSION = '0 0/1 * * * ?' WHERE CRON_EXPRESSION = '0/60 * * * * ?';
        </sql>
    </changeSet>

    <changeSet author="idragusa" id="BCryptPasswordEncoder">
        <sql dbms="mysql">
            SET @OLD_SQL_SAFE_UPDATES = @@SQL_SAFE_UPDATES;
            SET SQL_SAFE_UPDATES = 0;
            UPDATE TB_AUTHENTICATION_ENTRY SET PASSWD='$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu' WHERE USERNAME='admin';
            UPDATE TB_AUTHENTICATION_ENTRY SET PASSWD='$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu' WHERE USERNAME='user';
            DELETE FROM TB_AUTHENTICATION_ENTRY WHERE USERNAME!='admin' AND USERNAME!='user';
            SET SQL_SAFE_UPDATES = @OLD_SQL_SAFE_UPDATES;
        </sql>
        <sql dbms="oracle">
            UPDATE TB_AUTHENTICATION_ENTRY SET PASSWD='$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu' WHERE USERNAME='admin';
            UPDATE TB_AUTHENTICATION_ENTRY SET PASSWD='$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu' WHERE USERNAME='user';
            DELETE FROM TB_AUTHENTICATION_ENTRY WHERE USERNAME!='admin' AND USERNAME!='user';
        </sql>
    </changeSet>
    <changeSet id="EDELIVERY-3361" author="CatalinEnache">
        <sql dbms="mysql">
            INSERT INTO TB_MESSAGE_UI (
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            CONVERSATION_ID,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype
            )

            SELECT * FROM (
            SELECT
            message_log.MESSAGE_ID,
            message_log.MESSAGE_STATUS ,
            message_log.NOTIFICATION_STATUS,
            message_log.MSH_ROLE ,
            message_log.MESSAGE_TYPE ,
            message_log.DELETED ,
            message_log.RECEIVED ,
            message_log.SEND_ATTEMPTS ,
            message_log.SEND_ATTEMPTS_MAX,
            message_log.NEXT_ATTEMPT ,
            user_message.COLL_INFO_CONVERS_ID AS CONVERSATION_ID,
            partyid5_.VALUE AS FROM_ID,
            partyid6_.VALUE AS TO_ID,
            property3_.VALUE AS ORIGINAL_SENDER,
            property4_.VALUE AS FINAL_RECIPIENT,
            message_info.REF_TO_MESSAGE_ID,
            message_log.FAILED ,
            message_log.RESTORED ,
            message_log.MESSAGE_SUBTYPE
            FROM
            TB_MESSAGE_LOG message_log
            LEFT OUTER JOIN
            TB_MESSAGE_INFO message_info
            ON message_log.MESSAGE_ID=message_info.MESSAGE_ID CROSS
            JOIN
            TB_USER_MESSAGE user_message
            LEFT OUTER JOIN
            TB_PROPERTY property3_
            ON user_message.ID_PK=property3_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN
            TB_PROPERTY property4_
            ON user_message.ID_PK=property4_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN
            TB_PARTY_ID partyid5_
            ON user_message.ID_PK=partyid5_.FROM_ID
            LEFT OUTER JOIN
            TB_PARTY_ID partyid6_
            ON user_message.ID_PK=partyid6_.TO_ID
            WHERE
            user_message.messageInfo_ID_PK=message_info.ID_PK
            AND property3_.NAME='originalSender'
            AND property4_.NAME='finalRecipient'
            UNION
            SELECT
            message_log.MESSAGE_ID ,
            message_log.MESSAGE_STATUS ,
            message_log.NOTIFICATION_STATUS ,
            message_log.MSH_ROLE ,
            message_log.MESSAGE_TYPE ,
            message_log.DELETED ,
            message_log.RECEIVED ,
            message_log.SEND_ATTEMPTS ,
            message_log.SEND_ATTEMPTS_MAX ,
            message_log.NEXT_ATTEMPT,
            ''  AS CONVERSATION_ID,
            partyid7_.VALUE AS FROM_ID,
            partyid8_.VALUE AS TO_ID,
            property5_.VALUE AS ORIGINAL_SENDER,
            property6_.VALUE AS FINAL_RECIPIENT,
            message_info2.REF_TO_MESSAGE_ID ,
            message_log.FAILED ,
            message_log.RESTORED,
            message_log.MESSAGE_SUBTYPE
            FROM
            TB_MESSAGE_LOG message_log CROSS
            JOIN
            TB_MESSAGING messaging
            INNER JOIN
            TB_SIGNAL_MESSAGE signal_message
            ON messaging.SIGNAL_MESSAGE_ID=signal_message.ID_PK
            LEFT OUTER JOIN
            TB_MESSAGE_INFO message_info2
            ON signal_message.messageInfo_ID_PK=message_info2.ID_PK
            INNER JOIN
            TB_USER_MESSAGE user_message
            ON messaging.USER_MESSAGE_ID=user_message.ID_PK
            LEFT OUTER JOIN
            TB_PROPERTY property5_
            ON user_message.ID_PK=property5_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN
            TB_PROPERTY property6_
            ON user_message.ID_PK=property6_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN
            TB_PARTY_ID partyid7_
            ON user_message.ID_PK=partyid7_.FROM_ID
            LEFT OUTER JOIN
            TB_PARTY_ID partyid8_
            ON user_message.ID_PK=partyid8_.TO_ID CROSS
            JOIN
            TB_MESSAGE_INFO message_info
            WHERE
            user_message.messageInfo_ID_PK=message_info.ID_PK
            AND message_info2.MESSAGE_ID=message_log.MESSAGE_ID
            AND message_info2.REF_TO_MESSAGE_ID=message_info.MESSAGE_ID
            AND property5_.NAME='originalSender'
            AND property6_.NAME='finalRecipient'
            ) result
            ORDER BY result.received ASC;

            COMMIT;
        </sql>
        <sql dbms="oracle">
            INSERT /*+ append*/ INTO TB_MESSAGE_UI (
            id_pk,
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype
            )
            SELECT
            hibernate_sequence.NEXTVAL,
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            original_sender,
            final_recipient,
            ref_to_message_id,
            failed,
            restored,
            message_subtype
            FROM
            (
            SELECT
            *
            FROM
            (
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            user_message.coll_info_convers_id AS conversation_id,
            partyid5_.value AS from_id,
            partyid6_.value AS to_id,
            property.value AS original_sender,
            property2.value AS final_recipient,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype
            FROM
            tb_message_log message_log
            LEFT OUTER JOIN tb_message_info message_info ON message_log.message_id = message_info.message_id,tb_user_message user_message
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid5_ ON user_message.id_pk = partyid5_.from_id
            LEFT OUTER JOIN tb_party_id partyid6_ ON user_message.id_pk = partyid6_.to_id
            WHERE
            user_message.messageinfo_id_pk = message_info.id_pk
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            UNION
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            '' AS conversation_id,
            partyid7_.value AS from_id,
            partyid8_.value AS to_id,
            property.value AS original_sender,
            property2.value AS final_recipient,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype
            FROM
            tb_message_log message_log
            CROSS JOIN tb_messaging messaging
            INNER JOIN tb_signal_message signalmess2_ ON messaging.signal_message_id = signalmess2_.id_pk
            LEFT OUTER JOIN tb_message_info message_info ON signalmess2_.messageinfo_id_pk = message_info.id_pk
            INNER JOIN tb_user_message user_message ON messaging.user_message_id = user_message.id_pk
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid7_ ON user_message.id_pk = partyid7_.from_id
            LEFT OUTER JOIN tb_party_id partyid8_ ON user_message.id_pk = partyid8_.to_id
            CROSS JOIN tb_message_info message_info2
            WHERE
            user_message.messageinfo_id_pk = message_info2.id_pk
            AND message_info.message_id = message_log.message_id
            AND message_info.ref_to_message_id = message_info2.message_id
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            ) result
            ORDER BY
            result.received ASC
            );

            COMMIT;
        </sql>
    </changeSet>
    <changeSet id="EDELIVERY-3361_1" author="CatalinEnache">
        <addUniqueConstraint
                columnNames="MESSAGE_ID"
                constraintName="UNI_MSG_UI_MSG_ID"
                tableName="TB_MESSAGE_UI"
        />
        <createIndex indexName="IDX_MSG_UI_STS_TYPE_STYPE_RCV" tableName="TB_MESSAGE_UI">
            <column name="MESSAGE_STATUS"/>
            <column name="MESSAGE_TYPE"/>
            <column name="MESSAGE_SUBTYPE"/>
            <column name="RECEIVED"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_MSH_ROLE" tableName="TB_MESSAGE_UI">
            <column name="MSH_ROLE"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_FROM_SCHEME" tableName="TB_MESSAGE_UI">
            <column name="FROM_SCHEME"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_TO_SCHEME" tableName="TB_MESSAGE_UI">
            <column name="TO_SCHEME"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_FROM_ID" tableName="TB_MESSAGE_UI">
            <column name="FROM_ID"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_TO_ID" tableName="TB_MESSAGE_UI">
            <column name="TO_ID"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_REF_MSG_ID" tableName="TB_MESSAGE_UI">
            <column name="REF_TO_MESSAGE_ID"/>
        </createIndex>
        <createIndex indexName="IDX_MSG_UI_CONV_ID" tableName="TB_MESSAGE_UI">
            <column name="CONVERSATION_ID"/>
        </createIndex>
    </changeSet>
</databaseChangeLog>
