Domibus 4.0
- Each plugin can now specify its own list of notification types for which it expects notifications.
- Upgrade the following libraries:hibernate, atomikos,spring,liquibase,junit
- Upgrade the java version
- Add an audit and versioning system
- Possibility to have information of all PMode changes' history
- Possibility to export the contents of a datatable to CSV
- Removed deprecated methods from ws-plugin: sendMessage, downloadMessage, getMessageStatus
Domibus 3.3.2
- Add certificate revocation logging.
    When a certificate is about to expire a warning message will be displayed in the logs.
    When a certificate has expired a error message will be displayed in the logs.
- Several other log improvements
- Corrected logs configuration in logback.xml file which have cause wrong info to be written to business log file
- When FS-Plugin will be used on Receiver Domibus installation, metadata.xml will be written along with payload(s) into Incoming folder
- Added Database delete (cleanup) scripts for MySQL and Oracle - these will be provided into Domibus sql-scripts distribution .zip file
- Corrected the retry policy for the DomibusSendMessageQueue and DomibusPullMessageQueue for WildFly distribution
Domibus 3.3.1
- Add an account locking policy mechanism. When a user has failed to provide the correct password five times, his account will be locked for a configurable amount of time (default to one hour).
- Allow plugins to retrieve the metadata of a User Message
- Fixed an issue in the reliability checker
- Fixed an issue in the receipt generated on WildFly
- Fixed the receiving of messages with uncompressed payloads when compression is activated in the PMode
Domibus 3.3
- Additional validation on pMode upload: when @type is missing or is empty, the value of PartyId, Service and AgreementRef, must be an URI (relative URIs accepted).
- Use optional regex validation for dynamic discovery certificate. New property domibus.dynamic.discovery.oasisclient.regexCertificateSubjectValidation.
- Fix sendAttempt counter (initial one plus number of retries defined in the pmode)
- Block the receiving of the message in case the sender's certificate is not valid or revoked.
    Two more properties were added (for more details check domibus.properties file):
        o domibus.sender.certificate.validation.onsending=true
        o domibus.sender.certificate.validation.onreceiving=true
    Renamed "domibus.senderparty.trust.verification" to "domibus.sender.trust.validation.onreceiving". Default value "false" has not been changed.
    Renamed "domibus.certificate.validation.enabled" to "domibus.receiver.certificate.validation.onsending". Default value "true" has not been changed.
- Discard domibus.internal.dispatch.queue from using the DLQ queue.
- Discard domibus.internal.pull.queue from using the DLQ queue.
- Possibility to notify the plugins when the message status changes; new method added in the plugin API: eu.domibus.plugin.BackendConnector.messageStatusChanged(eu.domibus.common.MessageStatusChangeEvent)
- Included the payload location as a property of the JMS Message
- New default Domibus plugin added: FileSystem Plugin
- Performance improvements
- Configuration of Domibus is done with domibus.properties instead of externalized spring xml files
- Add the possibility to pull messages
- Expose the DOWNLOADED message status in the plugin API and the default ws plugin
- Deprecated the methods eu.domibus.plugin.AbstractBackendConnector.getMessageStatus(String messageId) and eu.domibus.plugin.handler.MessageRetriever.getMessageStatus(String messageId) which converts the DOWNLOADED status to RECEIVED. Use the new getStatus(String messageId) method instead.
- Deprecated the following methods from eu.domibus.plugin.webService.impl.BackendWebServiceImpl in the Default WS Plugin:
    o sendMessage(SubmitRequest, Messaging). Use submitMessage(SubmitRequest, Messaging) which add support for large files.
    o downloadMessage(RetrieveMessageRequest, Holder, Holder). Use retrieveMessage(RetrieveMessageRequest, Holder, Holder) which add support for large files.
    o getMessageStatus(StatusRequest). Use getStatus(StatusRequest) which converts the DOWNLOADED status to RECEIVED.
- Migrated the logging framework to SLF4J and Logback
- Domibus uses 3 logs files: domibus.log, domibus-business.log and domibus-security.log
- JMS monitoring: fixed the computation of the total number of messages in the queue for WebLogic
- JMS monitoring: fixed the search of the JMS messages for WebLogic(for JMS messages having property with null values) and Tomcat(for JMS messages with no "Text" property)
- JMS monitoring: extended the functionality for clustered installations.
- Core: listPendingMessages and download operations behave correctly in case of a clustered installation.
- Core: Spring services are always executing within a transaction even if there is no specific @Transactional annotation present
- Core: Quartz integration with managed threads in WebLogic and WildFly
- Core: during sendMessage operation, Domibus verifies that the parties roles are allowed (present in PMode) and different among them.
- Core: during sendMessage operation, Domibus verifies that the message is being sent by the same party as the one configured as the sending access point.
- Core: during sendMessage operation, Domibus trims the leading and trailing whitespaces in all the request fields.
- Core: during sendMessage operation, Domibus verifies that, if MessageId and RefToMessageId is specified by backend client, then it should contain only printable ASCII characters.
- Core: during sendMessage operation, all validations comparisons with the PMode data are case insensitive.
- Core: during MSH dispatch operation, Domibus verifies the validity of sender's certificate. The sender party name needs to be the same as the certificate alias from the keystore.
- Core: during MSH receive operation, Domibus can verify the trust of the sender if activated.
- Core: validation on MessageId and RefToMessageId can be by-passed by removing the key "domibus.sendMessage.messageIdPattern" from configuration file.
- Core: new configuration properties added for ConnectionTimeout and ReceiveTimeout to allow fine tuning of the access points' conduit.
- Core: provision added to support the "DoNothing security" policy (no security, no encryption).
- Core+Plugins: added the DOWNLOADED status to message state workflow. This new status is also visible through the console.
- DB: MySQL installation of Domibus database is set to have collation of 'UTF8_BIN' to make DB level string comparison (in SQLs) case sensitive. This will enable support for case sensitive message ids.
- WS Plugin: the response list of ListPendingMessages operation can be limited using a new configuration property (domibus.listPendingMessages.maxCount).
- Config: increased the value of the retry tolerance to 3 hours
- Config: added new property "domibus.sendMessage.failure.delete.payload" to enable/disable the removal of the message payload on send failure.
- Core: the core exposes services via the new domibus-ext-services-api module
- Core: possibility to register message acknowledgments using the Java API and the REST core services
- Core: possibility to monitor and manage messages using the Java API and the REST core services
- JMS: In ActiveMQ message redelivery is now configured solely on the broker;The client / connection factory will not try to redeliver anymore.
Domibus 3.2.5
- Dynamic discovery: integrate Domibus with OASIS compliant SMP
- Added new security policy file, eSensPolicy.v2.0_CA.xml to support embedded public certificate
- Fixed the JMS property names used in the default-jms-plugin
- Persist raw request/response headers for non repudiation purposes
- Possibility to use AND/OR operator in the message filter routing criteria
- Ignore LDAP CRL endpoints when checking certificates revocation
- Block the sending of the message in case the receiver certificate is not valid or revoked
Domibus 3.2.4
- Default WS plugin: backwards compatibility fix for Domibus >3.2.2
- Fix error when downloading a message with an empty payload
- CachingPModeProvider fix when Oracle database is used
Domibus 3.2.3
- JMS monitoring: extended the functionality for clustered installations.
- Core: listPendingMessages and download operations behave correctly in case of a clustered installation.
- The MSH WS endpoint returns 200 for the GET operation
- Renamed the eSensPolicy.xml WS policy to eSensPolicy.v2.0.xml which supports the signing of the empty body
- Added the domibus-plugins.xml file in the configuration of the Tomcat full installation
Domibus 3.2.2
- Possibility to configure the limit of downloaded/not-downloaded messages for the retention worker
- Fixed the notifications sent by the JMS plugin
- Deprecated the method "void messageReceiveFailed(String messageId, String ednpoint)" from the BackendConnector interface and added a new method "void messageReceiveFailed(MessageReceiveFailureEvent messageReceiveFailureEvent)"
- Changed the default JMX password for WebLogic
- Fixed the search of the JMS messages for WebLogic(for JMS messages having property with null values) and Tomcat(for JMS messages with no "Text" property)
- Solved issue related to CXF attachment temp file leakage (for payloads over 200Mb).
- New configuration properties added for ConnectionTimeout and ReceiveTimeout for connection between access points.
- Fixed Domibus integration with SMP/SML
- Fixed bug about the retention (downloaded and undownloaded) parameters. Downloading the message, its status will be set to DOWNLOADED.
- Fixed message cannot be downloaded, when the message retention download is set to 0 and the file storage is used.
Domibus 3.2.1
- JMX access to the JMS queues is secured
- Force the usage of the apache commons IO library from the application
- Possibility to load the logging configuration file from ${domibus.conf.location} for WebLogic/WildFly/Tomcat
Domibus 3.2-FR
- Added authentication/authorization example to the WS default plugin. Disabled by default, to assure backwards compatibility with older versions.
- Added XSD validation of the PMODE when it is uploaded by the user.
- Fixed the filtering and the pagination on the "Message Log" page
- Changed table names to be all UPPERCASE to fix the issue related to case sensitivity on Linux.
- Fixed the download message request issue when the schema validation and MTOM are both enabled.
- Schema validation for all WS operations is enabled by default. MTOM is disabled by default.
- Fixed the filtering and the pagination on the Message Log and the Error Log pages.
- Fixed issue with the signal messages that were not stored/cleared.
- Message Log page is now showing also the signal messages.
- Fixed issue about message delete timestamp not correctly set and MessageRetentionService failing to clear data of downloaded and retained messages.
- Fixed the retry mechanism in the JMS listeners
Domibus 3.2-RC1
- Added XSD validation for the operations exposed by the backend WS
- Harmonize the plugin registration on Tomcat/WebLogic/WildFly
- CRL validation
- Backend WS, interface changed as for operations getMessageStatus and getMessageErrors
- Enabled MTOM for backend WS.
- Ping messages are not stored/delivered to the backend
- Possibility to validate the payload using custom validators
- JMS monitoring via the Admin page
- Added support for dead letter queues
- Added support for Java 8
- Added dynamic hash calculation of config files
- All tests are performed using database and filesystem storage options.
Domibus 3.1.1
- Fixed retry logic issue
- Set BINARY_DATA type to LONGBLOB on mysql (migration scripts created)
- Fixed the issue with the missing "value" in the <env:Code> when an error response is returned
- Fixed the issue when checking the agreementRef sent in the header's message and the agreement configured in the PMode
- Fixed the environment variable domibus.config.location for WildFly distribution running on Linux
Domibus 3.1.0
- Fixed issue when sending a message with an ID that is over 255 characters long
- Fixed issue when sending a message with an ID that was already used
- Fixed issue when trying to download a message from the sender gateway
- Fixed retention check (MPC) during download Message
- Fixed a backend notification error "could not notify backend of rejected message"
- Fixed Data truncation: Data too long for column 'ERROR_DETAIL'
- Fixed transaction management for Weblogic
- Added support for WildFly 9.0.2
- Improved the error codes and messages when submission fails
- Atomikos warnings are not shown anymore in the logs
- The ThroughPutLimiter has been removed.
- The Truststore is now reloaded during the PMode upload
- The domibus-security.xml is not compatible with the one of previous releases
- Logging is now using DailyRollingFileAppender
Domibus 3.1-RC2
- Fixed issue on JMS plugin when no ServiceType is set
- Fixed a MimeType issue when compression is enabled
- Validated that payload href is always preceded by "cid:"
- Fixed connectivity issue, 200 OK with a valid receipt rejected by Domibus
- Fixed a bug on RefToMessageId missing from the receipt when signaling an error
- Fixed two generic AS4 Minder test cases failing due to invalid error code returned for expected decompression issues
- Pass conformance tests against Minder
- Separate packaging for sample configuration and testing
Domibus 3.1-RC1
- Added support for clustering
- Added support of Weblogic 12c
- Additional unit testing
- Introduction of the new plugin architecture
- Improved documentation
- Fixing bugs and issues
Domibus 3.0-Beta 1
 - initial release of Domibus 3
Domibus 3.0-Beta 2
 - bugfixes for several minor issues
 - major documentation update
 - PMode upload functionality
Domibus 3.0-RC1
 - bugfixes for several minor issues
 - example implementation of JMS integration
 - documentation update
 - rework of submission module
 - support for property and payload profiling
 Domibus 3.0-RC2
 - bugfixes
 Domibus 3.0-RC3
 - bugfixes
 - experimental SMP/SML support


