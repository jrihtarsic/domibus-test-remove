
# ---------------------------------- Security ----------------------------------

#Number of console login attempt before the user is deactivated (default 5)
#domibus.console.login.maximum.attempt=5

#Time in seconds for a suspended user to be reactivated. (1 hour per default if property is not set, if 0 the user will not be reactivated)
#domibus.console.login.suspension.time=3600

#Cron job that determines the interval at which the system checks for account to be reactivated.
#domibus.account.unlock.cron=0 0/1 * * * ?

# ---------------------------------- Password Policy -----------------------------------

#Password minimum complexity rules (empty to disable password complexity enforcement)
#domibus.passwordPolicy.pattern=^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~`!@#$%^&+=\\-_<>.,?:;*/()|\\[\\]{}'"\\\\]).{8,32}$

#Password validation message
#domibus.passwordPolicy.validationMessage=Minimum length: 8 characters;Maximum length: 32 characters;At least one letter in lowercase;At least one letter in uppercase;At least one digit;At least one special character

#Password expiration policy in days (0 to disable)
#domibus.passwordPolicy.expiration=90

#Default password expiration policy in days (0 to disable)
#domibus.passwordPolicy.defaultPasswordExpiration=15

#Password expiration policy: how many days before expiration should the system warn users at login
#domibus.passwordPolicy.warning.beforeExpiration=15

#Password reuse policy: do not reuse any of the last N passwords (0 to disable)
#domibus.passwordPolicy.dontReuseLast=5

#Default password validation policy enabled/disabled (by default is enabled)
#domibus.passwordPolicy.checkDefaultPassword=true

#Cron expression that specifies the frequency of the password expiration check
#domibus.passwordPolicies.check.cron=0 0 0/1 * * ?


# ---------------------------------- User Alert management -----------------------------------

#Cron configuration for cleaning alerts.
#domibus.alert.cleaner.cron=0 0 0/1 * * ?

#Lifetime in days of alerts before cleaning.
#domibus.alert.cleaner.alert.lifetime=20

#Enable/disable the entire alert module.
#domibus.alert.active=true

#Allow to disable alert mail sending.
#domibus.alert.mail.sending.active=false

#Frequency of failed alerts retry.
#domibus.alert.retry.cron=0 0/1 * * * ?

#Elapsed time in minutes between alert retry.
#domibus.alert.retry.time=1

#Maximum number of attempts for failed alerts
#domibus.alert.retry.max_attempts=2

#Alert sender email. Mandatory if #domibus.alert.active and #domibus.alert.mail.sending.active are true
#domibus.alert.sender.email=

#Alert email receiver. Mandatory if #domibus.alert.active and #domibus.alert.mail.sending.active are true
#You can specify multiple recipients by using semicolon separated email addresses: name1@gmail.com;name2@gmail.com
#domibus.alert.receiver.email=

# ---------------------------------- User alert management:Authentication module -----------------

#Enable/disable the login failure alert of the authentication module.
#domibus.alert.user.login_failure.active=true

#Alert level for login failure.
#domibus.alert.user.login_failure.level=LOW

#Login failure mail subject.
#domibus.alert.user.login_failure.mail.subject=Super user login failure

#Enable/disable the account disable alert of the authentication module.
#domibus.alert.user.account_disabled.active=true

#Alert level for account disabled.
#domibus.alert.user.account_disabled.level=HIGH

#When should the account disabled alert be triggered.
# 2 possible values:
# AT_LOGON: An alert will be triggered each a time user tries to login to a disabled account.
# WHEN_BLOCKED: An alert will be triggered once when the account got disabled.
#domibus.alert.user.account_disabled.moment=WHEN_BLOCKED

#Account disabled mail subject.
#domibus.alert.user.account_disabled.subject=Super user account disabled


# ---------------------------------- Alert management:Password policy  -----------------

#Enable/disable the imminent password expiration alert
#domibus.alert.password.imminent_expiration.active=true

#Number of days before expiration as for how long before expiration the system should send alerts.
#domibus.alert.password.imminent_expiration.delay_days=15

#Frequency in days between alerts.
#domibus.alert.password.imminent_expiration.frequency_days=3

#Password imminent expiration alert level.
#domibus.alert.password.imminent_expiration.level=LOW

#Password imminent expiration mail subject.
#domibus.alert.password.imminent_expiration.mail.subject=Password imminent expiration

#Enable/disable the imminent password expiration alert
#domibus.alert.password.expired.active=true

#Number of days after expiration as for how long the system should send alerts.
#domibus.alert.password.expired.delay_days=30

#Frequency in days between alerts.
#domibus.alert.password.expired.frequency_days=5

#Password expiration alert level.
#domibus.alert.password.expired.level=LOW

#Password expiration mail subject.
#domibus.alert.password.expired.mail.subject=Password expired
        