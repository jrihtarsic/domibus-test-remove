
# ---------------------------------- GUI -------------------------

#The title shown in the Tab of Admin Console
#domain_name.domibus.UI.title.name=windowTitle

#The name of the domain
#domain_name.domain.title=domainTitle

#Number of console login attempt before the user is deactivated (default 5)
#domain_name.domibus.console.login.maximum.attempt=5

#Time in seconds for a suspended user to be reactivated. (1 hour per default if property is not set, if 0 the user will not be reactivated)
#domain_name.domibus.console.login.suspension.time=3600

# ---------------------------------- Keystore/Truststore -----------------------

#The location of the keystore
domain_name.domibus.security.keystore.location=${domibus.config.location}/keystores/domain_name_gateway_keystore.jks

#The type of the used keystore
domain_name.domibus.security.keystore.type=jks

#The password used to load the keystore
domain_name.domibus.security.keystore.password=keystore_password

#Private key
#The alias from the keystore of the private key
domain_name.domibus.security.key.private.alias=private_key_alias

#The private key password
domain_name.domibus.security.key.private.password=private_key_password

#Truststore
#The location of the truststore
domain_name.domibus.security.truststore.location=${domibus.config.location}/keystores/domain_name_gateway_truststore.jks

#Type of the used truststore
domain_name.domibus.security.truststore.type=jks

#The password used to load the trustStore
domain_name.domibus.security.truststore.password=truststore_password

# ---------------------------------- Database ----------------------------------

#Domain schema
domain_name.domibus.database.schema=domain_name_schema

# ---------------------------------- Payload -----------------------------------

#It is possible to configure Domibus to save the message payloads on the file system instead of the database. This setting is recommended when exchanging payloads bigger than 30MB.
#In order to enable the file system storage please configure the following property, it is the location on the file system where the payloads will be saved.
#Remark:
#In a cluster configuration the file system storage needs to be accessible by all the nodes from the cluster.
#domain_name.domibus.attachment.storage.location=your_file_system_location

# ---------------------------------- Message -----------------------------------

#The suffix of the messageId generated by this instance of domibus. Schema is:  ${UUID}@${SUFFIX}
#domain_name.domibus.msh.messageid.suffix=domibus.eu

# ---------------------------------- Retry -------------------------------------

#Retry Worker execution interval as a cron expression
#domain_name.domibus.msh.retry.cron=0/5 * * * * ?

#Timeout tolerance for retry messages (in miliseconds). Scheduled retries that, due to any reason, were not performed within this period will be timeout
#domain_name.domibus.msh.retry.tolerance=10800000

# ---------------------------------- Dynamic Discovery -------------------------

#Whether to use dynamic discovery or not
#domain_name.domibus.dynamicdiscovery.useDynamicDiscovery=false

#The SML zone
#domain_name.domibus.smlzone=acc.edelivery.tech.ec.europa.eu

#The dynamic discovery client to be used for the dynamic process. Possible values: OASIS and PEPPOL. Defaults to OASIS.
#domain_name.domibus.dynamicdiscovery.client.specification=OASIS

#Specifies the PEPPOL dynamic discovery client mode: PRODUCTION or TEST mode. Defaults to TEST.
#domain_name.domibus.dynamicdiscovery.peppolclient.mode=TEST

#Apart from validating response of signer certificates against the truststore, the Oasis Dynamic Discovery Client gives
#the possibility to add (optional) a regular expression to validate any certificate metadata related to the subject of the signer certificate.
#domain_name.domibus.dynamicdiscovery.oasisclient.regexCertificateSubjectValidation="^.*EHEALTH_SMP.*$"

#The role of the responder PartyId may be defined here (default values are: urn:fdc:peppol.eu:2017:roles:ap:as4 for PEPPOL and http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder for OASIS
#domain_name.domibus.dynamicdiscovery.partyid.responder.role=http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder

#The type of the PartyId may be defined here (default values are: urn:fdc:peppol.eu:2017:identifiers:ap for PEPPOL and urn:oasis:names:tc:ebcore:partyid-type:unregistered for OASIS
#domain_name.domibus.dynamicdiscovery.partyid.type=urn:oasis:names:tc:ebcore:partyid-type:unregistered

# ---------------------------------- Validation --------------------------------

#If activated Domibus will verify before sending a User Message if the receiver's certificate is valid and not revoked. If the receiver's certificate is not valid or it has been revoked
#Domibus will not send the message and it will mark it as SEND_FAILURE (default is true)
#domain_name.domibus.receiver.certificate.validation.onsending=true

#If activated Domibus will verify before sending a User Message if his own certificate is valid and not revoked. If the certificate is not valid or it has been revoked
#Domibus will not send the message and it will mark it as SEND_FAILURE (default is true)
#domain_name.domibus.sender.certificate.validation.onsending=true

#If activated Domibus will verify before receiving a User Message if the sender's certificate is valid and not revoked. If the certificate is not valid or it has been revoked
#Domibus will not accept the message (default is true)
#domain_name.domibus.sender.certificate.validation.onreceiving=true

#If activated Domibus will verify before receiving a User Message if the sender's party name is part of the CN in the sender's certificate. If not,
#Domibus will not accept the message (default is false)
#domain_name.domibus.sender.trust.validation.onreceiving = false

#Accepted Format for MessageId
#domain_name.domibus.sendMessage.messageIdPattern=^[\\x20-\\x7E]*$

# ---------------------------------- Dispatcher --------------------------------

#Timeout values for communication between the access points
#ConnectionTimeOut - Specifies the amount of time, in milliseconds, that the consumer will attempt to establish a connection before it times out. 0 is infinite.
#domain_name.domibus.dispatcher.connectionTimeout=240000

#ReceiveTimeout - Specifies the amount of time, in milliseconds, that the consumer will wait for a response before it times out. 0 is infinite.
#domain_name.domibus.dispatcher.receiveTimeout=240000

#Allows chunking when sending messages to other Access Points
#domain_name.domibus.dispatcher.allowChunking=true

#If domibus.dispatcher.allowChunking is true, this property sets the threshold at which messages start getting chunked(in bytes). Messages under this limit do not get chunked. Defaults to 100 MB.
#domain_name.domibus.dispatcher.chunkingThreshold=104857600

#Specify concurrency limits via a "lower-upper" String, e.g. "5-10", or a simple upper limit String, e.g. "10" (the lower limit will be 1 in this case)
#when sending messages to other Access Points
#domain_name.domibus.dispatcher.concurency=5-20

#Cache the dispatcher clients used for communication between the access points. Defaults to false.
#domain_name.domibus.dispatcher.cacheable=false

# ---------------------------------- Retention ---------------------------------

#Cron expression used for configuring the retention worker scheduling. The retention worker deletes the expired messages(downloaded and not-downloaded).
#domain_name.domibus.retentionWorker.cronExpression=0 0/1 * * * ?

#Uncomment the following line if you need to tweak the maximum downloaded messages to be deleted by the retention worker. Defaults to 50.
#domain_name.message.retention.downloaded.max.delete=50

#Uncomment the following line if you need to tweak the maximum not-downloaded messages to be deleted by the retention worker. Defaults to 50.
#domain_name.message.retention.not_downloaded.max.delete=50

# ---------------------------------- Pulling-----------------------------------

#Cron expression used for configuring the message puller scheduling.
#domain_name.domibus.msh.pull.cron=0 0 0/1 * * ?

# Number of threads used to parallelize the pull requests.
#domain_name.domibus.pull.queue.concurency=1-1

#Number or requests executed every cron cycle
#domain_name.domibus.pull.request.send.per.job.cycle=1

#Pull Retry Worker execution interval as a cron expression
#domain_name.domibus.pull.retry.cron=0/10 * * * * ?

# ---------------------------------- Alert management -----------------------------------
#Enable/disable the entire alert module. Pay attention to the fact that if the module is activated, all properties
#under the mandatory section should be configured.
#domain_name.domibus.alert.active=true

#Allow to disable alert mail sending.
#domain_name.domibus.alert.mail.sending.active=false

# -----------------------------------Mandatory configuration start (if domibus.alert.mail.sending.active=true) -----------

#Alert sender email.
domain_name.domibus.alert.sender.email=

#Alert email receiver.
domain_name.domibus.alert.receiver.email=

# ----------------------------------Mandatory configuration end-----------------------------------

#The following properties can stay commented if no modifications to the default values are needed.

#Cron configuration for cleaning alerts.
#domain_name.domibus.alert.cleaner.cron=0 0 0/1 * * ?

#Lifetime in days of alerts before cleaning.
#domain_name.domibus.alert.cleaner.alert.lifetime=20

#Frequency of failed alerts retry.
#domain_name.domibus.alert.retry.cron=0 0/1 * * * ?

#Elapsed time in minutes between alert retry.
#domain_name.domibus.alert.retry.time=1

#Maximum number of attempts for failed alerts
#domain_name.domibus.alert.retry.max_attempts=2

# ---------------------------------- Alert management:messaging module -----------------

#Enable/disable the messaging alert module.
#domain_name.domibus.alert.msg.communication_failure.active=true

#Message status change that should be notified by the messaging alert module. Comma separated.
#domain_name.domibus.alert.msg.communication_failure.states=SEND_FAILURE

#Alert levels corresponding to message status defined in previous property(domibus.alert.msg.communication_failure.states) .
#Should be (HIGH, MEDIUM OR LOW)
#domain_name.domibus.alert.msg.communication_failure.level=HIGH

#Messaging alert module mail subject.
#domain_name.domibus.alert.msg.communication_failure.mail.subject=Message status change

# ---------------------------------- Alert management:Authentication module -----------------

#Enable/disable the login failure alert of the authentication module.
#domain_name.domibus.alert.user.login_failure.active=true

#Alert level for login failure.
#domain_name.domibus.alert.user.login_failure.level=LOW

#Login failure mail subject.
#domain_name.domibus.alert.user.login_failure.mail.subject=Login failure

#Enable/disable the account disable alert of the authentication module.
#domain_name.domibus.alert.user.account_disabled.active=true

#Alert level for account disabled.
#domain_name.domibus.alert.user.account_disabled.level=HIGH

#When should the account disabled alert be triggered.
# 2 possible values:
# AT_LOGON: An alert will be triggered each time a user tries to login to a disabled account.
# WHEN_BLOCKED: An alert will be triggered once when the account got disabled.
#domibus.alert.user.account_disabled.moment=WHEN_BLOCKED

#Account disabled mail subject.
#domibus.alert.user.account_disabled.subject=Account disabled

# ---------------------------------- Alert management:Certificate scanner -----------------

#Enable/disable the imminent certificate expiration alert of certificate scanner module.
#domain_name.domibus.alert.cert.imminent_expiration.active=true

#Number of days before revocation as from when the system should start sending alerts.
#domain_name.domibus.alert.cert.imminent_expiration.delay_days=61

#Frequency in days between alerts.
#domain_name.domibus.alert.cert.imminent_expiration.frequency_days=14

#Certificate imminent expiration alert level.
#domain_name.domibus.alert.cert.imminent_expiration.level=HIGH

#Certificate imminent expiration mail subject.
#domain_name.domibus.alert.cert.imminent_expiration.mail.subject=Certificate imminent expiration

#Enable/disable the certificate expired alert of certificate scanner module.
#domain_name.domibus.alert.cert.expired.active=true

#Frequency in days between alerts.
#domain_name.domibus.alert.cert.expired.frequency_days=7

#How long(in days) after the revocation should the system trigger alert for the expired certificate.
#domain_name.domibus.alert.cert.expired.duration_days=92

#Certificate expired alert level.
#domain_name.domibus.alert.cert.expired.level=HIGH

#Certificate expired mail subject.
#domain_name.domibus.alert.cert.expired.mail.subject=Certificate expired

# ---------------------------------- Various ---------------------------------------

#Whether to delete the message payload on send failure. Defaults to false (the administrator can put the message back in the send queue).
#domain_name.domibus.sendMessage.failure.delete.payload=false