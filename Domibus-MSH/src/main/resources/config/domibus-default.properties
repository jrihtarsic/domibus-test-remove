# ---------------------------------- GUI -------------------------
#Max rows for CSV export
domibus.ui.csv.max.rows=10000

# ---------------------------------- Dispatcher --------------------------------

#Timeout values for communication between the access points
#ConnectionTimeOut - Specifies the amount of time, in milliseconds, that the consumer will attempt to establish a connection before it times out. 0 is infinite.
domibus.dispatcher.connectionTimeout=240000

#ReceiveTimeout - Specifies the amount of time, in milliseconds, that the consumer will wait for a response before it times out. 0 is infinite.
domibus.dispatcher.receiveTimeout=240000

#Allows chunking when sending messages to other Access Points
domibus.dispatcher.allowChunking=true

#If domibus.dispatcher.allowChunking is true, this property sets the threshold at which messages start getting chunked(in bytes). Messages under this limit do not get chunked. Defaults to 100 MB.
domibus.dispatcher.chunkingThreshold=104857600

#Specifies if the connection will be kept alive between C2 and C3. Default value is false.
domibus.dispatcher.connection.keepAlive=false

# ---------------------------------- Alert management -----------------------------------

#Cron configuration for cleaning alerts.
domibus.alert.cleaner.cron=0 0 0/1 * * ?

#Lifetime in days of alerts before cleaning.
domibus.alert.cleaner.alert.lifetime=20

#Enable/disable the entire alert module.
domibus.alert.active=true

#Allow to disable alert mail sending.
domibus.alert.mail.sending.active=false

#SMTP Socket I/O timeout value in milliseconds
domibus.alert.mail.smtp.timeout=5000

#Concurency to process the alerts.
domibus.alert.queue.concurrency=1

#Frequency of failed alerts retry.
domibus.alert.retry.cron=0 0/1 * * * ?

#Elapsed time in minutes between alert retry.
domibus.alert.retry.time=1

#Maximum number of attempts for failed alerts
domibus.alert.retry.max_attempts=2

# ---------------------------------- Super user Alert management -----------------------------------

#Cron configuration for cleaning alerts.
domibus.alert.super.cleaner.cron=0 0 0/1 * * ?

#Lifetime in days of alerts before cleaning.
domibus.alert.super.cleaner.alert.lifetime=20

#Enable/disable the entire alert module.
domibus.alert.super.active=true

#Allow to disable alert mail sending.
domibus.alert.super.mail.sending.active=false

#Frequency of failed alerts retry.
domibus.alert.super.retry.cron=0 0/1 * * * ?

#Elapsed time in minutes between alert retry.
domibus.alert.super.retry.time=1

#Maximum number of attempts for failed alerts
domibus.alert.super.retry.max_attempts=2

# ---------------------------------- Alert management:messaging module -----------------

#Enable/disable the messaging alert module.
domibus.alert.msg.communication_failure.active=true

#Message status change that should be notified by the messaging alert module. Comma separated.
domibus.alert.msg.communication_failure.states=SEND_FAILURE

#Alert levels corresponding to message status defined in previous property(domibus.alert.msg.communication_failure.states) .
#Should be (HIGH, MEDIUM OR LOW)
domibus.alert.msg.communication_failure.level=HIGH

#Messaging alert module mail subject.
domibus.alert.msg.communication_failure.mail.subject=Message status change

# ---------------------------------- Alert management:Authentication module -----------------

#Enable/disable the login failure alert of the authentication module.
domibus.alert.user.login_failure.active=true

#Alert level for login failure.
domibus.alert.user.login_failure.level=LOW

#Login failure mail subject.
domibus.alert.user.login_failure.mail.subject=Login failure

#Enable/disable the account disable alert of the authentication module.
domibus.alert.user.account_disabled.active=true

#Alert level for account disabled.
domibus.alert.user.account_disabled.level=HIGH

#When should the account disabled alert be triggered.
# 2 possible values:
# AT_LOGON: An alert will be triggered each a time user tries to login to a disabled account.
# WHEN_BLOCKED: An alert will be triggered once when the account got disabled.
domibus.alert.user.account_disabled.moment=WHEN_BLOCKED

#Account disabled mail subject.
domibus.alert.user.account_disabled.subject=Account disabled

# ---------------------------------- Super user alert management:Authentication module -----------------

#Enable/disable the login failure alert of the authentication module.
domibus.alert.super.user.login_failure.active=true

#Alert level for login failure.
domibus.alert.super.user.login_failure.level=LOW

#Login failure mail subject.
domibus.alert.super.user.login_failure.mail.subject=Super user login failure

#Enable/disable the account disable alert of the authentication module.
domibus.alert.super.user.account_disabled.active=true

#Alert level for account disabled.
domibus.alert.super.user.account_disabled.level=HIGH

#When should the account disabled alert be triggered.
# 2 possible values:
# AT_LOGON: An alert will be triggered each a time user tries to login to a disabled account.
# WHEN_BLOCKED: An alert will be triggered once when the account got disabled.
domibus.alert.super.user.account_disabled.moment=WHEN_BLOCKED

#Account disabled mail subject.
domibus.alert.super.user.account_disabled.subject=Super user account disabled

# ---------------------------------- Alert management:Certificate scanner -----------------

#Enable/disable the imminent certificate expiration alert of certificate scanner module.
domibus.alert.cert.imminent_expiration.active=true

#Number of days before revocation as from when the system should start sending alerts.
domibus.alert.cert.imminent_expiration.delay_days=60

#Frequency in days between alerts.
domibus.alert.cert.imminent_expiration.frequency_days=14

#Certificate imminent expiration alert level.
domibus.alert.cert.imminent_expiration.level=HIGH

#Certificate imminent expiration mail subject.
domibus.alert.cert.imminent_expiration.mail.subject=Certificate imminent expiration

#Enable/disable the certificate expired alert of certificate scanner module.
domibus.alert.cert.expired.active=true

#Frequency in days between alerts.
domibus.alert.cert.expired.frequency_days=7

#How long(in days) after the revocation should the system trigger alert for the expired certificate.
domibus.alert.cert.expired.duration_days=90

#Certificate expired alert level.
domibus.alert.cert.expired.level=HIGH

#Certificate expired mail subject.
domibus.alert.cert.expired.mail.subject=Certificate expired

# ---------------------------------- Pulling-----------------------------------

#Cron expression used for configuring the message puller scheduling.
domibus.msh.pull.cron=0 0 0/1 * * ?

# Number of threads used to parallelize the pull requests.
domibus.pull.queue.concurency=1-1

#Number or requests executed every cron cycle
domibus.pull.request.send.per.job.cycle=1

#Pull Retry Worker execution interval as a cron expression
domibus.pull.retry.cron=0/10 * * * * ?

# ---------------------------------- UI Replication -----------------------------------
#enabled or disabled the UI Replication mechanism
domibus.ui.replication.enabled=false

#Cron job that will check unsynchronized data between native tables and TB_UI_MESSAGE_UI
domibus.ui.replication.sync.cron=0 0 2 * * ?

#max number of records that will be processed by cron job
domibus.ui.replication.sync.cron.max.rows=10000

#concurrency (no of threads) for dispatching messages of ui replication queue
domibus.ui.replication.queue.concurency=3-10

# ---------------------------------- JMS ---------------------------------------
#The maximum number of messages to be listed from the JMS queues. Setting this property is expected to avoid timeouts due to huge results being served.
#Setting this property to zero returns all messages
domibus.jms.queue.maxBrowseSize=10000


# ---------------------------------- Various -----------------------------------
#Number of threads used to parallelize the dispatching of messages to the plugins.
domibus.internal.queue.concurency=3-10

# ---------------------------------- Password Policy -----------------------------------

#Password minimum complexity rules (empty to disable password complexity enforcement)
domibus.passwordPolicy.pattern=^.*(?=..*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~`!@#$%^&+=\\-_<>.,?:;*/()|\\[\\]{}'"\\\\]).{8,32}$

#Password validation message
domibus.passwordPolicy.validationMessage=Minimum length: 8 characters;Maximum length: 32 characters;At least one letter in lowercase;At least one letter in uppercase;At least one digit;At least one special character

#Password expiration policy in days (0 to disable)
domibus.passwordPolicy.expiration=90

#Default password expiration policy in days (0 to disable)
domibus.passwordPolicy.defaultPasswordExpiration=1

#Password expiration policy: how many days before expiration should the system warn users at login
domibus.passwordPolicy.warning.beforeExpiration=15

#Password reuse policy: do not reuse any of the last N passwords (0 to disable)
domibus.passwordPolicy.dontReuseLast=5

#Default password validation policy enabled/disabled (by default is enabled)
domibus.passwordPolicy.checkDefaultPassword=true

#Cron expression that specifies the frequency of the password expiration check
domibus.passwordPolicies.check.cron=0 0 0/1 * * ?

# ---------------------------------- Alert management: Plugin Users Password Policy -----------------------------------

#Password minimum complexity rules (empty to disable password complexity enforcement)
domibus.plugin_passwordPolicy.pattern=^.*(?=..*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~`!@#$%^&+=\\-_<>.,?:;*/()|\\[\\]{}'"\\\\]).{8,32}$

#Password validation message
domibus.plugin_passwordPolicy.validationMessage=Minimum length: 8 characters;Maximum length: 32 characters;At least one letter in lowercase;At least one letter in uppercase;At least one digit;At least one special character

#Password expiration policy in days (0 to disable)
domibus.plugin_passwordPolicy.expiration=90

#Default password expiration policy in days (0 to disable)
domibus.plugin_passwordPolicy.defaultPasswordExpiration=1

#Password reuse policy: do not reuse any of the last N passwords (0 to disable)
domibus.plugin_passwordPolicy.dontReuseLast=5

#Cron expression that specifies the frequency of the password expiration check
domibus.plugin_passwordPolicies.check.cron=0 0 0/1 * * ?

# ---------------------------------- Alert management:Password policy  -----------------

#Enable/disable the imminent password expiration alert
domibus.alert.password.imminent_expiration.active=true

#Number of days before expiration as for how long before expiration the system should send alerts.
domibus.alert.password.imminent_expiration.delay_days=15

#Frequency in days between alerts.
domibus.alert.password.imminent_expiration.frequency_days=3

#Password imminent expiration alert level.
domibus.alert.password.imminent_expiration.level=LOW

#Password imminent expiration mail subject.
domibus.alert.password.imminent_expiration.mail.subject=Password imminent expiration

#Enable/disable the imminent password expiration alert
domibus.alert.password.expired.active=true

#Number of days after expiration as for how long the system should send alerts.
domibus.alert.password.expired.delay_days=30

#Frequency in days between alerts.
domibus.alert.password.expired.frequency_days=5

#Password expiration alert level.
domibus.alert.password.expired.level=LOW

#Password expiration mail subject.
domibus.alert.password.expired.mail.subject=Password expired

# ------------------------------- Domibus instance/environment name ------------------
domibus.instance.name = Domibus

# ---------------------------------- Alert management:Authentication module for Plugin users-----------------

#Enable/disable the login failure alert of the authentication module.
domibus.alert.plugin.user.login_failure.active=true

#Alert level for login failure.
domibus.alert.plugin.user.login_failure.level=LOW

#Login failure mail subject.
domibus.alert.plugin.user.login_failure.mail.subject=Login failure

# ------------------------------------------------------------------------------------