# ---------------------------------- Alert management -----------------------------------

#enable/disable the entire alert module.
domibus.alert.active=false

#Concurency to process the alerts.
domibus.alert.queue.concurency=1

#Frequency of failed alerts retry.
domibus.alert.retry.cron=0/30 * * * * ?

#Domibus internal queue used for dispatching the events and alerts.
domibus.jms.queue.alert=domibus.internal.alert.queue

#Number of retry for failed alerts.
domibus.alert.retry.time=1

# ---------------------------------- Alert management:messaging module -----------------

#enable/disable the messaging alert module.
domibus.alert.msg.communication_failure.active=false

#Message status change that should be notified by the messaging alert module. Comma separated.
domibus.alert.msg.communication_failure.states=SEND_FAILURE,ACKNOWLEDGED

#Alert levels corresponding to message status defined in previous property(domibus.alert.msg.communication_failure.states) .
domibus.alert.msg.communication_failure.level=HIGH,LOW

#Messaging alert module mail subject.
domibus.alert.msg.communication_failure.mail.subject="Message status change"

# ---------------------------------- Alert management:Authentication module -----------------

#Enable/disable the login failure alert of the authentication module.
domibus.alert.user.login_failure.active=false

#Alert level for login failure.
domibus.alert.user.login_failure.level=LOW

domibus.alert.user.login_failure.mail.subject=Login failed

#Enable/disable the account disable alert of the authentication module.
domibus.alert.user.account_disabled.active=true

#Alert level for account disabled.
domibus.alert.user.account_disabled.level=HIGH

#When should the account disabled alert be triggered.
# 2 possible values:
# AT_LOGON: An alert will be triggered each a user tries to login to a disabled account.
# WHEN_BLOCKED: An alert will be triggered once when the account got disabled.
domibus.alert.user.account_disabled.moment=AT_LOGON

#Account disabled mail subject.
domibus.alert.user.account_disabled.subject=Account disabled

# ---------------------------------- Alert management:Certificate scanner -----------------

#Enable/disable the imminent certificate expiration alert of certificate scanner module.
domibus.alert.cert.imminent_expiration.active=false

#Number of days before revocation as from when the system should start sending alerts.
domibus.alert.cert.imminent_expiration.delay_days=61

#Frequency in days between alerts.
domibus.alert.cert.imminent_expiration.frequency_days=14

#Certificate imminent expiration alert level.
domibus.alert.cert.imminent_expiration.level=HIGH

#Certificate imminent expiration mail subject.
domibus.alert.cert.imminent_expiration.mail.subject=Certificate imminent expiration

#Enable/disable the certificate expired alert of certificate scanner module.
domibus.alert.cert.expired.active=false

#Frequency in days between alerts.
domibus.alert.cert.expired.frequency_days=7

#How long(in days) after the revocation should the system trigger alert for the expired certificate.
domibus.alert.cert.expired.duration_days=92

#Certificate expired alert level.
domibus.alert.cert.expired.level=HIGH

#Certificate expired mail subject.
domibus.alert.cert.expired.mail.subject=Certificate expired

# ---------------------------------- Pulling-----------------------------------

#Cron expression used for configuring the message puller scheduling.
domibus.msh.pull.cron=0 0 0/1 * * ?

# Number of threads used to parallelize the pull requests.
domibus.pull.queue.concurency=1-1

# ---------------------------------- Various -----------------------------------
#Number of threads used to parallelize the dispatching of messages to the plugins.
domibus.internal.queue.concurency=3-10
