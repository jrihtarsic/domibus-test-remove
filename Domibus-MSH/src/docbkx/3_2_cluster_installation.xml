<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 e-CODEX Project
  ~
  ~ Licensed under the EUPL, Version 1.1 or â€“ as soon they
  ~ will be approved by the European Commission - subsequent
  ~ versions of the EUPL (the "Licence");
  ~ You may not use this work except in compliance with the
  ~ Licence.
  ~ You may obtain a copy of the Licence at:
  ~ http://ec.europa.eu/idabc/eupl5
  ~ Unless required by applicable law or agreed to in
  ~ writing, software distributed under the Licence is
  ~ distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied.
  ~ See the Licence for the specific language governing
  ~ permissions and limitations under the Licence.
  -->

<section xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="cluster_installation"
         version="5.0"
         xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xreflabel="cluster deployment">
    <title>Cluster deployment</title>



    <para>
        <task>
            <taskprerequisites>
                <title>Prerequisites</title>
                <orderedlist numeration="loweralpha">
                    <listitem>
                        <para>A running MySQL or Oracle database server. A clustered database is recommended in this case.</para>
                    </listitem>
                    <listitem>
                        <para>A Domibus artifact containing the
                            <link linkend="artifact_table">database scripts</link>
                        </para>
                    </listitem>
                    <listitem>
                        <para>A Domibus artifact containing the
                            <link linkend="artifact_table">
                                <computeroutput>.war</computeroutput>
                                and
                                <computeroutput>config</computeroutput>
                                files
                            </link>
                            or the
                            <link linkend="artifact_table">
                                <computeroutput>-tomcat-full</computeroutput>
                                artifact
                            </link>
                        </para>
                    </listitem>
                    <listitem>
                        <para>A JMS broker that is accesible by all nodes.</para>
                    </listitem>
                    <listitem>
                        <para>A network storage (shared filesystem) shared by all nodes in the cluster.</para>
                    </listitem>
                </orderedlist>
            </taskprerequisites>
            <procedure>
                <step>
                    <title>Configure the JMS broker</title>
                    <substeps>
                        <step>
                            <para>Configure the following queues on your JMS broker:</para>
                            <important>
                                <para>In case the JMS broker is clustered, please note that all destinations mentioned in the following tables have to be distributed between all JMS broker nodes.</para>
                                <para>In addition please make sure that the access to all destinations is restricted in
                                    some way (e.g. username/password).
                                </para>
                            </important>
                            <table xml:id="internal_queue_description" width="100%">
                                <title>Mandatory JMS queues</title>
                                <tgroup cols="4">
                                    <colspec colname="destination type" />
                                    <colspec colname="physical name" />
                                    <colspec colname="redelivery policy" />
                                    <colspec colname="description" />
                                    <thead>
                                        <row>
                                            <entry>destination type</entry>
                                            <entry>default physical name</entry>
                                            <entry>redelivery policy</entry>
                                            <entry>description</entry>
                                        </row>
                                    </thead>
                                    <tbody>
                                        <row>
                                            <entry>queue</entry>
                                            <entry>domibus.internal.
                                                dispatch.queue</entry>
                                            <entry>no redelivery because redelivery of MSH messages is handled via ebMS3/AS4</entry>
                                            <entry>This queue is used for scheduling messages for sending via the MSH</entry>
                                        </row>
                                        <row>
                                            <entry>queue</entry>
                                            <entry>domibus.internal.
                                                notification.unknown</entry>
                                            <entry>no specific rules. default for activemq: maximum of 6 re-deliveries
                                            </entry>
                                            <entry>Notifications about received messages (by the MSH) that do not match any backend rounting criteria will be sent to this queue.
                                            In production environment this queue should be monitored in order to handle those messages manually.</entry>
                                        </row>
                                        <row>
                                            <entry>queue</entry>
                                            <entry>domibus.notification.*</entry>
                                            <entry>infinite number of redeliveries with a delay of 10000ms</entry>
                                            <entry>Queues that match the above mentioned pattern are used for sending
                                                notifications (e.g. message was sent successfully, message received by
                                                MSH) to the configured plugins. You will need a separate queue
                                            for each of your plugins.</entry>
                                        </row>
                                        <row>
                                            <entry>topic</entry>
                                            <entry>domibus.internal.
                                                command</entry>
                                            <entry>/</entry>
                                            <entry>This topic is used for sending commands to all nodes in a cluster.
                                                For example, it is used after a PMode was uploaded in order to notify
                                                all nodes to update their PMode cache (in case caching is enabled).
                                            </entry>
                                        </row>
                                    </tbody>
                                </tgroup>
                            </table>
                        </step>
                        <step>
                            <para>Configure all plugin specific queues (in addition to the <code>domibus.notification.*</code> queue mentioned above). The following table describes the queues you will need for the default-jms-plugin:</para>
                            <table xml:id="defaultPlugin_queue_description" width="100%">
                                <title>Backend specific queues for the default-jms-plugin</title>
                                <tgroup cols="2">
                                    <colspec colname="physical name"/>
                                    <colspec colname="description"/>
                                    <thead>
                                        <row>
                                            <entry>physical name</entry>
                                            <entry>description</entry>
                                        </row>
                                    </thead>
                                    <tbody>
                                        <row>
                                            <entry>domibus.backend.jms.replyQueue</entry>
                                            <entry>This queue is used for sending replies back to the sender of a message. Replies contain: a correlationId, ebMS3 messageId (if possible), error messages (if available)</entry>
                                        </row>
                                        <row>
                                            <entry>domibus.backend.jms.outQueue</entry>
                                            <entry>Messages received by the MSH (that match the routing criteria for the JMS plugin) will be sent to this queue.</entry>
                                        </row>
                                        <row>
                                            <entry>domibus.backend.jms.inQueue</entry>
                                            <entry>This queue is the entry point for messages to be sent by the sending MSH.</entry>
                                        </row>
                                        <row>
                                            <entry>domibus.backend.jms.errorNotifyConsumer</entry>
                                            <entry>This queue is used to inform the receiver of a message that an error occurred during the processing of a received message.</entry>
                                        </row>
                                        <row>
                                            <entry>domibus.backend.jms.errorNotifyProducer</entry>
                                            <entry>This queue is used to inform the sender of a message that an error occurred during the processing of a message to be sent.</entry>
                                        </row>
                                    </tbody>
                                </tgroup>
                            </table>
                        </step>
                    </substeps>
                </step>
                <step>
                    <title>Prepare the Database</title>
                    <substeps>
                        <step>
                            <para>Create a domibus user and schema. Required userprivileges are<glossterm>
                                SELECT</glossterm>,
                                <glossterm>CREATE_TEMPORARY_TABLE</glossterm>,<glossterm>
                                    CREATE_ROUTINE</glossterm>,
                                <glossterm>INSERT</glossterm>,
                                <glossterm>DELETE</glossterm>
                                and
                                <glossterm>UPDATE</glossterm>
                            </para>
                        </step>
                        <step>
                            <para>Apply the
                                <computeroutput>$RDBMS-initial.ddl</computeroutput>
                                script from the
                                <computeroutput>sql-scripts/</computeroutput>
                                folder to your database.
                            </para>
                        </step>
                        <step>
                            <para>Apply the
                                <computeroutput>$RDBMS-quartz.ddl</computeroutput>
                                script from the
                                <computeroutput>sql-scripts/</computeroutput>
                                folder to your database.
                            </para>
                        </step>
                    </substeps>
                    <para>For additional information on how to perform these tasks please consult your RDBMS
                        documentation
                        or database administrator.
                    </para>
                </step>
                <step>
                    <title>Deploy the Domibus artifact on all your nodes</title>
                    <stepalternatives>
                        <step>
                            <title>Recommended</title>
                            <para>copy the whole
                                <computeroutput>/domibus</computeroutput>
                                folder from the
                                <computeroutput>tomcat-full</computeroutput>
                                artifact to your server.
                                Copy the <computeroutput>/domibus/conf/domibus</computeroutput>  folder to a location that is accesible from all nodes (shared filesystem) and
                                delete the <computeroutput>/domibus/conf/domibus</computeroutput> folders (on all nodes).
                            </para>
                        </step>
                        <step>
                            <title>Alternative</title>
                            <substeps>
                                <step>
                                    <para>deploy the
                                        <computeroutput>domibus.war</computeroutput>
                                        file to your servlet container. Consult your container vendors documentation on
                                        how to
                                        perform this.
                                    </para>
                                </step>
                                <step>
                                    <para>copy the
                                        <computeroutput>conf/domibus</computeroutput>
                                        folder from the Domibus artifact to an appropiate location on your shared filesystem
                                    </para>
                                </step>
                            </substeps>
                        </step>
                    </stepalternatives>
                </step>
                <step>
                    <title>Set up the environment variables</title>
                    <para>In clustered environment Domibus expects two JVM-parameters on startup:

                        The first parameter is <computeroutput>$domibus.config.location2</computeroutput>, pointing towards the
                        the shared folder copied in the previous step.

                        The second parameter <computeroutput>$domibus.node.id</computeroutput> defines the name of the node and is unique per node.

                        If using the Tomcat distribution of Domibus documentation on how to do set these parameters can be found
                        <link xlink:href="https://tomcat.apache.org/tomcat-8.0-doc/RUNNING.txt">
                            here
                        </link>
                        (3.3).
                    </para>

                </step>
                <step>
                    <substeps>
                        <step>
                            <title>
                                Configure the container
                            </title>
                            <para>Configure your environment according to <xref linkend="gw_config"/>
                            </para>
                        </step>
                        <step>
                            <title>Deploy the database driver</title>
                            <para>
                                Make sure the container has the required jdbc
                                compliant database driver available.
                                If you are using the Tomcat distribution of
                                Domibus this is done by copying the
                                <computeroutput>.jar</computeroutput>
                                file containing the driver to the
                                <computeroutput>lib</computeroutput>
                                directory of the container. If you are unsure
                                what driver to use, please consult your
                                database administrator.
                            </para>
                        </step>
                    </substeps>
                </step>
                <step>
                    <title>Configure the proxy server</title>
                    <para>Configure your proxy server according to
                        <xref linkend="proxyconfig"/>
                    </para>
                </step>
                <step>
                    <title>Start the container</title>
                    <para>To start the Tomcat container execute the
                        <computeroutput>$domibus.install/bin/startup.sh</computeroutput>
                        (on Linux) or
                        <computeroutput>$domibus.install/bin/startup.bat</computeroutput>
                        (on Windows) script.
                    </para>
                </step>
                <step>
                    <title>Check the administration dashboard</title>
                    <para>
                        If the deployment has been successful you should be able to reach the administrative dashboard
                        described in<xref linkend="admin_gui"/>.
                    </para>
                </step>

            </procedure>
            <taskrelated>
                <para>You now should have a working Domibus deployment. Before you can start exchanging messages you
                    have to provide buisness case specific processing modes (PModes) to the gateway. As those are
                    deployment dependant those PModes are not a part of the Domibus distribution. See
                    <xref linkend="config_pmodes"/>
                    on how to generate your own PMode set.
                </para>
                <important>
                    <para>In a clustered deployment you will only need to upload the PModes once on one of the nodes (via the administrative dashboard)
                    and the other nodes will be informed via the command topic.</para>
                </important>
            </taskrelated>
        </task>
        <figure>
            <title>Deployment of domibus cluster</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="graphics/domibus_clustered_deployment.svg" scalefit="1" width="100%"
                               format="SVG"></imagedata>
                </imageobject>
            </mediaobject>
        </figure>
    </para>
</section>