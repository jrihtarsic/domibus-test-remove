{
  "swagger" : "2.0",
  "info" : {
    "description" : "Domibus REST API documentation",
    "version" : "v1",
    "title" : "Domibus REST API documentation",
    "license" : {
      "name" : "EUPL 1.2",
      "url" : "https://joinup.ec.europa.eu/page/eupl-text-11-12"
    }
  },
  "basePath" : "/domibus",
  "tags" : [ {
    "name" : "acknowledgement"
  }, {
    "name" : "monitoring"
  }, {
    "name" : "party"
  }, {
    "name" : "pmode"
  }, {
    "name" : "status"
  }, {
    "name" : "usermessage"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/ext/messages/acknowledgments/delivered" : {
      "post" : {
        "tags" : [ "acknowledgement" ],
        "summary" : "Create a message delivered acknowledgement",
        "description" : "Acknowledges that a message has been delivered to the backend",
        "operationId" : "acknowledgeMessageDelivered",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageAcknowledgementRequestDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MessageAcknowledgementDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/messages/acknowledgments/processed" : {
      "post" : {
        "tags" : [ "acknowledgement" ],
        "summary" : "Create a message processed acknowledgement",
        "description" : "Acknowledges that a message has been processed by the backend",
        "operationId" : "acknowledgeMessageProcessed",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageAcknowledgementRequestDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MessageAcknowledgementDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/messages/acknowledgments/{messageId}" : {
      "get" : {
        "tags" : [ "acknowledgement" ],
        "summary" : "Get acknowledgements",
        "description" : "Gets all acknowledgments associated to a message id",
        "operationId" : "getAcknowledgedMessages",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageAcknowledgementDTO"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/messages/usermessages/{messageId}" : {
      "get" : {
        "tags" : [ "usermessage" ],
        "summary" : "Get user message",
        "description" : "Retrieve the user message with the specified message id",
        "operationId" : "getUserMessage",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserMessageDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/application/status" : {
      "get" : {
        "tags" : [ "status" ],
        "summary" : "Check Domibus is Alive ",
        "description" : "Shows the accessibility and status of Domibus Database, JMS broker and Quartz Trigger",
        "operationId" : "getMonitoringDetails",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MonitoringInfoDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/enqueued/{messageId}/send" : {
      "put" : {
        "tags" : [ "monitoring" ],
        "summary" : "Send enqueued message",
        "description" : "Send a message which has a SEND_ENQUEUED status",
        "operationId" : "sendEnqueuedMessage",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/failed" : {
      "get" : {
        "tags" : [ "monitoring" ],
        "summary" : "Get failed messages",
        "description" : "Retrieve all the messages with the specified finalRecipient(if provided) that are currently in a SEND_FAILURE status",
        "operationId" : "getFailedMessages",
        "parameters" : [ {
          "name" : "finalRecipient",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/failed/restore" : {
      "post" : {
        "tags" : [ "monitoring" ],
        "summary" : "Resend all messages with SEND_FAILURE status within a certain time interval",
        "description" : "Resend all messages with SEND_FAILURE status within a certain time interval",
        "operationId" : "restoreFailedMessages",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FailedMessagesCriteriaRO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/failed/{messageId}" : {
      "delete" : {
        "tags" : [ "monitoring" ],
        "summary" : "Delete failed message payload",
        "description" : "Delete the payload of a message which has a SEND_FAILURE status",
        "operationId" : "deleteFailedMessage",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/failed/{messageId}/elapsedtime" : {
      "get" : {
        "tags" : [ "monitoring" ],
        "summary" : "Get failed message elapsed time",
        "description" : "Retrieve the time that a message has been in a SEND_FAILURE status",
        "operationId" : "getFailedMessageInterval",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/failed/{messageId}/restore" : {
      "put" : {
        "tags" : [ "monitoring" ],
        "summary" : "Resend failed message",
        "description" : "Resend a message which has a SEND_FAILURE status",
        "operationId" : "restoreFailedMessage",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/monitoring/messages/{messageId}/attempts" : {
      "get" : {
        "tags" : [ "monitoring" ],
        "summary" : "Get message attempts",
        "description" : "Retrieve the history of the delivery attempts for a certain message",
        "operationId" : "getMessageAttempts",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageAttemptDTO"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/party" : {
      "get" : {
        "tags" : [ "party" ],
        "summary" : "Get Parties",
        "description" : "Get Parties using certain criteria like name, endpoint, partyId, process name. Use pageStart and pageSize for pagination purposes",
        "operationId" : "listParties",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PartyDTO"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "party" ],
        "summary" : "Creates a Party",
        "description" : "Creates a Party using name, party id, endpoint and identifiers which are mandatory fields",
        "operationId" : "createParty",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PartyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "201" : {
            "description" : ""
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "party" ],
        "summary" : "Update a Party",
        "description" : "Update a Party based on party name",
        "operationId" : "updateParty",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PartyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "party" ],
        "summary" : "Delete a Party",
        "description" : "Delete a Party based on party name",
        "operationId" : "deleteParty",
        "parameters" : [ {
          "name" : "partyName",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/party/processes" : {
      "get" : {
        "tags" : [ "party" ],
        "summary" : "List all Processes",
        "description" : "List all Processes",
        "operationId" : "listProcesses",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessDTO"
              }
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/party/{partyName}/certificate" : {
      "get" : {
        "tags" : [ "party" ],
        "summary" : "Get Certificate for a Party",
        "description" : "Get Certificate for a Party based on party name",
        "operationId" : "getCertificateForParty",
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/pmode" : {
      "post" : {
        "tags" : [ "pmode" ],
        "summary" : "Upload a PMode file",
        "description" : "Upload the PMode file",
        "operationId" : "uploadPMode",
        "consumes" : [ "multipart/form-data", "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "description",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ValidationResponseDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/pmode/current" : {
      "get" : {
        "tags" : [ "pmode" ],
        "summary" : "Get current PMode info",
        "description" : "Retrieve the current PMode file information",
        "operationId" : "getCurrentPMode",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PModeArchiveInfoDTO"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/ext/pmode/{id}" : {
      "get" : {
        "tags" : [ "pmode" ],
        "summary" : "Get PMode file",
        "description" : "Retrieve the PMode file of specified id",
        "operationId" : "downloadPMode",
        "produces" : [ "application/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ByteArrayResource"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "AgreementRefDTO" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "pmode" : {
          "type" : "string"
        }
      }
    },
    "ByteArrayResource" : {
      "type" : "object",
      "properties" : {
        "byteArray" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "description" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "url": {
          "type": "string",
          "format": "url"
        },
        "file": {
          "type": "file"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "type": "string",
          "format": "uri"
        },
        "filename": {
          "type": "string"
        }
      }
    },
    "CollaborationInfoDTO" : {
      "type" : "object",
      "properties" : {
        "conversationId" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "agreementRef" : {
          "$ref" : "#/definitions/AgreementRefDTO"
        },
        "service" : {
          "$ref" : "#/definitions/ServiceDTO"
        }
      }
    },
    "DescriptionDTO" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "lang" : {
          "type" : "string"
        }
      }
    },
    "FailedMessagesCriteriaRO" : {
      "type" : "object",
      "properties" : {
        "fromDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "toDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FromDTO" : {
      "type" : "object",
      "properties" : {
        "partyId" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PartyIdDTO"
          }
        },
        "role" : {
          "type" : "string"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "MessageAcknowledgementDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "messageId" : {
          "type" : "string"
        },
        "from" : {
          "type" : "string"
        },
        "to" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "acknowledgeDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createUser" : {
          "type" : "string"
        }
      }
    },
    "MessageAcknowledgementRequestDTO" : {
      "type" : "object",
      "properties" : {
        "messageId" : {
          "type" : "string"
        },
        "acknowledgeDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "MessageAttemptDTO" : {
      "type" : "object",
      "properties" : {
        "messageId" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "ABORT", "ERROR" ]
        },
        "error" : {
          "type" : "string"
        }
      }
    },
    "MessageInfoDTO" : {
      "type" : "object",
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "messageId" : {
          "type" : "string"
        },
        "refToMessageId" : {
          "type" : "string"
        }
      }
    },
    "MessagePropertiesDTO" : {
      "type" : "object",
      "properties" : {
        "property" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PropertyDTO"
          }
        }
      }
    },
    "MonitoringInfoDTO" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceInfoDTO"
          }
        }
      }
    },
    "PModeArchiveInfoDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "configurationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "username" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PartInfoDTO" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/SchemaDTO"
        },
        "description" : {
          "$ref" : "#/definitions/DescriptionDTO"
        },
        "partProperties" : {
          "$ref" : "#/definitions/PartPropertiesDTO"
        },
        "href" : {
          "type" : "string"
        },
        "inBody" : {
          "type" : "boolean"
        },
        "mime" : {
          "type" : "string"
        }
      }
    },
    "PartPropertiesDTO" : {
      "type" : "object",
      "properties" : {
        "property" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PropertyDTO"
          }
        }
      }
    },
    "PartyDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PartyIdentifierDTO"
          }
        },
        "processesWithPartyAsInitiator" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessDTO"
          }
        },
        "processesWithPartyAsResponder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessDTO"
          }
        },
        "certificateContent" : {
          "type" : "string"
        }
      }
    },
    "PartyIdDTO" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "PartyIdentifierDTO" : {
      "type" : "object",
      "properties" : {
        "partyId" : {
          "type" : "string"
        },
        "partyIdType" : {
          "$ref" : "#/definitions/PartyIdentifierTypeDTO"
        }
      }
    },
    "PartyIdentifierTypeDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PartyInfoDTO" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "$ref" : "#/definitions/FromDTO"
        },
        "to" : {
          "$ref" : "#/definitions/ToDTO"
        }
      }
    },
    "PayloadInfoDTO" : {
      "type" : "object",
      "properties" : {
        "partInfo" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PartInfoDTO"
          }
        }
      }
    },
    "ProcessDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "PropertyDTO" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SchemaDTO" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        }
      }
    },
    "ServiceDTO" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ServiceInfoDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "NORMAL", "ERROR", "BLOCKED" ]
        }
      }
    },
    "ToDTO" : {
      "type" : "object",
      "properties" : {
        "partyId" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/PartyIdDTO"
          }
        },
        "role" : {
          "type" : "string"
        }
      }
    },
    "UserMessageDTO" : {
      "type" : "object",
      "properties" : {
        "messageInfo" : {
          "$ref" : "#/definitions/MessageInfoDTO"
        },
        "partyInfo" : {
          "$ref" : "#/definitions/PartyInfoDTO"
        },
        "collaborationInfo" : {
          "$ref" : "#/definitions/CollaborationInfoDTO"
        },
        "messageProperties" : {
          "$ref" : "#/definitions/MessagePropertiesDTO"
        },
        "payloadInfo" : {
          "$ref" : "#/definitions/PayloadInfoDTO"
        },
        "mpc" : {
          "type" : "string"
        }
      }
    },
    "ValidationIssueDTO" : {
      "type" : "object",
      "properties" : {
        "level" : {
          "type" : "string",
          "enum" : [ "NOTE", "WARNING", "ERROR" ]
        },
        "code" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "ValidationResponseDTO" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "issues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ValidationIssueDTO"
          }
        }
      }
    }
  }
}