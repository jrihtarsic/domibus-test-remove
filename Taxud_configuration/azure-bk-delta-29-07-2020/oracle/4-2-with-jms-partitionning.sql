SET DEFINE OFF;

CREATE TABLE MS_MS1_VM_WLSTORE (
  id     int  not null primary key,
  type   int  not null,
  handle int  not null,
  record blob not null
)lob (record) store as securefile(
  ENABLE STORAGE IN ROW NOCACHE)
  PARTITION BY HASH(id) PARTITIONS 8;

CREATE TABLE MS_MS2_VM_WLSTORE (
  id     int  not null primary key,
  type   int  not null,
  handle int  not null,
  record blob not null
)lob (record) store as securefile(
  ENABLE STORAGE IN ROW NOCACHE)
  PARTITION BY HASH(id) PARTITIONS 8;
  
  CREATE TABLE MS_MS3_VM_WLSTORE (
  id     int  not null primary key,
  type   int  not null,
  handle int  not null,
  record blob not null
)lob (record) store as securefile(
  ENABLE STORAGE IN ROW NOCACHE)
  PARTITION BY HASH(id) PARTITIONS 8;
  
  CREATE TABLE MS_MS4_VM_WLSTORE (
  id     int  not null primary key,
  type   int  not null,
  handle int  not null,
  record blob not null
)lob (record) store as securefile(
  ENABLE STORAGE IN ROW NOCACHE)
  PARTITION BY HASH(id) PARTITIONS 8;
  
  CREATE TABLE MS_MS5_VM_WLSTORE (
  id     int  not null primary key,
  type   int  not null,
  handle int  not null,
  record blob not null
)lob (record) store as securefile(
  ENABLE STORAGE IN ROW NOCACHE)
  PARTITION BY HASH(id) PARTITIONS 8;
  
  
  -- *********************************************************************
-- Update Database Script
-- *********************************************************************
-- Change Log: src/main/resources/db/changelog.xml
-- Ran at: 6/23/20 4:47 PM
-- Against: null@offline:oracle?version=11.2.0&changeLogFile=C:\Users\dussa\IdeaProjects\domibus\Domibus-MSH-db\target/liquibase/changelog-4.2-SNAPSHOT.oracle
-- Liquibase version: 3.5.3
-- *********************************************************************

-- Changeset src/main/resources/db/changelog.xml::changelog-3.2-delta-1::martifp
-- create sequence
CREATE SEQUENCE HIBERNATE_SEQUENCE START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- Changeset src/main/resources/db/changelog-4.0-quartz.xml::EDELIVERY-3425::migueti
CREATE TABLE QRTZ_BLOB_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, BLOB_DATA BLOB);

CREATE TABLE QRTZ_CALENDARS (SCHED_NAME VARCHAR2(120) NOT NULL, CALENDAR_NAME VARCHAR2(200) NOT NULL, CALENDAR_BLOB BLOB NOT NULL);

CREATE TABLE QRTZ_CRON_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, CRON_EXPRESSION VARCHAR2(120) NOT NULL, TIME_ZONE_ID VARCHAR2(80));

CREATE TABLE QRTZ_FIRED_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, ENTRY_ID VARCHAR2(95) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, INSTANCE_NAME VARCHAR2(200) NOT NULL, FIRED_TIME NUMBER(38, 0) NOT NULL, SCHED_TIME NUMBER(38, 0) NOT NULL, PRIORITY INTEGER NOT NULL, STATE VARCHAR2(16) NOT NULL, JOB_NAME VARCHAR2(200), JOB_GROUP VARCHAR2(200), IS_NONCONCURRENT NUMBER(1), REQUESTS_RECOVERY NUMBER(1));

CREATE TABLE QRTZ_JOB_DETAILS (SCHED_NAME VARCHAR2(120) NOT NULL, JOB_NAME VARCHAR2(200) NOT NULL, JOB_GROUP VARCHAR2(200) NOT NULL, DESCRIPTION VARCHAR2(250), JOB_CLASS_NAME VARCHAR2(250) NOT NULL, IS_DURABLE NUMBER(1) NOT NULL, IS_NONCONCURRENT NUMBER(1) NOT NULL, IS_UPDATE_DATA NUMBER(1) NOT NULL, REQUESTS_RECOVERY NUMBER(1) NOT NULL, JOB_DATA BLOB);

CREATE TABLE QRTZ_LOCKS (SCHED_NAME VARCHAR2(120) NOT NULL, LOCK_NAME VARCHAR2(40) NOT NULL);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL);

CREATE TABLE QRTZ_SCHEDULER_STATE (SCHED_NAME VARCHAR2(120) NOT NULL, INSTANCE_NAME VARCHAR2(200) NOT NULL, LAST_CHECKIN_TIME NUMBER(38, 0) NOT NULL, CHECKIN_INTERVAL NUMBER(38, 0) NOT NULL);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, REPEAT_COUNT NUMBER(38, 0) NOT NULL, REPEAT_INTERVAL NUMBER(38, 0) NOT NULL, TIMES_TRIGGERED NUMBER(38, 0) NOT NULL);

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, STR_PROP_1 VARCHAR2(512), STR_PROP_2 VARCHAR2(512), STR_PROP_3 VARCHAR2(512), INT_PROP_1 INTEGER, INT_PROP_2 INTEGER, LONG_PROP_1 NUMBER(38, 0), LONG_PROP_2 NUMBER(38, 0), DEC_PROP_1 DECIMAL(13, 4), DEC_PROP_2 DECIMAL(13, 4), BOOL_PROP_1 NUMBER(1), BOOL_PROP_2 NUMBER(1));

CREATE TABLE QRTZ_TRIGGERS (SCHED_NAME VARCHAR2(120) NOT NULL, TRIGGER_NAME VARCHAR2(200) NOT NULL, TRIGGER_GROUP VARCHAR2(200) NOT NULL, JOB_NAME VARCHAR2(200) NOT NULL, JOB_GROUP VARCHAR2(200) NOT NULL, DESCRIPTION VARCHAR2(250), NEXT_FIRE_TIME NUMBER(38, 0), PREV_FIRE_TIME NUMBER(38, 0), PRIORITY INTEGER, TRIGGER_STATE VARCHAR2(16) NOT NULL, TRIGGER_TYPE VARCHAR2(8) NOT NULL, START_TIME NUMBER(38, 0) NOT NULL, END_TIME NUMBER(38, 0), CALENDAR_NAME VARCHAR2(200), MISFIRE_INSTR NUMBER(5), JOB_DATA BLOB);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT PRIMARY_01 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CALENDARS ADD CONSTRAINT PRIMARY_02 PRIMARY KEY (SCHED_NAME, CALENDAR_NAME);

ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT PRIMARY_03 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CONSTRAINT PRIMARY_04 PRIMARY KEY (SCHED_NAME, ENTRY_ID);

ALTER TABLE QRTZ_JOB_DETAILS ADD CONSTRAINT PRIMARY_05 PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP);

ALTER TABLE QRTZ_LOCKS ADD CONSTRAINT PRIMARY_06 PRIMARY KEY (SCHED_NAME, LOCK_NAME);

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD CONSTRAINT PRIMARY_07 PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SCHEDULER_STATE ADD CONSTRAINT PRIMARY_08 PRIMARY KEY (SCHED_NAME, INSTANCE_NAME, LAST_CHECKIN_TIME, CHECKIN_INTERVAL);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT PRIMARY_09 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CONSTRAINT PRIMARY_10 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT PRIMARY_11 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME);

CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME, CALENDAR_NAME);

CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE);

ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT FK_BLOB_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT FK_CRON_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT FK_SIMPLE_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD CONSTRAINT FK_SIMPROP_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT FK_TRIGGERS FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP);

-- Changeset src/main/resources/db/changelog.xml::1564477107969-13::Catalin Enache
-- create Domibus tables
CREATE TABLE TB_ACTION (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ACTION PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ACTION.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ACTION.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ACTION.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ACTION.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ACTION_AUDIT (ID_PK NUMBER(38, 0) NOT NULL, AUDIT_TYPE VARCHAR2(31) NOT NULL, ENTITY_ID VARCHAR2(255), MODIFICATION_TYPE VARCHAR2(255), REVISION_DATE TIMESTAMP, USER_NAME VARCHAR2(255), FROM_QUEUE VARCHAR2(255), TO_QUEUE VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ACTION_AUDIT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ACTION_AUDIT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ACTION_AUDIT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ACTION_AUDIT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ACTION_AUDIT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_AGREEMENT (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), TYPE VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_AGREEMENT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_AGREEMENT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_AGREEMENT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_AGREEMENT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_AGREEMENT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ALERT (ID_PK NUMBER(38, 0) NOT NULL, ALERT_TYPE VARCHAR2(50) NOT NULL, ATTEMPTS_NUMBER INTEGER, MAX_ATTEMPTS_NUMBER INTEGER NOT NULL, PROCESSED NUMBER(1), PROCESSED_TIME TIMESTAMP, REPORTING_TIME TIMESTAMP, REPORTING_TIME_FAILURE TIMESTAMP, NEXT_ATTEMPT TIMESTAMP, ALERT_STATUS VARCHAR2(50) NOT NULL, ALERT_LEVEL VARCHAR2(20) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ALERT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ALERT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ALERT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ALERT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ALERT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_AUTHENTICATION_ENTRY (ID_PK NUMBER(38, 0) NOT NULL, CERTIFICATE_ID VARCHAR2(255), USERNAME VARCHAR2(255), PASSWD VARCHAR2(255), AUTH_ROLES VARCHAR2(255) NOT NULL, ORIGINAL_USER VARCHAR2(255), BACKEND VARCHAR2(255), PASSWORD_CHANGE_DATE TIMESTAMP, DEFAULT_PASSWORD NUMBER(1) DEFAULT 0, ATTEMPT_COUNT INTEGER DEFAULT 0 NOT NULL, SUSPENSION_DATE TIMESTAMP, USER_ENABLED NUMBER(1) DEFAULT 1 NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_AUTHENTICATION_ENTRY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_AUTHENTICATION_ENTRY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_AUTHENTICATION_ENTRY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_AUTHENTICATION_ENTRY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_AUTHENTICATION_ENTRY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_AUTHENTICATION_ENTRY_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), CERTIFICATE_ID VARCHAR2(255), CERTIFICATEID_MOD NUMBER(1), USERNAME VARCHAR2(255), USERNAME_MOD NUMBER(1), PASSWD VARCHAR2(255), PASSWORD_MOD NUMBER(1), AUTH_ROLES VARCHAR2(255), AUTHROLES_MOD NUMBER(1), ORIGINAL_USER VARCHAR2(255), ORIGINALUSER_MOD NUMBER(1), BACKEND VARCHAR2(255), BACKEND_MOD NUMBER(1), USER_ENABLED NUMBER(1), ACTIVE_MOD NUMBER(1), PASSWORD_CHANGE_DATE TIMESTAMP, PASSWORDCHANGEDATE_MOD NUMBER(1), DEFAULT_PASSWORD NUMBER(1), DEFAULTPASSWORD_MOD NUMBER(1), CONSTRAINT PK_AUTHENTICATION_ENTRY_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_BACKEND_FILTER (ID_PK NUMBER(38, 0) NOT NULL, BACKEND_NAME VARCHAR2(255), PRIORITY INTEGER, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_BACKEND_FILTER PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_BACKEND_FILTER.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_BACKEND_FILTER.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_BACKEND_FILTER.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_BACKEND_FILTER.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_BACKEND_FILTER_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), BACKEND_NAME VARCHAR2(255), BACKENDNAME_MOD NUMBER(1), PRIORITY INTEGER, INDEX_MOD NUMBER(1), ROUTINGCRITERIAS_MOD NUMBER(1), CONSTRAINT PK_BACKEND_FILTER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_BACK_RCRITERIA_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), FK_BACKEND_FILTER NUMBER(38, 0), PRIORITY INTEGER, CONSTRAINT PK_BACK_RCRITERIA_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_BUSINESS_PROCESS (ID_PK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_BUSINESS_PROCESS PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_BUSINESS_PROCESS.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_BUSINESS_PROCESS.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_BUSINESS_PROCESS.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_BUSINESS_PROCESS.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_CERTIFICATE (ID_PK NUMBER(38, 0) NOT NULL, CERTIFICATE_ALIAS VARCHAR2(255) NOT NULL, NOT_VALID_BEFORE_DATE TIMESTAMP, NOT_VALID_AFTER_DATE TIMESTAMP, REVOKE_NOTIFICATION_DATE TIMESTAMP, ALERT_IMM_NOTIFICATION_DATE TIMESTAMP, ALERT_EXP_NOTIFICATION_DATE TIMESTAMP, CERTIFICATE_STATUS VARCHAR2(255) NOT NULL, CERTIFICATE_TYPE VARCHAR2(255) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_CERTIFICATE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_CERTIFICATE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_CERTIFICATE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_CERTIFICATE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_CERTIFICATE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_COMMAND (ID_PK NUMBER(38, 0) NOT NULL, SERVER_NAME VARCHAR2(255) NOT NULL, COMMAND_NAME VARCHAR2(255) NOT NULL, DOMAIN VARCHAR2(255) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_COMMAND PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_COMMAND.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_COMMAND.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_COMMAND.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_COMMAND.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_COMMAND_PROPERTY (PROPERTY_NAME VARCHAR2(50) NOT NULL, PROPERTY_VALUE VARCHAR2(255), FK_COMMAND NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_COMMAND_PROPERTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_COMMAND_PROPERTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_COMMAND_PROPERTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_COMMAND_PROPERTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_CONFIGURATION (ID_PK NUMBER(38, 0) NOT NULL, FK_BUSINESSPROCESSES NUMBER(38, 0), FK_PARTY NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_CONFIGURATION PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_CONFIGURATION.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_CONFIGURATION.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_CONFIGURATION.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_CONFIGURATION.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_CONFIGURATION_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), EXPRESSION VARCHAR2(255), EXPRESSION_MOD NUMBER(1), NAME VARCHAR2(255), NAME_MOD NUMBER(1), CONSTRAINT PK_CONFIGURATION_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_CONFIGURATION_RAW (ID_PK NUMBER(38, 0) NOT NULL, CONFIGURATION_DATE TIMESTAMP, XML BLOB, DESCRIPTION VARCHAR2(255) DEFAULT '', CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_CONFIGURATION_RAW PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_CONFIGURATION_RAW.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_CONFIGURATION_RAW.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_CONFIGURATION_RAW.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_CONFIGURATION_RAW.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_CONFIGURATION_RAW_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), CONFIGURATION_DATE TIMESTAMP, CONFIGURATIONDATE_MOD NUMBER(1), DESCRIPTION VARCHAR2(255), DESCRIPTION_MOD VARCHAR2(255), XML BLOB, XML_MOD NUMBER(1), CONSTRAINT PK_CONFIGURATION_RAW_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_ENCRYPTION_KEY (ID_PK NUMBER(38, 0) NOT NULL, KEY_USAGE VARCHAR2(255), SECRET_KEY BLOB NOT NULL, INIT_VECTOR BLOB NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ENCRYPTION_KEY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ENCRYPTION_KEY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ENCRYPTION_KEY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ENCRYPTION_KEY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ENCRYPTION_KEY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ERROR (ID_PK NUMBER(38, 0) NOT NULL, CATEGORY VARCHAR2(255), DESCRIPTION_LANG VARCHAR2(255), DESCRIPTION_VALUE VARCHAR2(255), ERROR_CODE VARCHAR2(255), ERROR_DETAIL CLOB, ORIGIN VARCHAR2(255), REF_TO_MESSAGE_ID VARCHAR2(255), SEVERITY VARCHAR2(255), SHORT_DESCRIPTION VARCHAR2(255), SIGNALMESSAGE_ID NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ERROR PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ERROR.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ERROR.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ERROR.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ERROR.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ERROR_HANDLING (ID_PK NUMBER(38, 0) NOT NULL, BUSINESS_ERROR_NOTIFY_CONSUMER NUMBER(1), BUSINESS_ERROR_NOTIFY_PRODUCER NUMBER(1), DELIVERY_FAIL_NOTIFY_PRODUCER NUMBER(1), ERROR_AS_RESPONSE NUMBER(1), NAME VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ERROR_HANDLING PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ERROR_HANDLING.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ERROR_HANDLING.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ERROR_HANDLING.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ERROR_HANDLING.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ERROR_LOG (ID_PK NUMBER(38, 0) NOT NULL, ERROR_CODE VARCHAR2(255), ERROR_DETAIL VARCHAR2(255), ERROR_SIGNAL_MESSAGE_ID VARCHAR2(255), MESSAGE_IN_ERROR_ID VARCHAR2(255), MSH_ROLE VARCHAR2(255), NOTIFIED TIMESTAMP, TIME_STAMP TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ERROR_LOG PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ERROR_LOG.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ERROR_LOG.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ERROR_LOG.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ERROR_LOG.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_EVENT (ID_PK NUMBER(38, 0) NOT NULL, EVENT_TYPE VARCHAR2(50) NOT NULL, REPORTING_TIME TIMESTAMP, LAST_ALERT_DATE TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_EVENT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_EVENT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_EVENT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_EVENT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_EVENT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_EVENT_ALERT (FK_EVENT NUMBER(38, 0) NOT NULL, FK_ALERT NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_EVENT_ALERT PRIMARY KEY (FK_EVENT, FK_ALERT));

COMMENT ON COLUMN TB_EVENT_ALERT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_EVENT_ALERT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_EVENT_ALERT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_EVENT_ALERT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_EVENT_PROPERTY (ID_PK NUMBER(38, 0) NOT NULL, PROPERTY_TYPE VARCHAR2(50) NOT NULL, FK_EVENT NUMBER(38, 0) NOT NULL, DTYPE VARCHAR2(31), STRING_VALUE VARCHAR2(255), DATE_VALUE TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_EVENT_PROPERTY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_EVENT_PROPERTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_EVENT_PROPERTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_EVENT_PROPERTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_EVENT_PROPERTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_JOIN_PAYLOAD_PROFILE (FK_PAYLOAD NUMBER(38, 0) NOT NULL, FK_PROFILE NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_JOIN_PAYLOAD_PROFILE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_JOIN_PAYLOAD_PROFILE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_JOIN_PAYLOAD_PROFILE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_JOIN_PAYLOAD_PROFILE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_JOIN_PROCESS_INIT_PARTY (PROCESS_FK NUMBER(38, 0) NOT NULL, PARTY_FK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_JOIN_PROCESS_INIT_PARTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_JOIN_PROCESS_INIT_PARTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_JOIN_PROCESS_INIT_PARTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_JOIN_PROCESS_INIT_PARTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_JOIN_PROCESS_LEG (PROCESS_FK NUMBER(38, 0) NOT NULL, LEG_FK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_JOIN_PROCESS_LEG.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_JOIN_PROCESS_LEG.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_JOIN_PROCESS_LEG.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_JOIN_PROCESS_LEG.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_JOIN_PROCESS_RESP_PARTY (PROCESS_FK NUMBER(38, 0) NOT NULL, PARTY_FK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_JOIN_PROCESS_RESP_PARTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_JOIN_PROCESS_RESP_PARTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_JOIN_PROCESS_RESP_PARTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_JOIN_PROCESS_RESP_PARTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_JOIN_PROPERTY_SET (PROPERTY_FK NUMBER(38, 0) NOT NULL, SET_FK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_JOIN_PROPERTY_SET.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_JOIN_PROPERTY_SET.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_JOIN_PROPERTY_SET.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_JOIN_PROPERTY_SET.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_LEG (ID_PK NUMBER(38, 0) NOT NULL, COMPRESS_PAYLOADS NUMBER(1), NAME VARCHAR2(255), FK_ACTION NUMBER(38, 0), FK_MPC NUMBER(38, 0), FK_ERROR_HANDLING NUMBER(38, 0), FK_PAYLOAD_PROFILE NUMBER(38, 0), FK_PROPERTY_SET NUMBER(38, 0), FK_RECEPTION_AWARENESS NUMBER(38, 0), FK_RELIABILITY NUMBER(38, 0), FK_SECURITY NUMBER(38, 0), FK_SERVICE NUMBER(38, 0), FK_BUSINESSPROCESS NUMBER(38, 0), FK_SPLITTING NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_LEG PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_LEG.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_LEG.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_LEG.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_LEG.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_LEG_TB_MPC (LEGCONFIGURATION_ID_PK NUMBER(38, 0) NOT NULL, PARTYMPCMAP_ID_PK NUMBER(38, 0) NOT NULL, PARTYMPCMAP_KEY NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PRIMARY_12 PRIMARY KEY (LEGCONFIGURATION_ID_PK, PARTYMPCMAP_KEY));

COMMENT ON COLUMN TB_LEG_TB_MPC.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_LEG_TB_MPC.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_LEG_TB_MPC.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_LEG_TB_MPC.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MEP (ID_PK NUMBER(38, 0) NOT NULL, LEG_COUNT INTEGER, NAME VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MEP PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MEP.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MEP.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MEP.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MEP.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MEP_BINDING (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MEP_BINDING PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MEP_BINDING.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MEP_BINDING.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MEP_BINDING.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MEP_BINDING.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_ACKNW (ID_PK NUMBER(38, 0) NOT NULL, MESSAGE_ID VARCHAR2(255), FROM_VALUE VARCHAR2(255), TO_VALUE VARCHAR2(255), CREATE_DATE TIMESTAMP, CREATE_USER VARCHAR2(255), ACKNOWLEDGE_DATE TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_ACKNW PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_ACKNW.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_ACKNW.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_ACKNW.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_ACKNW.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_ACKNW_PROP (ID_PK NUMBER(38, 0) NOT NULL, PROPERTY_NAME VARCHAR2(255), PROPERTY_VALUE VARCHAR2(255), FK_MSG_ACKNOWLEDGE NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_ACKNW_PROP PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_ACKNW_PROP.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_ACKNW_PROP.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_ACKNW_PROP.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_ACKNW_PROP.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_FRAGMENT (ID_PK NUMBER(38, 0) NOT NULL, GROUP_ID VARCHAR2(255), FRAGMENT_NUMBER INTEGER, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_FRAGMENT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_FRAGMENT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_FRAGMENT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_FRAGMENT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_FRAGMENT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_GROUP (ID_PK NUMBER(38, 0) NOT NULL, GROUP_ID VARCHAR2(255) NOT NULL, MSH_ROLE VARCHAR2(255), SOURCE_MESSAGE_ID VARCHAR2(255), MESSAGE_SIZE NUMBER(38, 0), FRAGMENT_COUNT INTEGER, SENT_FRAGMENTS INTEGER, RECEIVED_FRAGMENTS INTEGER, COMPRESSION_ALGORITHM VARCHAR2(255), COMPRESSED_MESSAGE_SIZE NUMBER(38, 0), SOAP_ACTION VARCHAR2(255), FK_MESSAGE_HEADER_ID NUMBER(38, 0), REJECTED NUMBER(1), EXPIRED NUMBER(1), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_GROUP PRIMARY KEY (ID_PK));

COMMENT ON TABLE TB_MESSAGE_GROUP IS 'Stores information about the message group for SplitAndJoin';

COMMENT ON COLUMN TB_MESSAGE_GROUP.GROUP_ID IS 'The group id';

COMMENT ON COLUMN TB_MESSAGE_GROUP.MSH_ROLE IS 'The role of the MSH';

COMMENT ON COLUMN TB_MESSAGE_GROUP.SOURCE_MESSAGE_ID IS 'The SourceMessage id';

COMMENT ON COLUMN TB_MESSAGE_GROUP.MESSAGE_SIZE IS 'The message size before compression';

COMMENT ON COLUMN TB_MESSAGE_GROUP.FRAGMENT_COUNT IS 'The message fragment count';

COMMENT ON COLUMN TB_MESSAGE_GROUP.SENT_FRAGMENTS IS 'Stores how many fragments have been sent';

COMMENT ON COLUMN TB_MESSAGE_GROUP.RECEIVED_FRAGMENTS IS 'Stores how many fragments have been received';

COMMENT ON COLUMN TB_MESSAGE_GROUP.COMPRESSION_ALGORITHM IS 'Compression algorithm used for the SourceMessage';

COMMENT ON COLUMN TB_MESSAGE_GROUP.COMPRESSED_MESSAGE_SIZE IS 'The size of the message after compression';

COMMENT ON COLUMN TB_MESSAGE_GROUP.SOAP_ACTION IS 'The Soap action value';

COMMENT ON COLUMN TB_MESSAGE_GROUP.FK_MESSAGE_HEADER_ID IS 'Foreign key to the TB_MESSAGE_HEADER';

COMMENT ON COLUMN TB_MESSAGE_GROUP.REJECTED IS 'True if the message group has been rejected';

COMMENT ON COLUMN TB_MESSAGE_GROUP.EXPIRED IS 'True if the message group has expired';

COMMENT ON COLUMN TB_MESSAGE_GROUP.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_GROUP.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_GROUP.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_GROUP.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_HEADER (ID_PK NUMBER(38, 0) NOT NULL, BOUNDARY VARCHAR2(255), "START" VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_HEADER PRIMARY KEY (ID_PK));

COMMENT ON TABLE TB_MESSAGE_HEADER IS 'Stores the message header details for SplitAndJoin';

COMMENT ON COLUMN TB_MESSAGE_HEADER.BOUNDARY IS 'The multipart boundary value';

COMMENT ON COLUMN TB_MESSAGE_HEADER."START" IS 'The multipart start value';

COMMENT ON COLUMN TB_MESSAGE_HEADER.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_HEADER.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_HEADER.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_HEADER.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_INFO (ID_PK NUMBER(38, 0) NOT NULL, MESSAGE_ID VARCHAR2(255) NOT NULL, REF_TO_MESSAGE_ID VARCHAR2(255), TIME_STAMP TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_INFO PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_INFO.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_INFO.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_INFO.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_INFO.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_LOG (ID_PK NUMBER(38, 0) NOT NULL, DELETED TIMESTAMP, MESSAGE_ID VARCHAR2(255), MESSAGE_STATUS VARCHAR2(255), MESSAGE_TYPE VARCHAR2(255), MPC VARCHAR2(255), MSH_ROLE VARCHAR2(255), NEXT_ATTEMPT TIMESTAMP, NOTIFICATION_STATUS VARCHAR2(255), RECEIVED TIMESTAMP, RESTORED TIMESTAMP, DOWNLOADED TIMESTAMP, FAILED TIMESTAMP, SEND_ATTEMPTS INTEGER, SEND_ATTEMPTS_MAX INTEGER, BACKEND VARCHAR2(255), ENDPOINT VARCHAR2(255), MESSAGE_SUBTYPE VARCHAR2(255), SOURCE_MESSAGE NUMBER(1), MESSAGE_FRAGMENT NUMBER(1), SCHEDULED NUMBER(1), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), VERSION INTEGER DEFAULT 0, CONSTRAINT PK_TB_MESSAGE_LOG PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_LOG.SOURCE_MESSAGE IS 'true if the message is a SourceMessage';

COMMENT ON COLUMN TB_MESSAGE_LOG.MESSAGE_FRAGMENT IS 'true if the message is a message fragment';

COMMENT ON COLUMN TB_MESSAGE_LOG.SCHEDULED IS 'true if the message is already scheduled to be sent';

COMMENT ON COLUMN TB_MESSAGE_LOG.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_LOG.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_LOG.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_LOG.MODIFIED_BY IS 'The user who last modified this record';

COMMENT ON COLUMN TB_MESSAGE_LOG.VERSION IS 'Used for optimistic locking mechanism';

CREATE TABLE TB_MESSAGE_PROPERTY (ID_PK NUMBER(38, 0) NOT NULL, DATATYPE VARCHAR2(255), KEY_ VARCHAR2(255), NAME VARCHAR2(255), REQUIRED_ NUMBER(1), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_PROPERTY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_PROPERTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_PROPERTY_SET (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_PROPERTY_SET PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_PROPERTY_SET.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY_SET.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY_SET.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_PROPERTY_SET.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGE_UI (ID_PK NUMBER(38, 0) NOT NULL, MESSAGE_ID VARCHAR2(255), MESSAGE_STATUS VARCHAR2(255), NOTIFICATION_STATUS VARCHAR2(255) NOT NULL, MSH_ROLE VARCHAR2(255) NOT NULL, MESSAGE_TYPE VARCHAR2(255) NOT NULL, DELETED TIMESTAMP, RECEIVED TIMESTAMP, SEND_ATTEMPTS INTEGER, SEND_ATTEMPTS_MAX INTEGER, NEXT_ATTEMPT TIMESTAMP, CONVERSATION_ID VARCHAR2(255), FROM_ID VARCHAR2(255) NOT NULL, TO_ID VARCHAR2(255) NOT NULL, FROM_SCHEME VARCHAR2(255), TO_SCHEME VARCHAR2(255), REF_TO_MESSAGE_ID VARCHAR2(255), FAILED TIMESTAMP, RESTORED TIMESTAMP, MESSAGE_SUBTYPE VARCHAR2(255), LAST_MODIFIED TIMESTAMP DEFAULT sysdate NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGE_UI PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGE_UI.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGE_UI.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGE_UI.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGE_UI.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGING (ID_PK NUMBER(38, 0) NOT NULL, ID VARCHAR2(255), SIGNAL_MESSAGE_ID NUMBER(38, 0), USER_MESSAGE_ID NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGING PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGING.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGING.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGING.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGING.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MESSAGING_LOCK (ID_PK NUMBER(38, 0) NOT NULL, MESSAGE_TYPE VARCHAR2(10), MESSAGE_RECEIVED TIMESTAMP, MESSAGE_STATE VARCHAR2(10), MESSAGE_ID VARCHAR2(255), INITIATOR VARCHAR2(255), MPC VARCHAR2(255), SEND_ATTEMPTS INTEGER, SEND_ATTEMPTS_MAX INTEGER, NEXT_ATTEMPT TIMESTAMP, MESSAGE_STALED TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MESSAGING_LOCK PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MESSAGING_LOCK.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MESSAGING_LOCK.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MESSAGING_LOCK.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MESSAGING_LOCK.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_MPC (ID_PK NUMBER(38, 0) NOT NULL, DEFAULT_MPC NUMBER(1), IS_ENABLED NUMBER(1), NAME VARCHAR2(255), QUALIFIED_NAME VARCHAR2(255), RETENTION_DOWNLOADED INTEGER, RETENTION_UNDOWNLOADED INTEGER, FK_CONFIGURATION NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_MPC PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_MPC.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_MPC.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_MPC.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_MPC.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PARTY (ID_PK NUMBER(38, 0) NOT NULL, ENDPOINT VARCHAR2(255), NAME VARCHAR2(255), "PASSWORD" VARCHAR2(255), USERNAME VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PARTY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PARTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PARTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PARTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PARTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PARTY_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), ENDPOINT VARCHAR2(255), ENDPOINT_MOD NUMBER(1), NAME VARCHAR2(255), NAME_MOD NUMBER(1), "PASSWORD" VARCHAR2(255), PASSWORD_MOD NUMBER(1), USERNAME VARCHAR2(255), USERNAME_MOD NUMBER(1), CONSTRAINT PK_PARTY_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_PARTY_ID (ID_PK NUMBER(38, 0) NOT NULL, TYPE VARCHAR2(255), VALUE VARCHAR2(255), TO_ID NUMBER(38, 0), FROM_ID NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PARTY_ID PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PARTY_ID.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PARTY_ID.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PARTY_ID.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PARTY_ID.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PARTY_IDENTIFIER (ID_PK NUMBER(38, 0) NOT NULL, PARTY_ID VARCHAR2(255), FK_PARTY_ID_TYPE NUMBER(38, 0), FK_PARTY NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PARTY_IDENTIFIER PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PARTY_IDENTIFIER.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PARTY_IDENTIFIER.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PARTY_IDENTIFIER.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PARTY_IDENTIFIER.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PARTY_IDENTIFIER_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), FK_PARTY NUMBER(38, 0), CONSTRAINT PK_PARTY_IDENTIFIER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_PARTY_ID_TYPE (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PARTY_ID_TYPE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PARTY_ID_TYPE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PARTY_ID_TYPE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PARTY_ID_TYPE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PARTY_ID_TYPE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PARTY_ID_TYPE_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), NAME VARCHAR2(255), NAME_MOD NUMBER(1), VALUE VARCHAR2(255), VALUE_MOD NUMBER(1), CONSTRAINT PK_PARTY_ID_TYPE_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_PART_INFO (ID_PK NUMBER(38, 0) NOT NULL, BINARY_DATA BLOB, DESCRIPTION_LANG VARCHAR2(255), DESCRIPTION_VALUE VARCHAR2(255), HREF VARCHAR2(255), IN_BODY NUMBER(1), SCHEMA_LOCATION VARCHAR2(255), SCHEMA_NAMESPACE VARCHAR2(255), SCHEMA_VERSION VARCHAR2(255), PAYLOADINFO_ID NUMBER(38, 0), FILENAME VARCHAR2(255), MIME VARCHAR2(255) NOT NULL, PART_ORDER INTEGER DEFAULT 0 NOT NULL, ENCRYPTED NUMBER(1) DEFAULT 0, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PART_INFO PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PART_INFO.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PART_INFO.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PART_INFO.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PART_INFO.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PAYLOAD (ID_PK NUMBER(38, 0) NOT NULL, CID VARCHAR2(255), IN_BODY NUMBER(1), MAX_SIZE INTEGER, MIME_TYPE VARCHAR2(255), NAME VARCHAR2(255), REQUIRED_ NUMBER(1), SCHEMA_FILE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PAYLOAD PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PAYLOAD.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PAYLOAD.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PAYLOAD.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PAYLOAD.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PAYLOAD_PROFILE (ID_PK NUMBER(38, 0) NOT NULL, MAX_SIZE NUMBER(38, 0), NAME VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PAYLOAD_PROFILE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PAYLOAD_PROFILE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PAYLOAD_PROFILE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PAYLOAD_PROFILE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PAYLOAD_PROFILE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PLUGIN_USER_PASSWD_HISTORY (ID_PK NUMBER(38, 0) NOT NULL, USER_ID NUMBER(38, 0) NOT NULL, USER_PASSWORD VARCHAR2(255) NOT NULL, PASSWORD_CHANGE_DATE TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PLUGIN_USER_PASSWD_HISTO PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PLUGIN_USER_PASSWD_HISTORY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PLUGIN_USER_PASSWD_HISTORY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PLUGIN_USER_PASSWD_HISTORY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PLUGIN_USER_PASSWD_HISTORY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PROCESS (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), FK_AGREEMENT NUMBER(38, 0), FK_INITIATOR_ROLE NUMBER(38, 0), FK_MEP NUMBER(38, 0), FK_MEP_BINDING NUMBER(38, 0), FK_RESPONDER_ROLE NUMBER(38, 0), FK_BUSINESSPROCESS NUMBER(38, 0), USE_DYNAMIC_INITIATOR NUMBER(1) NOT NULL, USE_DYNAMIC_RESPONDER NUMBER(1) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PROCESS PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PROCESS.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PROCESS.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PROCESS.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PROCESS.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_PROPERTY (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255) NOT NULL, VALUE VARCHAR2(255), MESSAGEPROPERTIES_ID NUMBER(38, 0), PARTPROPERTIES_ID NUMBER(38, 0), TYPE VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_PROPERTY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_PROPERTY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_PROPERTY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_PROPERTY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_PROPERTY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_RAWENVELOPE_LOG (ID_PK NUMBER(38, 0) NOT NULL, USERMESSAGE_ID_FK NUMBER(38, 0), SIGNALMESSAGE_ID_FK NUMBER(38, 0), RAW_XML CLOB, MESSAGE_ID VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_RAWENVELOPE_LOG PRIMARY KEY (ID_PK));

-- CREATE TABLE TB_RAWENVELOPE_LOG (ID_PK NUMBER(38, 0) not null primary key, USERMESSAGE_ID_FK NUMBER(38, 0), SIGNALMESSAGE_ID_FK NUMBER(38, 0), RAW_XML CLOB, MESSAGE_ID VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255)) PARTITION BY HASH (ID_PK)PARTITIONS 8 ;

-- CREATE INDEX FK_SIGNALMSG_ID_FK_RAWENV_ID ON TB_RAWENVELOPE_LOG(SIGNALMESSAGE_ID_FK) LOCAL;
CREATE INDEX FK_SIGNALMSG_ID_FK_RAWENV_ID ON TB_RAWENVELOPE_LOG(SIGNALMESSAGE_ID_FK);

--CREATE INDEX FK_USERMSG_ID_FK_RAWENV_ID ON TB_RAWENVELOPE_LOG(USERMESSAGE_ID_FK) LOCAL;
CREATE INDEX FK_USERMSG_ID_FK_RAWENV_ID ON TB_RAWENVELOPE_LOG(USERMESSAGE_ID_FK);

--CREATE INDEX IDX_RAWENVELOPE_MESSAGE_ID ON TB_RAWENVELOPE_LOG(MESSAGE_ID) LOCAL;
CREATE INDEX IDX_RAWENVELOPE_MESSAGE_ID ON TB_RAWENVELOPE_LOG(MESSAGE_ID);

COMMENT ON COLUMN TB_RAWENVELOPE_LOG.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_RAWENVELOPE_LOG.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_RAWENVELOPE_LOG.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_RAWENVELOPE_LOG.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_RECEIPT (ID_PK NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_RECEIPT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_RECEIPT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_RECEIPT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_RECEIPT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_RECEIPT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_RECEIPT_DATA (RECEIPT_ID NUMBER(38, 0) NOT NULL, RAW_XML CLOB, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255));

COMMENT ON COLUMN TB_RECEIPT_DATA.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_RECEIPT_DATA.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_RECEIPT_DATA.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_RECEIPT_DATA.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_RECEPTION_AWARENESS (ID_PK NUMBER(38, 0) NOT NULL, DUPLICATE_DETECTION NUMBER(1), NAME VARCHAR2(255), RETRY_COUNT INTEGER, RETRY_TIMEOUT INTEGER, STRATEGY VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_RECEPTION_AWARENESS PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_RECEPTION_AWARENESS.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_RECEPTION_AWARENESS.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_RECEPTION_AWARENESS.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_RECEPTION_AWARENESS.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_RELIABILITY (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), NON_REPUDIATION NUMBER(1), REPLY_PATTERN VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_RELIABILITY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_RELIABILITY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_RELIABILITY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_RELIABILITY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_RELIABILITY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_REV_CHANGES (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0), AUDIT_ORDER INTEGER, ENTIY_NAME VARCHAR2(255), GROUP_NAME VARCHAR2(255), ENTITY_ID VARCHAR2(255), MODIFICATION_TYPE VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_REV_CHANGES PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_REV_CHANGES.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_REV_CHANGES.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_REV_CHANGES.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_REV_CHANGES.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_REV_INFO (ID NUMBER(38, 0) NOT NULL, TIMESTAMP NUMBER(38, 0), REVISION_DATE TIMESTAMP, USER_NAME VARCHAR2(255), CONSTRAINT PK_TB_REV_INFO PRIMARY KEY (ID));

CREATE TABLE TB_ROLE (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ROLE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ROLE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ROLE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ROLE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ROLE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ROUTING_CRITERIA (ID_PK NUMBER(38, 0) NOT NULL, EXPRESSION VARCHAR2(255), NAME VARCHAR2(255), FK_BACKEND_FILTER NUMBER(38, 0), PRIORITY INTEGER, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_ROUTING_CRITERIA PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_ROUTING_CRITERIA.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_ROUTING_CRITERIA.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_ROUTING_CRITERIA.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_ROUTING_CRITERIA.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_ROUTING_CRITERIA_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), EXPRESSION VARCHAR2(255), EXPRESSION_MOD NUMBER(1), NAME VARCHAR2(255), NAME_MOD NUMBER(1), CONSTRAINT PK_ROUTING_CRITERIA_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_SECURITY (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), POLICY VARCHAR2(255), SIGNATURE_METHOD VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_SECURITY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_SECURITY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_SECURITY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_SECURITY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_SECURITY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_SEND_ATTEMPT (ID_PK NUMBER(38, 0) NOT NULL, MESSAGE_ID VARCHAR2(255) NOT NULL, START_DATE TIMESTAMP NOT NULL, END_DATE TIMESTAMP NOT NULL, STATUS VARCHAR2(255) NOT NULL, ERROR VARCHAR2(255), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_SEND_ATTEMPT PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_SEND_ATTEMPT.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_SEND_ATTEMPT.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_SEND_ATTEMPT.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_SEND_ATTEMPT.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_SERVICE (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), SERVICE_TYPE VARCHAR2(255), VALUE VARCHAR2(255), FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_SERVICE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_SERVICE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_SERVICE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_SERVICE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_SERVICE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_SIGNAL_MESSAGE (ID_PK NUMBER(38, 0) NOT NULL, PULL_REQUEST_MPC VARCHAR2(255), MESSAGEINFO_ID_PK NUMBER(38, 0), RECEIPT_ID_PK NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_SIGNAL_MESSAGE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_SIGNAL_MESSAGE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_SIGNAL_MESSAGE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_SIGNAL_MESSAGE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_SIGNAL_MESSAGE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_SPLITTING (ID_PK NUMBER(38, 0) NOT NULL, NAME VARCHAR2(255), FRAGMENT_SIZE INTEGER, COMPRESSION NUMBER(1), COMPRESSION_ALGORITHM VARCHAR2(255), JOIN_INTERVAL INTEGER, FK_BUSINESSPROCESS NUMBER(38, 0), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_SPLITTING PRIMARY KEY (ID_PK));

COMMENT ON TABLE TB_SPLITTING IS 'Stores the configuration of the SplitAndJoin parameters configured in the PMode';

COMMENT ON COLUMN TB_SPLITTING.NAME IS 'Splitting configuration name';

COMMENT ON COLUMN TB_SPLITTING.FRAGMENT_SIZE IS 'The fragment size';

COMMENT ON COLUMN TB_SPLITTING.COMPRESSION IS 'True if compression will be used';

COMMENT ON COLUMN TB_SPLITTING.COMPRESSION_ALGORITHM IS 'Compression algorithm to use for compressing the SourceMessage';

COMMENT ON COLUMN TB_SPLITTING.JOIN_INTERVAL IS 'The join interval';

COMMENT ON COLUMN TB_SPLITTING.FK_BUSINESSPROCESS IS 'Foreign key to the business process';

COMMENT ON COLUMN TB_SPLITTING.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_SPLITTING.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_SPLITTING.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_SPLITTING.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER (ID_PK NUMBER(38, 0) NOT NULL, USER_EMAIL VARCHAR2(255), USER_ENABLED NUMBER(1) NOT NULL, USER_PASSWORD VARCHAR2(255) NOT NULL, USER_NAME VARCHAR2(255) NOT NULL, OPTLOCK INTEGER, ATTEMPT_COUNT INTEGER DEFAULT 0, SUSPENSION_DATE TIMESTAMP, USER_DELETED NUMBER(1) DEFAULT 0 NOT NULL, PASSWORD_CHANGE_DATE TIMESTAMP DEFAULT sysdate NOT NULL, DEFAULT_PASSWORD NUMBER(1) DEFAULT 0, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_USER PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_USER.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_USER.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_USER.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_USER.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), USER_ENABLED NUMBER(1), ACTIVE_MOD NUMBER(1), USER_DELETED NUMBER(1), DELETED_MOD NUMBER(1), USER_EMAIL VARCHAR2(255), EMAIL_MOD NUMBER(1), USER_PASSWORD VARCHAR2(255), PASSWORD_MOD NUMBER(1), USER_NAME VARCHAR2(255), USERNAME_MOD NUMBER(1), OPTLOCK INTEGER, VERSION_MOD NUMBER(1), ROLES_MOD NUMBER(1), PASSWORD_CHANGE_DATE TIMESTAMP, PASSWORDCHANGEDATE_MOD NUMBER(1), DEFAULT_PASSWORD NUMBER(1), DEFAULTPASSWORD_MOD NUMBER(1), CONSTRAINT PK_USER_AUD PRIMARY KEY (ID_PK, REV));

CREATE TABLE TB_USER_MESSAGE (ID_PK NUMBER(38, 0) NOT NULL, COLLABORATION_INFO_ACTION VARCHAR2(255), AGREEMENT_REF_PMODE VARCHAR2(255), AGREEMENT_REF_TYPE VARCHAR2(255), AGREEMENT_REF_VALUE VARCHAR2(255), COLL_INFO_CONVERS_ID VARCHAR2(255) NOT NULL, SERVICE_TYPE VARCHAR2(255), SERVICE_VALUE VARCHAR2(255), MPC VARCHAR2(255), FROM_ROLE VARCHAR2(255), TO_ROLE VARCHAR2(255), MESSAGEINFO_ID_PK NUMBER(38, 0), FK_MESSAGE_FRAGMENT_ID INTEGER, SPLIT_AND_JOIN NUMBER(1), CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_USER_MESSAGE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_USER_MESSAGE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_USER_MESSAGE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_USER_MESSAGE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_USER_MESSAGE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER_PASSWORD_HISTORY (ID_PK NUMBER(38, 0) NOT NULL, USER_ID NUMBER(38, 0) NOT NULL, USER_PASSWORD VARCHAR2(255) NOT NULL, PASSWORD_CHANGE_DATE TIMESTAMP, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_USER_PASSWORD_HISTORY PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_USER_PASSWORD_HISTORY.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_USER_PASSWORD_HISTORY.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_USER_PASSWORD_HISTORY.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_USER_PASSWORD_HISTORY.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER_ROLE (ID_PK NUMBER(38, 0) NOT NULL, ROLE_NAME VARCHAR2(255) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_TB_USER_ROLE PRIMARY KEY (ID_PK));

COMMENT ON COLUMN TB_USER_ROLE.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_USER_ROLE.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_USER_ROLE.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_USER_ROLE.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER_ROLES (USER_ID NUMBER(38, 0) NOT NULL, ROLE_ID NUMBER(38, 0) NOT NULL, CREATION_TIME TIMESTAMP DEFAULT sysdate NOT NULL, CREATED_BY VARCHAR2(255) DEFAULT user NOT NULL, MODIFICATION_TIME TIMESTAMP, MODIFIED_BY VARCHAR2(255), CONSTRAINT PK_PRIMARY PRIMARY KEY (USER_ID, ROLE_ID));

COMMENT ON COLUMN TB_USER_ROLES.CREATION_TIME IS 'The date and time when this record was created';

COMMENT ON COLUMN TB_USER_ROLES.CREATED_BY IS 'The user who created this record';

COMMENT ON COLUMN TB_USER_ROLES.MODIFICATION_TIME IS 'The date and time when this record was last modified';

COMMENT ON COLUMN TB_USER_ROLES.MODIFIED_BY IS 'The user who last modified this record';

CREATE TABLE TB_USER_ROLES_AUD (REV NUMBER(38, 0), REVTYPE NUMBER(3), USER_ID NUMBER(38, 0), ROLE_ID NUMBER(38, 0));

CREATE TABLE TB_USER_ROLE_AUD (ID_PK NUMBER(38, 0) NOT NULL, REV NUMBER(38, 0) NOT NULL, REVTYPE NUMBER(3), ROLE_NAME VARCHAR2(255), NAME_MOD NUMBER(1), USERS_MOD NUMBER(1), CONSTRAINT PK_USER_ROLE_AUD PRIMARY KEY (ID_PK, REV));

-- Changeset src/main/resources/db/changelog.xml::1564477107969-95::Catalin Enache
-- create unique constraints
ALTER TABLE TB_CERTIFICATE ADD CONSTRAINT CERTIFICATE_ALIAS UNIQUE (CERTIFICATE_ALIAS, CERTIFICATE_TYPE);

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT UK_7H5NW411791GF4LG1YH6SI1WD UNIQUE (PARTYMPCMAP_ID_PK);

ALTER TABLE TB_MESSAGE_INFO ADD CONSTRAINT UK_ECRRAOE83O1UQQ0DN9424X7LN UNIQUE (MESSAGE_ID);

ALTER TABLE TB_COMMAND_PROPERTY ADD CONSTRAINT UNI_COMMAND_PROP_NAME UNIQUE (FK_COMMAND, PROPERTY_NAME);

ALTER TABLE TB_MESSAGE_UI ADD CONSTRAINT UNI_MSG_UI_MSG_ID UNIQUE (MESSAGE_ID);

ALTER TABLE TB_ENCRYPTION_KEY ADD CONSTRAINT UQ_KEY_USAGE UNIQUE (KEY_USAGE);

ALTER TABLE TB_USER_ROLE ADD CONSTRAINT UQ_ROLE_NAME UNIQUE (ROLE_NAME);

ALTER TABLE TB_USER ADD CONSTRAINT USER_NAME UNIQUE (USER_NAME);

ALTER TABLE TB_AUTHENTICATION_ENTRY ADD CONSTRAINT UQ_PLUGIN_USER UNIQUE (USERNAME, CERTIFICATE_ID);

-- Changeset src/main/resources/db/changelog.xml::1564477107969-104::Catalin Enache
-- create indexes
CREATE UNIQUE INDEX IDX_MESSAGE_LOCK_UNIQUE_ID ON TB_MESSAGING_LOCK(MESSAGE_ID);

CREATE INDEX FK_13K2EPTP1EJP5OTHY1NJRG3P8 ON TB_LEG(FK_RELIABILITY);

CREATE INDEX FK_277J83LGSQ3NMWYHSW637YND8 ON TB_MEP_BINDING(FK_BUSINESSPROCESS);

CREATE INDEX FK_2H31P0A2Y6WEG2GRH70C9CYVA ON TB_PROPERTY(MESSAGEPROPERTIES_ID);

CREATE INDEX FK_2SW6KNALOR7RPR04YE0O2R9AP ON TB_ROLE(FK_BUSINESSPROCESS);

CREATE INDEX FK_3EMT6XAGLH7676LPCKIY6R1VB ON TB_PROCESS(FK_RESPONDER_ROLE);

CREATE INDEX FK_3SGAXWFR5KOE3OLDBBD62SIWQ ON TB_RECEPTION_AWARENESS(FK_BUSINESSPROCESS);

CREATE INDEX FK_433RGM5A446T59Q6JKB885L3X ON TB_MESSAGING(USER_MESSAGE_ID);

CREATE INDEX FK_53GP9SMTEMQCUIO8O9T10NARM ON TB_MESSAGING(SIGNAL_MESSAGE_ID);

CREATE INDEX FK_62DT1Y6O7OD1T0IQN7DOW8UQ5 ON TB_CONFIGURATION(FK_BUSINESSPROCESSES);

CREATE INDEX FK_6HLDNNQKMH6LUI555T4N9FJIV ON TB_ACTION(FK_BUSINESSPROCESS);

CREATE INDEX FK_70M9KQPQAB3RGK90WSUV9VN64 ON TB_AGREEMENT(FK_BUSINESSPROCESS);

CREATE INDEX FK_7P1G7SQVLI1SJ6K7VPHJO9IRC ON TB_PROCESS(FK_BUSINESSPROCESS);

CREATE INDEX FK_8NCCAE214MVS1KH5SGCJ3Y5OY ON TB_RECEIPT_DATA(RECEIPT_ID);

CREATE INDEX FK_8Q319STWM1NOIJPB3JFL8JRI8 ON TB_MPC(FK_CONFIGURATION);

CREATE INDEX FK_9HPMOEWLITIVCL8RW1JOCCUAU ON TB_LEG(FK_SECURITY);

CREATE INDEX FK_ADVGUDIX024IRQPUGE4DL9IQF ON TB_PARTY_ID_TYPE(FK_BUSINESSPROCESS);

CREATE INDEX FK_AM7BWSM92SE3NVCLBEIEP5VWG ON TB_LEG(FK_PAYLOAD_PROFILE);

CREATE INDEX FK_ASJDL57BUDMUWMJ3611969JPP ON TB_JOIN_PROCESS_INIT_PARTY(PARTY_FK);

CREATE INDEX FK_BACKEND_FILTER_AUD_REV ON TB_BACKEND_FILTER_AUD(REV);

CREATE INDEX FK_BACK_RCRITERIA_AUD ON TB_BACK_RCRITERIA_AUD(REV);

CREATE INDEX FK_BE4XC1069QYW2KLHVM3XMG26S ON TB_USER_MESSAGE(MESSAGEINFO_ID_PK);

CREATE INDEX FK_C08LJJWI4P9DX1RJTCDBE1SFU ON TB_SIGNAL_MESSAGE(MESSAGEINFO_ID_PK);

CREATE INDEX FK_CLOYY9K391VHSUP85IWR8IXIV ON TB_PARTY(FK_BUSINESSPROCESS);

CREATE INDEX FK_CONFIGURATION_AUD_REV ON TB_CONFIGURATION_AUD(REV);

CREATE INDEX FK_CONFIGURATION_RAW_AUD ON TB_CONFIGURATION_RAW_AUD(REV);

CREATE INDEX FK_CWYLVG6ERNWBA61MO3YAGMKG8 ON TB_PROPERTY(PARTPROPERTIES_ID);

CREATE INDEX FK_D9EL0L8U1GM5OEU67NQRKHERQ ON TB_PAYLOAD(FK_BUSINESSPROCESS);

CREATE INDEX FK_DESR6XTDP1LP41D5VENLHF4BC ON TB_PARTY_IDENTIFIER(FK_PARTY);

CREATE INDEX FK_DGTGTG41YRFEBYYSMKYI1GCAA ON TB_LEG(FK_ACTION);

CREATE INDEX FK_E7EHGHIFRNS83W6V3TPS7VPII ON TB_PARTY_IDENTIFIER(FK_PARTY_ID_TYPE);

CREATE INDEX FK_EIY3F9AHX0KDX4WXOI6PRYTN9 ON TB_MESSAGE_PROPERTY_SET(FK_BUSINESSPROCESS);

CREATE INDEX FK_EKK8PN89Y50G22KD3GPJA7J39 ON TB_JOIN_PROPERTY_SET(PROPERTY_FK);

CREATE INDEX FK_EPMXKH8U7JNW5PBYJ47SIRMLH ON TB_MEP(FK_BUSINESSPROCESS);

CREATE INDEX FK_FKFTD5ORW2ETIU4GHMN3MHX9I ON TB_PARTY_ID(FROM_ID);

CREATE INDEX FK_FPXBDC63GIFACRD4QB6AFRQYW ON TB_JOIN_PROCESS_LEG(PROCESS_FK);

CREATE INDEX FK_FWRQ81CCTU2NH0QEPRMPVKER9 ON TB_SECURITY(FK_BUSINESSPROCESS);

CREATE INDEX FK_G20EOW5F2CKE3AVSRG6QPKUXV ON TB_JOIN_PAYLOAD_PROFILE(FK_PROFILE);

CREATE INDEX FK_GH98Q07KCJL7WDAON9GGIFQUX ON TB_JOIN_PROCESS_LEG(LEG_FK);

CREATE INDEX FK_HLB2Y2PRPM52SSYNN22H3SWSR ON TB_JOIN_PROCESS_RESP_PARTY(PROCESS_FK);

CREATE INDEX FK_I7GEI6BDR2CDN61HDOPLXBU7P ON TB_ROUTING_CRITERIA(FK_BACKEND_FILTER);

CREATE INDEX FK_J0Y3FCEDIQX5BUT8JBSCY59KW ON TB_LEG(FK_ERROR_HANDLING);

CREATE INDEX FK_J7LAB5N5SUKLCLDQHXN8JL2JO ON TB_PROCESS(FK_MEP);

CREATE INDEX FK_KJANLCDEAP7NIRDIGR7RT7P4V ON TB_PROCESS(FK_AGREEMENT);

CREATE INDEX FK_KKHXS36RW15AYGPN00NVVGYXG ON TB_SERVICE(FK_BUSINESSPROCESS);

CREATE INDEX FK_KV2C5K41APDLVC6I18AR57ABE ON TB_LEG(FK_SERVICE);

CREATE INDEX FK_KYN19SWM143M96IN317SR97H2 ON TB_JOIN_PROCESS_RESP_PARTY(PARTY_FK);

CREATE INDEX FK_L1MMHS1TBT8PW7VX5TEUYTJVJ ON TB_ERROR_HANDLING(FK_BUSINESSPROCESS);

CREATE INDEX FK_LE4RXNKI51EAK6XETC7FQ8SRI ON TB_LEG(FK_PROPERTY_SET);

CREATE INDEX FK_LEG_SPLT ON TB_LEG(FK_SPLITTING);

CREATE INDEX FK_LNNPLHIAWXX7WLT43YE3PEJ00 ON TB_RELIABILITY(FK_BUSINESSPROCESS);

CREATE INDEX FK_LYNOM7RXKC0T1XFL0NOWXPEUJ ON TB_PAYLOAD_PROFILE(FK_BUSINESSPROCESS);

CREATE INDEX FK_M6UU2Y6G9BUET3O3K1N4QXWEC ON TB_SIGNAL_MESSAGE(RECEIPT_ID_PK);

CREATE INDEX FK_MG_MH ON TB_MESSAGE_GROUP(FK_MESSAGE_HEADER_ID);

CREATE INDEX FK_MK54XE43F3HOKH7FJL3W66EFK ON TB_JOIN_PROPERTY_SET(SET_FK);

CREATE INDEX FK_MSG_ACK_PROP_MSG_ACK ON TB_MESSAGE_ACKNW_PROP(FK_MSG_ACKNOWLEDGE);

CREATE INDEX FK_ORDDLTV2G3LQ79EU48C2MC2FY ON TB_LEG_TB_MPC(PARTYMPCMAP_KEY);

CREATE INDEX FK_OT8JFKOTD6QU7JRDAPTROHBN8 ON TB_JOIN_PROCESS_INIT_PARTY(PROCESS_FK);

CREATE INDEX FK_PARTY_AUD_REV ON TB_PARTY_AUD(REV);

CREATE INDEX FK_PARTY_IDENTIFIER_AUD_REV ON TB_PARTY_IDENTIFIER_AUD(REV);

CREATE INDEX FK_PARTY_ID_TYPE_AUD_REV ON TB_PARTY_ID_TYPE_AUD(REV);

CREATE INDEX FK_PPVXYURCVFY71FVEJW9BOSGHW ON TB_LEG(FK_MPC);

CREATE INDEX FK_PRRCMI4GRM4TXHFSFNFHGQ1K1 ON TB_ERROR(SIGNALMESSAGE_ID);

CREATE INDEX FK_Q0L3EJ6RUQCFUTRU2SECURQ9L ON TB_JOIN_PAYLOAD_PROFILE(FK_PAYLOAD);

CREATE INDEX FK_Q1JFSXFOJ3NL7HII3CO7BU0FR ON TB_PROCESS(FK_INITIATOR_ROLE);

CREATE INDEX FK_Q3GAPFC1E7HFBGMO0NEBJ4K1N ON TB_CONFIGURATION(FK_PARTY);

CREATE INDEX FK_R2SWPQOF7636VVEQT0DXL89DP ON TB_LEG(FK_BUSINESSPROCESS);

CREATE INDEX FK_REV_CHANGES_REV ON TB_REV_CHANGES(REV);

CREATE INDEX FK_RJ8H1B65VNJJGYFCJNVSWKGUH ON TB_MESSAGE_PROPERTY(FK_BUSINESSPROCESS);

CREATE INDEX FK_RLBJSTVO4GPDCP6YSV9MOFQXJ ON TB_LEG(FK_RECEPTION_AWARENESS);

CREATE INDEX FK_ROUTING_CRITERIA_AUD_REV ON TB_ROUTING_CRITERIA_AUD(REV);

CREATE INDEX FK_SPLT_BP ON TB_SPLITTING(FK_BUSINESSPROCESS);

CREATE INDEX FK_TP11D8FG7CV1FWF5XKVWQPP34 ON TB_PROCESS(FK_MEP_BINDING);

CREATE INDEX FK_TQ6LBN3MP0VSFC6QQU7WXY54G ON TB_PART_INFO(PAYLOADINFO_ID);

CREATE INDEX FK_UM_MF ON TB_USER_MESSAGE(FK_MESSAGE_FRAGMENT_ID);

CREATE INDEX FK_USER_AUD_REV ON TB_USER_AUD(REV);

CREATE INDEX FK_USER_ROLE_AUD ON TB_USER_ROLE_AUD(REV);

CREATE INDEX FK_YLUB8LPTGVSCH02MJ71EUUIL ON TB_PARTY_ID(TO_ID);

CREATE INDEX IDX_FK_ALERT ON TB_EVENT_ALERT(FK_ALERT);

CREATE INDEX IDX_FK_AUTH_ENTRY_AUD_REV ON TB_AUTHENTICATION_ENTRY_AUD(REV);

CREATE INDEX IDX_FK_EVENT ON TB_EVENT_ALERT(FK_EVENT);

CREATE INDEX IDX_FK_EVENT_PROPERTY ON TB_EVENT_PROPERTY(FK_EVENT);

CREATE INDEX IDX_MESSAGE_INFO_R_T_M_ID ON TB_MESSAGE_INFO(REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MESSAGE_LOCK_SEARCH ON TB_MESSAGING_LOCK(MESSAGE_TYPE, MESSAGE_STATE, INITIATOR, MPC, NEXT_ATTEMPT);

CREATE INDEX IDX_MESSAGE_LOG_RECEIVED ON TB_MESSAGE_LOG(RECEIVED);

CREATE INDEX IDX_MF_GRP_ID ON TB_MESSAGE_FRAGMENT(GROUP_ID);

CREATE INDEX IDX_MSG_LOG_M_STATUS_SEND_ATT ON TB_MESSAGE_LOG(MESSAGE_STATUS, SEND_ATTEMPTS);

CREATE INDEX IDX_MSG_LOG_RCV_MSG_ID ON TB_MESSAGE_LOG(RECEIVED, MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_CONV_ID ON TB_MESSAGE_UI(CONVERSATION_ID);

CREATE INDEX IDX_MSG_UI_FROM_ID ON TB_MESSAGE_UI(FROM_ID);

CREATE INDEX IDX_MSG_UI_FROM_SCHEME ON TB_MESSAGE_UI(FROM_SCHEME);

CREATE INDEX IDX_MSG_UI_MSH_ROLE ON TB_MESSAGE_UI(MSH_ROLE);

CREATE INDEX IDX_MSG_UI_REF_MSG_ID ON TB_MESSAGE_UI(REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_STS_TYPE_STYPE_RCV ON TB_MESSAGE_UI(MESSAGE_STATUS, MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TO_ID ON TB_MESSAGE_UI(TO_ID);

CREATE INDEX IDX_MSG_UI_TO_SCHEME ON TB_MESSAGE_UI(TO_SCHEME);

CREATE INDEX IDX_MSG_UI_TYPE_RCV ON TB_MESSAGE_UI(MESSAGE_TYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TYPE_STYPE_RCV ON TB_MESSAGE_UI(MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_PARTY_ID_VALUE ON TB_PARTY_ID(VALUE);

CREATE INDEX IDX_PLUGIN_USER_ID ON TB_PLUGIN_USER_PASSWD_HISTORY(USER_ID);

CREATE INDEX IDX_PROPERTY_NAME ON TB_PROPERTY(NAME);

CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID ON TB_PROPERTY(NAME, MESSAGEPROPERTIES_ID);

CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID_VAL ON TB_PROPERTY(NAME, MESSAGEPROPERTIES_ID, VALUE);

CREATE INDEX IDX_ROLE_ID ON TB_USER_ROLES(ROLE_ID);

CREATE INDEX IDX_TB_ML_MSG_ID ON TB_MESSAGE_LOG(MESSAGE_ID);

CREATE INDEX IDX_UPH_USER_ID ON TB_USER_PASSWORD_HISTORY(USER_ID);

CREATE INDEX IDX_USER_ID ON TB_USER_ROLES(USER_ID);

CREATE INDEX UK_BPEFLT902YBU9NSHBA2FJPV9D ON TB_MESSAGE_LOG(MSH_ROLE);

-- Changeset src/main/resources/db/changelog.xml::1564477107969-234::Catalin Enache
-- create foreign keys
ALTER TABLE TB_LEG ADD CONSTRAINT FK_13K2EPTP1EJP5OTHY1NJRG3P8 FOREIGN KEY (FK_RELIABILITY) REFERENCES TB_RELIABILITY (ID_PK);

ALTER TABLE TB_MEP_BINDING ADD CONSTRAINT FK_277J83LGSQ3NMWYHSW637YND8 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PROPERTY ADD CONSTRAINT FK_2H31P0A2Y6WEG2GRH70C9CYVA FOREIGN KEY (MESSAGEPROPERTIES_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_ROLE ADD CONSTRAINT FK_2SW6KNALOR7RPR04YE0O2R9AP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_3EMT6XAGLH7676LPCKIY6R1VB FOREIGN KEY (FK_RESPONDER_ROLE) REFERENCES TB_ROLE (ID_PK);

ALTER TABLE TB_RECEPTION_AWARENESS ADD CONSTRAINT FK_3SGAXWFR5KOE3OLDBBD62SIWQ FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_MESSAGING ADD CONSTRAINT FK_433RGM5A446T59Q6JKB885L3X FOREIGN KEY (USER_MESSAGE_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_MESSAGING ADD CONSTRAINT FK_53GP9SMTEMQCUIO8O9T10NARM FOREIGN KEY (SIGNAL_MESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_CONFIGURATION ADD CONSTRAINT FK_62DT1Y6O7OD1T0IQN7DOW8UQ5 FOREIGN KEY (FK_BUSINESSPROCESSES) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_ACTION ADD CONSTRAINT FK_6HLDNNQKMH6LUI555T4N9FJIV FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_AGREEMENT ADD CONSTRAINT FK_70M9KQPQAB3RGK90WSUV9VN64 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_7H5NW411791GF4LG1YH6SI1WD FOREIGN KEY (PARTYMPCMAP_ID_PK) REFERENCES TB_MPC (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_7P1G7SQVLI1SJ6K7VPHJO9IRC FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_RECEIPT_DATA ADD CONSTRAINT FK_8NCCAE214MVS1KH5SGCJ3Y5OY FOREIGN KEY (RECEIPT_ID) REFERENCES TB_RECEIPT (ID_PK);

ALTER TABLE TB_MPC ADD CONSTRAINT FK_8Q319STWM1NOIJPB3JFL8JRI8 FOREIGN KEY (FK_CONFIGURATION) REFERENCES TB_CONFIGURATION (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_9HPMOEWLITIVCL8RW1JOCCUAU FOREIGN KEY (FK_SECURITY) REFERENCES TB_SECURITY (ID_PK);

ALTER TABLE TB_PARTY_ID_TYPE ADD CONSTRAINT FK_ADVGUDIX024IRQPUGE4DL9IQF FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_ALERT_ID FOREIGN KEY (FK_ALERT) REFERENCES TB_ALERT (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_AM7BWSM92SE3NVCLBEIEP5VWG FOREIGN KEY (FK_PAYLOAD_PROFILE) REFERENCES TB_PAYLOAD_PROFILE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_ASJDL57BUDMUWMJ3611969JPP FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_AUTHENTICATION_ENTRY_AUD ADD CONSTRAINT FK_AUTH_ENTRY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_BACKEND_FILTER_AUD ADD CONSTRAINT FK_BACKEND_FILTER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_BACK_RCRITERIA_AUD ADD CONSTRAINT FK_BACK_RCRITERIA_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_USER_MESSAGE ADD CONSTRAINT FK_BE4XC1069QYW2KLHVM3XMG26S FOREIGN KEY (MESSAGEINFO_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK);

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_C08LJJWI4P9DX1RJTCDBE1SFU FOREIGN KEY (MESSAGEINFO_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK);

ALTER TABLE TB_PARTY ADD CONSTRAINT FK_CLOYY9K391VHSUP85IWR8IXIV FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_CONFIGURATION_AUD ADD CONSTRAINT FK_CONFIGURATION_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_CONFIGURATION_RAW_AUD ADD CONSTRAINT FK_CONFIGURATION_RAW_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PROPERTY ADD CONSTRAINT FK_CWYLVG6ERNWBA61MO3YAGMKG8 FOREIGN KEY (PARTPROPERTIES_ID) REFERENCES TB_PART_INFO (ID_PK);

ALTER TABLE TB_PAYLOAD ADD CONSTRAINT FK_D9EL0L8U1GM5OEU67NQRKHERQ FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PARTY_IDENTIFIER ADD CONSTRAINT FK_DESR6XTDP1LP41D5VENLHF4BC FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_DGTGTG41YRFEBYYSMKYI1GCAA FOREIGN KEY (FK_ACTION) REFERENCES TB_ACTION (ID_PK);

ALTER TABLE TB_PARTY_IDENTIFIER ADD CONSTRAINT FK_E7EHGHIFRNS83W6V3TPS7VPII FOREIGN KEY (FK_PARTY_ID_TYPE) REFERENCES TB_PARTY_ID_TYPE (ID_PK);

ALTER TABLE TB_MESSAGE_PROPERTY_SET ADD CONSTRAINT FK_EIY3F9AHX0KDX4WXOI6PRYTN9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_JOIN_PROPERTY_SET ADD CONSTRAINT FK_EKK8PN89Y50G22KD3GPJA7J39 FOREIGN KEY (PROPERTY_FK) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK);

ALTER TABLE TB_MEP ADD CONSTRAINT FK_EPMXKH8U7JNW5PBYJ47SIRMLH FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_EVENT_ALERT ADD CONSTRAINT FK_EVENT_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK);

ALTER TABLE TB_EVENT_PROPERTY ADD CONSTRAINT FK_EVENT_PROPERTY_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK);

ALTER TABLE TB_PARTY_ID ADD CONSTRAINT FK_FKFTD5ORW2ETIU4GHMN3MHX9I FOREIGN KEY (FROM_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_LEG ADD CONSTRAINT FK_FPXBDC63GIFACRD4QB6AFRQYW FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_SECURITY ADD CONSTRAINT FK_FWRQ81CCTU2NH0QEPRMPVKER9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_G20EOW5F2CKE3AVSRG6QPKUXV FOREIGN KEY (FK_PROFILE) REFERENCES TB_PAYLOAD (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_LEG ADD CONSTRAINT FK_GH98Q07KCJL7WDAON9GGIFQUX FOREIGN KEY (LEG_FK) REFERENCES TB_LEG (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_HLB2Y2PRPM52SSYNN22H3SWSR FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_ROUTING_CRITERIA ADD CONSTRAINT FK_I7GEI6BDR2CDN61HDOPLXBU7P FOREIGN KEY (FK_BACKEND_FILTER) REFERENCES TB_BACKEND_FILTER (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_J0Y3FCEDIQX5BUT8JBSCY59KW FOREIGN KEY (FK_ERROR_HANDLING) REFERENCES TB_ERROR_HANDLING (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_J7LAB5N5SUKLCLDQHXN8JL2JO FOREIGN KEY (FK_MEP) REFERENCES TB_MEP (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_KJANLCDEAP7NIRDIGR7RT7P4V FOREIGN KEY (FK_AGREEMENT) REFERENCES TB_AGREEMENT (ID_PK);

ALTER TABLE TB_SERVICE ADD CONSTRAINT FK_KKHXS36RW15AYGPN00NVVGYXG FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_KV2C5K41APDLVC6I18AR57ABE FOREIGN KEY (FK_SERVICE) REFERENCES TB_SERVICE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY ADD CONSTRAINT FK_KYN19SWM143M96IN317SR97H2 FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_ERROR_HANDLING ADD CONSTRAINT FK_L1MMHS1TBT8PW7VX5TEUYTJVJ FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_LE4RXNKI51EAK6XETC7FQ8SRI FOREIGN KEY (FK_PROPERTY_SET) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK);

ALTER TABLE TB_RELIABILITY ADD CONSTRAINT FK_LNNPLHIAWXX7WLT43YE3PEJ00 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PAYLOAD_PROFILE ADD CONSTRAINT FK_LYNOM7RXKC0T1XFL0NOWXPEUJ FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_SIGNAL_MESSAGE ADD CONSTRAINT FK_M6UU2Y6G9BUET3O3K1N4QXWEC FOREIGN KEY (RECEIPT_ID_PK) REFERENCES TB_RECEIPT (ID_PK);

ALTER TABLE TB_JOIN_PROPERTY_SET ADD CONSTRAINT FK_MK54XE43F3HOKH7FJL3W66EFK FOREIGN KEY (SET_FK) REFERENCES TB_MESSAGE_PROPERTY (ID_PK);

ALTER TABLE TB_MESSAGE_ACKNW_PROP ADD CONSTRAINT FK_MSG_ACK_PROP_MSG_ACK FOREIGN KEY (FK_MSG_ACKNOWLEDGE) REFERENCES TB_MESSAGE_ACKNW (ID_PK);

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_NYLCXSY1F9CN3TDSKH97H8PT1 FOREIGN KEY (LEGCONFIGURATION_ID_PK) REFERENCES TB_LEG (ID_PK);

ALTER TABLE TB_LEG_TB_MPC ADD CONSTRAINT FK_ORDDLTV2G3LQ79EU48C2MC2FY FOREIGN KEY (PARTYMPCMAP_KEY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY ADD CONSTRAINT FK_OT8JFKOTD6QU7JRDAPTROHBN8 FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_PARTY_AUD ADD CONSTRAINT FK_PARTY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_IDENTIFIER_AUD ADD CONSTRAINT FK_PARTY_IDENTIFIER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_ID_TYPE_AUD ADD CONSTRAINT FK_PARTY_ID_TYPE_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PLUGIN_USER_PASSWD_HISTORY ADD CONSTRAINT FK_PLUGIN_USER_PASSWD_HISTORY FOREIGN KEY (USER_ID) REFERENCES TB_AUTHENTICATION_ENTRY (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_PPVXYURCVFY71FVEJW9BOSGHW FOREIGN KEY (FK_MPC) REFERENCES TB_MPC (ID_PK);

ALTER TABLE TB_ERROR ADD CONSTRAINT FK_PRRCMI4GRM4TXHFSFNFHGQ1K1 FOREIGN KEY (SIGNALMESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE ADD CONSTRAINT FK_Q0L3EJ6RUQCFUTRU2SECURQ9L FOREIGN KEY (FK_PAYLOAD) REFERENCES TB_PAYLOAD_PROFILE (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_Q1JFSXFOJ3NL7HII3CO7BU0FR FOREIGN KEY (FK_INITIATOR_ROLE) REFERENCES TB_ROLE (ID_PK);

ALTER TABLE TB_CONFIGURATION ADD CONSTRAINT FK_Q3GAPFC1E7HFBGMO0NEBJ4K1N FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_R2SWPQOF7636VVEQT0DXL89DP FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_REV_CHANGES ADD CONSTRAINT FK_REV_CHANGES_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_MESSAGE_PROPERTY ADD CONSTRAINT FK_RJ8H1B65VNJJGYFCJNVSWKGUH FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT FK_RLBJSTVO4GPDCP6YSV9MOFQXJ FOREIGN KEY (FK_RECEPTION_AWARENESS) REFERENCES TB_RECEPTION_AWARENESS (ID_PK);

ALTER TABLE TB_ROUTING_CRITERIA_AUD ADD CONSTRAINT FK_ROUTING_CRITERIA_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_RAWENVELOPE_LOG ADD CONSTRAINT FK_SIGNALMSG_ID_FK_RAWENV_ID FOREIGN KEY (SIGNALMESSAGE_ID_FK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_PROCESS ADD CONSTRAINT FK_TP11D8FG7CV1FWF5XKVWQPP34 FOREIGN KEY (FK_MEP_BINDING) REFERENCES TB_MEP_BINDING (ID_PK);

ALTER TABLE TB_PART_INFO ADD CONSTRAINT FK_TQ6LBN3MP0VSFC6QQU7WXY54G FOREIGN KEY (PAYLOADINFO_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_RAWENVELOPE_LOG ADD CONSTRAINT FK_USERMSG_ID_FK_RAWENV_ID FOREIGN KEY (USERMESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_USER_AUD ADD CONSTRAINT FK_USER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_USER_PASSWORD_HISTORY ADD CONSTRAINT FK_USER_PASSWORD_HISTORY FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK);

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_ROLE FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK);

ALTER TABLE TB_USER_ROLES ADD CONSTRAINT FK_USER_ROLES_USER FOREIGN KEY (ROLE_ID) REFERENCES TB_USER_ROLE (ID_PK);

ALTER TABLE TB_USER_ROLE_AUD ADD CONSTRAINT FK_USER_ROLE_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_ID ADD CONSTRAINT FK_YLUB8LPTGVSCH02MJ71EUUIL FOREIGN KEY (TO_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_LEG ADD CONSTRAINT UK_LEG_SPLT FOREIGN KEY (FK_SPLITTING) REFERENCES TB_SPLITTING (ID_PK);

-- Changeset src/main/resources/db/changelog.xml::1564477107969-325::Catalin Enache
-- create AUDIT views
CREATE OR REPLACE VIEW V_AUDIT_DETAIL AS SELECT
            DISTINCT rc.GROUP_NAME as AUDIT_TYPE ,
            rc.MODIFICATION_TYPE as ACTION_TYPE,
            ri.USER_NAME as USER_NAME ,
            ri.REVISION_DATE as AUDIT_DATE,
            TRIM(CAST(rc.ENTITY_ID AS CHAR(255))) AS ID,
            TRIM(CAST(ri.ID AS CHAR(19))) AS REV_ID
            FROM TB_REV_INFO ri, TB_REV_CHANGES rc
            WHERE ri.ID=rc.REV
            UNION
            SELECT aa.AUDIT_TYPE,aa.MODIFICATION_TYPE,aa.USER_NAME,aa.REVISION_DATE,aa.ENTITY_ID,'1' FROM
            TB_ACTION_AUDIT aa;

CREATE OR REPLACE VIEW V_AUDIT AS SELECT *
            FROM V_AUDIT_DETAIL VAD
            ORDER BY VAD.AUDIT_DATE DESC;

-- Changeset src/main/resources/db/changelog.xml::EDELIVERY-3361-1::CatalinEnache
-- create UI Replication view
CREATE OR REPLACE VIEW V_MESSAGE_UI_DIFF AS SELECT
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype
            FROM
            (
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            user_message.coll_info_convers_id AS conversation_id,
            partyid5_.value AS from_id,
            partyid6_.value AS to_id,
            property.value AS from_scheme,
            property2.value AS to_scheme,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype
            FROM
            tb_message_log message_log
            LEFT OUTER JOIN tb_message_info message_info ON message_log.message_id =
            message_info.message_id,tb_user_message user_message
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid5_ ON user_message.id_pk = partyid5_.from_id
            LEFT OUTER JOIN tb_party_id partyid6_ ON user_message.id_pk = partyid6_.to_id
            WHERE
            user_message.messageinfo_id_pk = message_info.id_pk
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            UNION
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            '' AS conversation_id,
            partyid7_.value AS from_id,
            partyid8_.value AS to_id,
            property.value AS from_scheme,
            property2.value AS to_scheme,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype
            FROM
            tb_message_log message_log
            CROSS JOIN tb_messaging messaging
            INNER JOIN tb_signal_message signalmess2_ ON messaging.signal_message_id = signalmess2_.id_pk
            LEFT OUTER JOIN tb_message_info message_info ON signalmess2_.messageinfo_id_pk = message_info.id_pk
            INNER JOIN tb_user_message user_message ON messaging.user_message_id = user_message.id_pk
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid7_ ON user_message.id_pk = partyid7_.from_id
            LEFT OUTER JOIN tb_party_id partyid8_ ON user_message.id_pk = partyid8_.to_id
            CROSS JOIN tb_message_info message_info2
            WHERE
            user_message.messageinfo_id_pk = message_info2.id_pk
            AND message_info.message_id = message_log.message_id
            AND message_info.ref_to_message_id = message_info2.message_id
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            ) result WHERE result.received BETWEEN systimestamp - INTERVAL '48' HOUR AND systimestamp + INTERVAL '1'
            HOUR
            MINUS
            SELECT
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype
            FROM
            TB_MESSAGE_UI WHERE
            received BETWEEN systimestamp - INTERVAL '48' HOUR AND systimestamp + INTERVAL '1' HOUR;

-- Changeset src/main/resources/db/changelog.xml::EDELIVERY-2144_1::thomas dussart
INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME) VALUES ('1', 'ROLE_ADMIN');

INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME) VALUES ('2', 'ROLE_USER');


-- Changeset src/main/resources/db/changelog-data.xml::EDELIVERY-2144::thomas dussart
-- inserts
INSERT INTO TB_USER (ID_PK, USER_NAME, USER_PASSWORD, USER_ENABLED, USER_DELETED, DEFAULT_PASSWORD) VALUES ('1', 'admin', '$2a$10$5uKS72xK2ArGDgb2CwjYnOzQcOmB7CPxK6fz2MGcDBM9vJ4rUql36', 1, 0, 1);

INSERT INTO TB_USER (ID_PK, USER_NAME, USER_PASSWORD, USER_ENABLED, USER_DELETED, DEFAULT_PASSWORD) VALUES ('2', 'user', '$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu', 1, 0, 1);

INSERT INTO TB_USER_ROLES (USER_ID, ROLE_ID) VALUES ('1', '1');

INSERT INTO TB_USER_ROLES (USER_ID, ROLE_ID) VALUES ('2', '2');

-- Changeset src/main/resources/db/changelog-data.xml::insert_ws_default_auth::idragusa
INSERT INTO TB_AUTHENTICATION_ENTRY (ID_PK, USERNAME, PASSWD, AUTH_ROLES, DEFAULT_PASSWORD, PASSWORD_CHANGE_DATE) VALUES (HIBERNATE_SEQUENCE.nextval, 'admin', '$2a$10$5uKS72xK2ArGDgb2CwjYnOzQcOmB7CPxK6fz2MGcDBM9vJ4rUql36', 'ROLE_ADMIN', 1, sysdate);

INSERT INTO TB_AUTHENTICATION_ENTRY (ID_PK, USERNAME, PASSWD, AUTH_ROLES, ORIGINAL_USER, DEFAULT_PASSWORD, PASSWORD_CHANGE_DATE) VALUES (HIBERNATE_SEQUENCE.nextval, 'user', '$2a$10$HApapHvDStTEwjjneMCvxuqUKVyycXZRfXMwjU0rRmaWMsjWQp/Zu', 'ROLE_USER', 'urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1', 1, sysdate);

INSERT INTO TB_AUTHENTICATION_ENTRY (ID_PK, CERTIFICATE_ID, AUTH_ROLES) VALUES (HIBERNATE_SEQUENCE.nextval, 'CN=blue_gw,O=eDelivery,C=BE:10370035830817850458', 'ROLE_ADMIN');



