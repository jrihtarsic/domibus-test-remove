#The suffix of the messageId generated by this instance of domibus. Schema is:  ${UUID}@${SUFFIX}
domibus.msh.messageid.suffix=domibus.eu

#Retry Worker execution interval as a cron expression -->
domibus.msh.retry.cron=0/5 * * * * ?

#Timeout tolerance for retry messages (in miliseconds). Scheduled retries that, due to any reason, were not performed within this period will be timeout
domibus.msh.retry.tolerance=10800000

#Should unrecoverable errors should be retried or not
domibus.dispatch.ebms.error.unrecoverable.retry=true
domibus.smlzone=acc.edelivery.tech.ec.europa.eu
domibus.backend.jmsInQueue=jms/domibus.backend.jms.inQueue
domibus.jms.queue.pull=jms/domibus.internal.pull.queue
domibus.backend.etrustexInQueue=jms/domibus.backend.etrustex.inQueue
domibus.deployment.clustered=false

#The factory for creating SOAPMessage objects
messageFactoryClass=com.sun.xml.messaging.saaj.soap.ver1_2.SOAPMessageFactory1_2Impl

#If activated Domibus will verify before sending a User Message if the receiver's certificate is valid and not revoked. If the receiver's certificate is not valid or it has been revoked
#Domibus will not send the message and it will mark it as SEND_FAILURE
domibus.certificate.validation.enabled=true

#Timeout values for communication between the access points
#ConnectionTimeOut - Specifies the amount of time, in milliseconds, that the consumer will attempt to establish a connection before it times out. 0 is infinite.
domibus.dispatcher.connectionTimeout=240000

#ReceiveTimeout - Specifies the amount of time, in milliseconds, that the consumer will wait for a response before it times out. 0 is infinite.-->
domibus.dispatcher.receiveTimeout=240000

#Allows chunking when sending messages to other Access Points
domibus.dispatcher.allowChunking=false

#Specify concurrency limits via a "lower-upper" String, e.g. "5-10", or a simple upper limit String, e.g. "10" (the lower limit will be 1 in this case)
#when sending messages to other Access Points
domibus.dispatcher.concurency=3-3

#regular expression used for identifying the internal queues in the Admin Page
domibus.jms.internalQueue.expression=.*domibus\.(internal|DLQ|backend\.jms|notification\.jms|notification\.webservice|notification\.kerkovi).*

#Uncomment the following line if you need to tweak the maximum downloaded messages to be deleted by the retention worker
#message.retention.downloaded.max.delete=50
#Uncomment the following line if you need to tweak the maximum not-downloaded messages to be deleted by the retention worker
#message.retention.not_downloaded.max.delete=50

#To activate security set this to false
domibus.auth.unsecureLoginAllowed=true

#Cron expression used for configuring the retention worker scheduling. The retention worker deletes the expired messages(downloaded and not-downloaded).
domibus.retentionWorker.cronExpression=0/60 * * * * ?

#Cron expression used for configuring the message puller scheduling.
domibus.msh.pull.cron=0/20 * * * * ?

#Internal configuration provider. Do not change unless you have special requirements (i.e. dynamic discovery injection of PModes)
domibus.pmode.dao.implementation=CachingPModeProvider

#The list of mime-types that will not be compressed (in outgoing messages) even if compression is turned on for the given message.
compressionBlacklist=application/vnd.etsi.asic-s+zip,image/jpeg

#Accepted Format for MessageId
domibus.sendMessage.messageIdPattern=^[\\x20-\\x7E]*$

#Whether to delete the message payload on send failure. Defaults to false (the admin could put the message back in the send queue)
domibus.sendMessage.failure.delete.payload=false

#Maximum number of pending messages to be listed
domibus.listPendingMessages.maxCount=500

#Proxy
domibus.proxy.enabled=false
domibus.proxy.http.host=
domibus.proxy.http.port=
domibus.proxy.user=
domibus.proxy.password=
domibus.proxy.nonProxyHosts=

#The location of the keystore
domibus.security.keystore.location=${domibus.config.location}/keystores/gateway_keystore.jks
#Type of the used keystore
domibus.security.keystore.type=jks
#The password used to load the keystore
domibus.security.keystore.password=test123

#Private key
#The alias from the keystore of the private key
domibus.security.key.private.alias=blue_gw
#The private key password
domibus.security.key.private.password=test123

#Truststore
#The location of the truststore
domibus.security.truststore.location=${domibus.config.location}/keystores/gateway_truststore.jks
#The type of the used keystore
domibus.security.truststore.type=jks
#The password used to load the trustStore
domibus.security.truststore.password=test123


#EntityManagerFactory
#Packages to be scanned(comma separated)
domibus.entityManagerFactory.packagesToScan=eu.domibus
#MySQL
domibus.entityManagerFactory.jpaProperty.hibernate.connection.driver_class=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
domibus.entityManagerFactory.jpaProperty.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#Oracle
#domibus.entityManagerFactory.jpaProperty.hibernate.connection.driver_class=oracle.jdbc.xa.client.OracleXADataSource
#domibus.entityManagerFactory.jpaProperty.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
domibus.entityManagerFactory.jpaProperty.hibernate.format_sql=true
domibus.entityManagerFactory.jpaProperty.transaction.factory_class=org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory
domibus.entityManagerFactory.jpaProperty.hibernate.transaction.manager_lookup_class=org.hibernate.transaction.JBossTransactionManagerLookup

